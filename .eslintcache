[{"D:\\my-app\\src\\index.js":"1","D:\\my-app\\src\\App.js":"2","D:\\my-app\\src\\serviceWorker.js":"3","D:\\my-app\\src\\reponsive.js":"4","D:\\my-app\\src\\config\\clientConfig.js":"5","D:\\my-app\\src\\styles\\customTheme.js":"6","D:\\my-app\\src\\routes.js":"7","D:\\my-app\\src\\views.js":"8","D:\\my-app\\src\\styles\\themefile\\darktheme.js":"9","D:\\my-app\\src\\styles\\themefile\\lightTheme.js":"10","D:\\my-app\\src\\commons\\index.js":"11","D:\\my-app\\src\\styles\\genricStyle.js":"12","D:\\my-app\\src\\PrivateRoutes.js":"13","D:\\my-app\\src\\components\\Main.js":"14","D:\\my-app\\src\\components\\about\\officeBeareres.js":"15","D:\\my-app\\src\\components\\tournaments\\viewsDraws.js":"16","D:\\my-app\\src\\components\\tournaments\\tornament.js":"17","D:\\my-app\\src\\components\\about\\ClubAsscoc.js":"18","D:\\my-app\\src\\components\\legal\\legal.js":"19","D:\\my-app\\src\\components\\players\\playerList.js":"20","D:\\my-app\\src\\components\\news\\newsinfo.js":"21","D:\\my-app\\src\\components\\players\\ranking.js":"22","D:\\my-app\\src\\components\\news\\detailednews.js":"23","D:\\my-app\\src\\components\\login\\registerSteps.js":"24","D:\\my-app\\src\\components\\login\\fogotPassword.js":"25","D:\\my-app\\src\\responsiveComp\\clubAssoc.js":"26","D:\\my-app\\src\\components\\login\\registerPlayer.js":"27","D:\\my-app\\src\\responsiveComp\\ranking.js":"28","D:\\my-app\\src\\components\\login\\login.js":"29","D:\\my-app\\src\\responsiveComp\\regsteps.js":"30","D:\\my-app\\src\\components\\login\\dashboardcomp\\dashboard.js":"31","D:\\my-app\\src\\responsiveComp\\viewsDraws.js":"32","D:\\my-app\\src\\responsiveComp\\playerList.js":"33","D:\\my-app\\src\\components\\contact\\contact.js":"34","D:\\my-app\\src\\commons\\uiCommons.js":"35","D:\\my-app\\src\\commons\\userfunc.js":"36","D:\\my-app\\src\\commons\\userAuth.js":"37","D:\\my-app\\src\\AUTHSevice.js":"38","D:\\my-app\\src\\components\\tournaments\\prolegue.js":"39","D:\\my-app\\src\\APIService.js":"40","D:\\my-app\\src\\formdata\\formvalues.js":"41","D:\\my-app\\src\\components\\landingPage\\home.js":"42","D:\\my-app\\src\\components\\landingPage\\TopBar.js":"43","D:\\my-app\\src\\genricSceen\\officebeares.js":"44","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\viewEntries.js":"45","D:\\my-app\\src\\components\\MobileView\\mobileView.js":"46","D:\\my-app\\src\\components\\MobileView\\playerlistView.js":"47","D:\\my-app\\src\\commons\\genricComponents\\infoComponent.js":"48","D:\\my-app\\src\\commons\\genricComponents\\pageloader.js":"49","D:\\my-app\\src\\commons\\genricComponents\\fontAwsomicon.js":"50","D:\\my-app\\src\\commons\\genricComponents\\titlize.js":"51","D:\\my-app\\src\\commons\\genricComponents\\fieldIcon.js":"52","D:\\my-app\\src\\commons\\formfunction.js":"53","D:\\my-app\\src\\commons\\genricComponents\\snackbar.js":"54","D:\\my-app\\src\\components\\typo\\map.js":"55","D:\\my-app\\src\\formdata\\index.js":"56","D:\\my-app\\src\\globalUrls.js":"57","D:\\my-app\\src\\components\\MobileView\\responsiveListDilouge.js":"58","D:\\my-app\\src\\components\\contact\\assocList.js":"59","D:\\my-app\\src\\formdata\\matchdata.js":"60","D:\\my-app\\src\\formdata\\registeredclub.js":"61","D:\\my-app\\src\\formdata\\dashboardList.js":"62","D:\\my-app\\src\\formdata\\editDetils.js":"63","D:\\my-app\\src\\formdata\\drawresults.js":"64","D:\\my-app\\src\\formdata\\schedule.js":"65","D:\\my-app\\src\\formdata\\changePasswordFrom.js":"66","D:\\my-app\\src\\formdata\\eventsubscriptionlist.js":"67","D:\\my-app\\src\\formdata\\registerPlayer.js":"68","D:\\my-app\\src\\formdata\\verificationsteps.js":"69","D:\\my-app\\src\\formdata\\regex.js":"70","D:\\my-app\\src\\formdata\\formFields.js":"71","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\viewProspectus.js":"72","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\userProfile.js":"73","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\scheduletour.js":"74","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\GiveEntries.js":"75","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\idverifiction.js":"76","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\drawsDialouge.js":"77","D:\\my-app\\src\\commons\\genricComponents\\formGenerator.js":"78","D:\\my-app\\src\\components\\login\\dashboardcomp\\genicPayemnt.js":"79","D:\\my-app\\src\\formdata\\clubassocid.js":"80","D:\\my-app\\src\\formdata\\tableIcons.js":"81","D:\\my-app\\src\\formdata\\button.js":"82","D:\\my-app\\src\\formdata\\registeredAssociation.js":"83","D:\\my-app\\src\\components\\players\\dialouges\\baseDialouge.js":"84","D:\\my-app\\src\\formdata\\viewDrawsMenu.js":"85","D:\\my-app\\src\\formdata\\statistics.js":"86","D:\\my-app\\src\\formdata\\playerDetailsCol.js":"87","D:\\my-app\\src\\components\\about\\registeredClub.js":"88","D:\\my-app\\src\\components\\about\\registeredAssoc.js":"89","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\draws.js":"90","D:\\my-app\\src\\genricSceen\\registerdClub.js":"91","D:\\my-app\\src\\components\\landingPage\\linkpage.js":"92","D:\\my-app\\src\\formdata\\standings.js":"93","D:\\my-app\\src\\formdata\\menuData.js":"94","D:\\my-app\\src\\config\\bannerConfig.js":"95","D:\\my-app\\src\\components\\socialMediaExtracts\\mediaExtracts.js":"96","D:\\my-app\\src\\commons\\genricComponents\\imageClass.js":"97","D:\\my-app\\src\\components\\landingPage\\Sponsers.js":"98","D:\\my-app\\src\\components\\landingPage\\RegisteredAssoc.js":"99","D:\\my-app\\src\\components\\landingPage\\RegistredCulb.js":"100","D:\\my-app\\src\\components\\landingPage\\OfficeBearers.js":"101","D:\\my-app\\src\\components\\landingPage\\StatisticsContent.js":"102","D:\\my-app\\src\\components\\landingPage\\StandingContent.js":"103","D:\\my-app\\src\\components\\landingPage\\NewsContent.js":"104","D:\\my-app\\src\\components\\landingPage\\Footer.js":"105","D:\\my-app\\src\\components\\login\\dashboardcomp\\logout.js":"106","D:\\my-app\\src\\components\\MobileView\\rankingView.js":"107","D:\\my-app\\src\\components\\players\\dialouges\\tabledisplay.js":"108","D:\\my-app\\src\\genricSceen\\newsPage.js":"109","D:\\my-app\\src\\components\\tournaments\\commitedetails.js":"110","D:\\my-app\\src\\commons\\genricComponents\\charts.js":"111","D:\\my-app\\src\\components\\MobileView\\responsiveDialouge.js":"112","D:\\my-app\\src\\formdata\\playerlist.js":"113","D:\\my-app\\src\\formdata\\rankingRespTableData.js":"114","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\showResults.js":"115","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\showdraws.js":"116","D:\\my-app\\src\\genricSceen\\registeredAssoc.js":"117"},{"size":459,"mtime":1610348195863,"results":"118","hashOfConfig":"119"},{"size":633,"mtime":1610568391836,"results":"120","hashOfConfig":"119"},{"size":4948,"mtime":1608785972622,"results":"121","hashOfConfig":"119"},{"size":1065,"mtime":1610410474461,"results":"122","hashOfConfig":"119"},{"size":93,"mtime":1610571035106,"results":"123","hashOfConfig":"119"},{"size":4421,"mtime":1610409372817,"results":"124","hashOfConfig":"119"},{"size":4140,"mtime":1610761631034,"results":"125","hashOfConfig":"119"},{"size":647,"mtime":1608785972658,"results":"126","hashOfConfig":"119"},{"size":2723,"mtime":1611025613149,"results":"127","hashOfConfig":"119"},{"size":354,"mtime":1610409388133,"results":"128","hashOfConfig":"119"},{"size":152,"mtime":1608785964729,"results":"129","hashOfConfig":"119"},{"size":10294,"mtime":1610762769449,"results":"130","hashOfConfig":"119"},{"size":1916,"mtime":1610410314457,"results":"131","hashOfConfig":"119"},{"size":381,"mtime":1610407011517,"results":"132","hashOfConfig":"119"},{"size":639,"mtime":1610309533743,"results":"133","hashOfConfig":"119"},{"size":3953,"mtime":1610761106209,"results":"134","hashOfConfig":"119"},{"size":11142,"mtime":1611045269492,"results":"135","hashOfConfig":"119"},{"size":3664,"mtime":1610315629109,"results":"136","hashOfConfig":"119"},{"size":6007,"mtime":1611028808938,"results":"137","hashOfConfig":"119"},{"size":4228,"mtime":1610599775882,"results":"138","hashOfConfig":"119"},{"size":474,"mtime":1610320917273,"results":"139","hashOfConfig":"119"},{"size":9010,"mtime":1610590489938,"results":"140","hashOfConfig":"119"},{"size":3253,"mtime":1610564418001,"results":"141","hashOfConfig":"119"},{"size":8445,"mtime":1610694228717,"results":"142","hashOfConfig":"119"},{"size":11220,"mtime":1610703261735,"results":"143","hashOfConfig":"119"},{"size":856,"mtime":1610407730757,"results":"144","hashOfConfig":"119"},{"size":13171,"mtime":1610754835306,"results":"145","hashOfConfig":"119"},{"size":674,"mtime":1610408954700,"results":"146","hashOfConfig":"119"},{"size":7776,"mtime":1610690318077,"results":"147","hashOfConfig":"119"},{"size":844,"mtime":1608785971726,"results":"148","hashOfConfig":"119"},{"size":19355,"mtime":1610758840131,"results":"149","hashOfConfig":"119"},{"size":863,"mtime":1610409152843,"results":"150","hashOfConfig":"119"},{"size":663,"mtime":1610407751029,"results":"151","hashOfConfig":"119"},{"size":6394,"mtime":1611040960183,"results":"152","hashOfConfig":"119"},{"size":650,"mtime":1610313746517,"results":"153","hashOfConfig":"119"},{"size":3909,"mtime":1610736095231,"results":"154","hashOfConfig":"119"},{"size":1939,"mtime":1610421104723,"results":"155","hashOfConfig":"119"},{"size":397,"mtime":1610409625883,"results":"156","hashOfConfig":"119"},{"size":1800,"mtime":1610421692656,"results":"157","hashOfConfig":"119"},{"size":671,"mtime":1610868237149,"results":"158","hashOfConfig":"119"},{"size":853,"mtime":1610567809970,"results":"159","hashOfConfig":"119"},{"size":2818,"mtime":1610390788199,"results":"160","hashOfConfig":"119"},{"size":13511,"mtime":1610402275244,"results":"161","hashOfConfig":"119"},{"size":9842,"mtime":1611024785507,"results":"162","hashOfConfig":"119"},{"size":5567,"mtime":1610596323387,"results":"163","hashOfConfig":"119"},{"size":1567,"mtime":1610312861359,"results":"164","hashOfConfig":"119"},{"size":5770,"mtime":1610596794410,"results":"165","hashOfConfig":"119"},{"size":351,"mtime":1610315334627,"results":"166","hashOfConfig":"119"},{"size":3027,"mtime":1610325587248,"results":"167","hashOfConfig":"119"},{"size":1014,"mtime":1610429079822,"results":"168","hashOfConfig":"119"},{"size":149,"mtime":1610428938242,"results":"169","hashOfConfig":"119"},{"size":722,"mtime":1610429041143,"results":"170","hashOfConfig":"119"},{"size":6537,"mtime":1610994500680,"results":"171","hashOfConfig":"119"},{"size":1268,"mtime":1610428963707,"results":"172","hashOfConfig":"119"},{"size":3832,"mtime":1611046324766,"results":"173","hashOfConfig":"119"},{"size":1431,"mtime":1610413446900,"results":"174","hashOfConfig":"119"},{"size":596,"mtime":1611040442269,"results":"175","hashOfConfig":"119"},{"size":8876,"mtime":1610564376021,"results":"176","hashOfConfig":"119"},{"size":5456,"mtime":1611046866218,"results":"177","hashOfConfig":"119"},{"size":58150,"mtime":1608785968999,"results":"178","hashOfConfig":"119"},{"size":20601,"mtime":1610568601950,"results":"179","hashOfConfig":"119"},{"size":1119,"mtime":1610760750149,"results":"180","hashOfConfig":"119"},{"size":2003,"mtime":1610994204803,"results":"181","hashOfConfig":"119"},{"size":1133,"mtime":1610319492346,"results":"182","hashOfConfig":"119"},{"size":2339,"mtime":1610137160196,"results":"183","hashOfConfig":"119"},{"size":759,"mtime":1610567682643,"results":"184","hashOfConfig":"119"},{"size":193,"mtime":1610567908327,"results":"185","hashOfConfig":"119"},{"size":2436,"mtime":1610702775565,"results":"186","hashOfConfig":"119"},{"size":365,"mtime":1610568218485,"results":"187","hashOfConfig":"119"},{"size":1852,"mtime":1610568036365,"results":"188","hashOfConfig":"119"},{"size":479,"mtime":1610567849702,"results":"189","hashOfConfig":"119"},{"size":2826,"mtime":1609991246935,"results":"190","hashOfConfig":"119"},{"size":10225,"mtime":1610994455408,"results":"191","hashOfConfig":"119"},{"size":3986,"mtime":1610399495737,"results":"192","hashOfConfig":"119"},{"size":14093,"mtime":1611005198415,"results":"193","hashOfConfig":"119"},{"size":5131,"mtime":1610324971684,"results":"194","hashOfConfig":"119"},{"size":4272,"mtime":1610564489077,"results":"195","hashOfConfig":"119"},{"size":10250,"mtime":1610754205783,"results":"196","hashOfConfig":"119"},{"size":2457,"mtime":1610324727402,"results":"197","hashOfConfig":"119"},{"size":383,"mtime":1610315609451,"results":"198","hashOfConfig":"119"},{"size":2278,"mtime":1610568180468,"results":"199","hashOfConfig":"119"},{"size":2404,"mtime":1610567658767,"results":"200","hashOfConfig":"119"},{"size":17478,"mtime":1610568637586,"results":"201","hashOfConfig":"119"},{"size":2323,"mtime":1610564289555,"results":"202","hashOfConfig":"119"},{"size":682,"mtime":1610992148320,"results":"203","hashOfConfig":"119"},{"size":218,"mtime":1610568146104,"results":"204","hashOfConfig":"119"},{"size":238,"mtime":1610567960075,"results":"205","hashOfConfig":"119"},{"size":510,"mtime":1610317111358,"results":"206","hashOfConfig":"119"},{"size":510,"mtime":1611042799411,"results":"207","hashOfConfig":"119"},{"size":3863,"mtime":1610594869488,"results":"208","hashOfConfig":"119"},{"size":13730,"mtime":1611042187172,"results":"209","hashOfConfig":"119"},{"size":1147,"mtime":1610318662512,"results":"210","hashOfConfig":"119"},{"size":1330,"mtime":1610568126462,"results":"211","hashOfConfig":"119"},{"size":1894,"mtime":1610567889914,"results":"212","hashOfConfig":"119"},{"size":722,"mtime":1611003802521,"results":"213","hashOfConfig":"119"},{"size":4937,"mtime":1610417639719,"results":"214","hashOfConfig":"119"},{"size":344,"mtime":1610390665976,"results":"215","hashOfConfig":"119"},{"size":2820,"mtime":1611004676379,"results":"216","hashOfConfig":"119"},{"size":553,"mtime":1611041834495,"results":"217","hashOfConfig":"119"},{"size":551,"mtime":1610352035249,"results":"218","hashOfConfig":"119"},{"size":299,"mtime":1610390803629,"results":"219","hashOfConfig":"119"},{"size":936,"mtime":1610351974109,"results":"220","hashOfConfig":"119"},{"size":3988,"mtime":1611038307757,"results":"221","hashOfConfig":"119"},{"size":315,"mtime":1610318005653,"results":"222","hashOfConfig":"119"},{"size":1365,"mtime":1610428288600,"results":"223","hashOfConfig":"119"},{"size":1670,"mtime":1610422025606,"results":"224","hashOfConfig":"119"},{"size":8118,"mtime":1610590562430,"results":"225","hashOfConfig":"119"},{"size":2975,"mtime":1610564264782,"results":"226","hashOfConfig":"119"},{"size":9961,"mtime":1611011488278,"results":"227","hashOfConfig":"119"},{"size":5297,"mtime":1610564555111,"results":"228","hashOfConfig":"119"},{"size":2284,"mtime":1611038924404,"results":"229","hashOfConfig":"119"},{"size":6201,"mtime":1610413500747,"results":"230","hashOfConfig":"119"},{"size":1688,"mtime":1610567976547,"results":"231","hashOfConfig":"119"},{"size":329,"mtime":1610567998763,"results":"232","hashOfConfig":"119"},{"size":5605,"mtime":1610827819457,"results":"233","hashOfConfig":"119"},{"size":15972,"mtime":1610991912262,"results":"234","hashOfConfig":"119"},{"size":14069,"mtime":1611041979462,"results":"235","hashOfConfig":"119"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},"1p52f7e",{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"238"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"238"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"238"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"238"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"238"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"296","usedDeprecatedRules":"238"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"238"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"305"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"238"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"238"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"238"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"238"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"238"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"396"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"238"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"238"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"238"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"238"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my-app\\src\\index.js",[],["494","495"],"D:\\my-app\\src\\App.js",[],"D:\\my-app\\src\\serviceWorker.js",[],"D:\\my-app\\src\\reponsive.js",[],"D:\\my-app\\src\\config\\clientConfig.js",[],"D:\\my-app\\src\\styles\\customTheme.js",[],"D:\\my-app\\src\\routes.js",[],"D:\\my-app\\src\\views.js",[],"D:\\my-app\\src\\styles\\themefile\\darktheme.js",[],"D:\\my-app\\src\\styles\\themefile\\lightTheme.js",[],"D:\\my-app\\src\\commons\\index.js",[],"D:\\my-app\\src\\styles\\genricStyle.js",[],"D:\\my-app\\src\\PrivateRoutes.js",[],"D:\\my-app\\src\\components\\Main.js",[],"D:\\my-app\\src\\components\\about\\officeBeareres.js",[],"D:\\my-app\\src\\components\\tournaments\\viewsDraws.js",[],"D:\\my-app\\src\\components\\tournaments\\tornament.js",["496"],"import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport Card from \"@material-ui/core/Card\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Topbar from \"../landingPage/TopBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport { sessioncommons } from \"../../commons\"\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport LeagueInfo from \"./prolegue\"\nimport { } from \"../../APIService\"\nimport { commons } from \"../../commons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandPointRight } from '@fortawesome/free-solid-svg-icons'\nimport Grid from \"@material-ui/core/Grid\";\nimport customStyles from \"../../styles/genricStyle\"\nimport RefreshLoader from \"../../commons/genricComponents/pageloader\"\nimport CommitieData from \"./commitedetails\"\nimport { ApiCall } from \"../../APIService\";\nimport { Link as CoreLink } from '@material-ui/core';\nimport InfoComponent from \"../../commons/genricComponents/infoComponent\"\n//displying the tounamnet list user cn register/view\nclass Tournament extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      emessage:\"\",\n  \n      tournamentData: [],\n      eventList: [],\n      commitie: false,\n      tourType: \"ranking\",\n      tourval: [],\n      playerDetails: [],\n      open: false,\n      commitiedata: [],\n      tournamentval: []\n    };\n    this.handleChildUpdate = this.handleChildUpdate.bind(this)\n\n  }\n//api call to display the tounamnet list \"upcomming/past\"\n  loadTournamentData = () => {\n\n    let params = {};\n   \n    params.type = \"tourList\";\n   \n   \n    this.setState({ loading: true });\n      \n    ApiCall(\"POST\", params,\"coreApi\")\n \n      .then((res) => res.json())\n      .then((res) => {\n\n        if (res.status === \"success\") {\n            this.setState({\n           loading: false,\n           tournamentData: res[\"data\"],\n            tourval: res[\"data\"],\n           tournamentval: res[\"tournamentList\"],\n           tname: \"\"\n        });\n\n\n       \n\n\n\n\n\n      \n        }\n        else if (res.status==\"failure\") {\n\n          this.setState({\n            tournamentData: res[\"data\"],\n            loading: false,\n            \"emessage\": \"Something went wrong!!!\"\n\n          });\n        }\n\n\n\n     \n      })\n\n\n\n\n      .catch((error) => {\n        commons.errorLog(error)\n\n      });\n  };\n\n  componentDidMount = () => {\n    this.loadTournamentData();\n   \n  };\n\n\n\n  onsubmitdata = (tdata) => {\n   \n   let  tournamentval ={};\n    tournamentval.tournamentId = tdata._id;\n    tournamentval.tournamentName = tdata.eventName;\n    sessioncommons.setTournament(tournamentval)\n    this.props.history.push({\n      pathname: '/login',\n    });\n\n  }\n\n\n  handleClose = () => {\n    this.setState({\n      open: false\n\n    });\n  };\n//api function to get committie data\n  showCommitie = (id, name) => {\n\n\n    var params = {};\n\n\n    params.entity = \"leagueCommittee\";\n    params.tournamentId = id;\n\n\n\n    ApiCall(\"POST\", params, \"fetchData\")\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          open: true,\n          tname: name,\n          commitiedata: data[\"data\"]\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error)\n\n      });\n\n\n  };\n\n//update the  type and fetch the tournamnet data based client key \"ranking/leugue\"\n  handleChildUpdate(tourType) {\n\n    const {  tourval } = this.state\n\n    if (tourType === \"ranking\")\n\n      this.setState({\n        tourType: \"ranking\",\n        tournamentData: tourval,\n\n      })\n    else\n      this.setState({ tourType: \"leauge\", tournamentData: tourval })\n\n  }\n  render() {\n    const { classes } = this.props;\n    const { tournamentData, tourType, open, loading, tname, commitiedata} = this.state;\n   console.log(\"tourdata\", tournamentData.length)\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={3}  />\n\n        <div className={classes.root}>\n          <LeagueInfo\n            handleChildUpdate={this.handleChildUpdate}\n            loadtdata={this.loadTournamentData}\n            //loading={loading}\n          />\n\n          <Grid\n            align=\"center\"\n            justify=\"center\"\n            container\n          \n          >\n            <RefreshLoader display=\"overlay\" loading={loading} />\n\n            <Paper className={classes.tourpaper}>\n              {tournamentData.length ? (\n                tournamentData.map((value, index) => {\n                  let tournamentType = commons.checkDate(\n                    value.eventStartDate,\n                    value.eventEndDate,\n                    value.eventSubscriptionLastDate\n                  );\n                 \n                  return (\n                    <Card className={classes.tornamentcard} key={index}>\n                      <Grid\n                        container\n                        item\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        xs={12}\n                        md={12}\n                      >\n                        <Grid item xs={12} md={12}>\n                          <CardContent>\n                            <Grid container>\n                              <Grid style={{ flex: 1 }}>\n                                <Typography gutterBottom variant=\"body1\">\n                                  {\" \"}\n                                  <b>\n                                    {value.eventName !== null\n                                      ? value.eventName\n                                      : \"\"}\n                                  </b>\n                                </Typography>\n                              </Grid>\n\n                              <Grid>\n                                {tourType === \"ranking\" ? (\n                                  <CoreLink\n                                    component=\"button\"\n                                    variant=\"body1\"\n                                    onClick={() => {\n                                      this.showCommitie(\n                                        value._id,\n                                        value.eventName\n                                      );\n                                    }}\n                                  >\n                                    Committee\n                                    <FontAwesomeIcon\n                                      icon={faHandPointRight}\n                                      size=\"1x\"\n                                      style={{ width: \"2em\", color: \"black\" }}\n                                    />\n                                  </CoreLink>\n                                ) : (\n                                  \"\"\n                                )}\n                              </Grid>\n                            </Grid>\n\n                            <Grid container>\n                              <Grid item md={1} sm={2} xs={1}>\n                                <RoomIcon />\n                              </Grid>\n                              <Grid item md={11} sm={10} xs={11}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"body1\"\n                                  style={{ marginLeft: \"5px\" }}\n                                >\n                                  {value.domainName}\n                                </Typography>\n                              </Grid>\n\n                              <Grid item md={1} sm={2} xs={1}>\n                                <CalendarTodayIcon />\n                              </Grid>\n                              <Grid item xs={11} md={11} sm={10}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"body1\"\n                                  style={{ marginLeft: \"5px\" }}\n                                >\n                                  Event dates:\n                                  {commons.formatDate(value.eventStartDate)} to{\" \"}\n                                  {commons.formatDate(value.eventEndDate)}\n                                </Typography>\n                              </Grid>\n                              <Grid item xs={1} md={1} sm={2}>\n                                <ScheduleIcon />\n                              </Grid>\n                              <Grid item xs={11} md={11} sm={10}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"body1\"\n                                  style={{ marginLeft: \"5px\" }}\n                                >\n                                  Last date for registration:{\" \"}\n                                  {commons.formatDate(\n                                    value.eventSubscriptionLastDate\n                                  )}\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </CardContent>\n\n                          <CardActions style={{ justifyContent: \"flex-end\" }}>\n                            {tournamentType === \"future\" ? (\n                              <Button\n                                onClick={() =>\n                                  this.onsubmitdata(value)\n                                }\n                              >\n                                Register\n                              </Button>\n                            ) : tournamentType === \"closed\" ? (\n                              <Button disabled>Entries closed</Button>\n                            ) : (\n                              <div>\n                                <Button\n                                \n                                  component={Link}\n                                  to={`/entriesDraws/${value._id}`}\n                                >\n                                  View Entries/Draws\n                                </Button>\n                              </div>\n                            )}\n                          </CardActions>\n                        </Grid>\n                      </Grid>\n                    </Card>\n                  );\n                })\n              ) : (\n                <InfoComponent variant=\"h3\" message=\"No Tournament announced yet!!!!\"/>\n                 \n                \n                  \n               \n              )}\n\n              \n            </Paper>\n          </Grid>\n        </div>\n        <CommitieData\n          name={tname}\n          open={open}\n          data={commitiedata}\n          onClose={this.handleClose}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(Tournament));","D:\\my-app\\src\\components\\about\\ClubAsscoc.js",["497"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {  withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Topbar from \"../landingPage/TopBar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport customStyles from \"../../styles/genricStyle\"\nimport {aboutMenu }from \"../../formdata\"\n\n\n\n\nimport {\n \n    AppBar,\n    Toolbar,\n   \n    Tabs,\n    Tab,\n   \n} from \"@material-ui/core\";\n\n\n\nclass ClubAssociation extends Component {\n    state = {\n        value:this.props.location.asssocval?this.props.location.asssocval: 0,\n      \n    };\n\n    handleChange = (event, index\n    ) => {\n       \n        this.setState({\n            value: index,\n          \n        });\n    };\n    //display component\n    showComp = (index) => {\n\n\n        let Found = aboutMenu.find(item => item.value === index);\n\n        if (Found) return <div><Found.component /></div>\n\n\n        return false;\n    };\n\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { value} = this.state;\n    \n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Topbar index={0}  />\n\n\n              \n              \n                    <div className={classes.root}>\n\n\n\n                        <AppBar position=\"static\" color=\"default\">\n                            <Toolbar>\n                                <Grid container spacing={1}>\n\n\n                                    <Grid\n                                        item\n                                        md={8}\n                                        sm={8}\n                                        xs={8}\n                                        style={{ justifyContent: \"left\" }}\n                                    >\n\n\n\n                                        <div className={classes.tabContainer}>\n\n\n\n                                            <Tabs\n                                                onChange={this.handleChange}\n                                                value={value}\n                                                indicatorColor=\"primary\"\n                                                classes={{\n                                                    indicator: classes.indicator\n                                                }}\n                                              \n\n                                            >\n                                                {aboutMenu.map((item, index) => {\n\n                                                    return (\n                                                        <Tab\n                                                            key={index}\n                                                            selected\n\n\n\n                                        \n\n\n                                                          \n                                                            label={item.label}\n\n                                                        />\n\n\n\n                                                    );\n\n                                                })}\n\n                                            </Tabs>\n\n\n\n\n\n                                        </div>\n\n\n                                    </Grid>\n                                </Grid>\n                            </Toolbar>\n                        </AppBar>\n                        {this.showComp(value)}\n\n\n\n\n                    </div>\n             \n            </React.Fragment>\n        );\n\n    }\n}\n\nexport default withRouter(withStyles(customStyles)(ClubAssociation));\n","D:\\my-app\\src\\components\\legal\\legal.js",["498","499"],"D:\\my-app\\src\\components\\players\\playerList.js",[],"D:\\my-app\\src\\components\\news\\newsinfo.js",[],"D:\\my-app\\src\\components\\players\\ranking.js",[],"D:\\my-app\\src\\components\\news\\detailednews.js",["500","501"],"import React from \"react\";\n\n//import AuthService from \"../service/AuthService\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Topbar from \"../landingPage/TopBar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ApiCall } from \"../../APIService\";\nimport { API_URL } from \"../../globalUrls\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { commons } from \"../../commons\";\n\nimport ReactHtmlParser from \"react-html-parser\";\n//detailing component of newsPage \nclass DetailedNews extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      news_id: this.props.match.params.id, //id from  news info\n      filepath: \"\",\n      newsDetails: [],\n    };\n  }\n  //api for getting detail news based on id\n  loadetailedData = () => {\n    const { news_id } = this.state;\n    let apiData = {};\n    apiData.tableName = \"news\";\n   \n    apiData.type = \"getDataById\";\n\n    apiData.id = news_id;\n    ApiCall(\"POST\", apiData, \"getDataById\")\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          newsDetails: res[\"getData\"],\n          filepath: res[\"imagePath\"],\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n\n  componentDidMount = () => {\n    this.loadetailedData();\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const { filepath,  newsDetails } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={0} />\n\n        <div className={classes.root}>\n          {newsDetails.map((value, index) => {\n            return (\n              <Paper className={classes.paper} key={index}>\n                <Grid container align=\"center\">\n                  <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    sm={12}\n                 \n                  >\n                    <img\n                      style={{ width: 400, height: 200 }}\n                      alt=\"\"\n                      src={\n                        value.image\n                          ? API_URL + `${filepath}` + \"/\" + `${value.image}`\n                          : \"\"\n                      }\n                    ></img>\n                  </Grid>\n                </Grid>\n                <Grid container justify=\"center\">\n                  <Grid item md={12} xs={12} sm={12} style={{ padding: 20 }}>\n                    <Typography variant=\"h4\">\n                      {value.title ? ReactHtmlParser(value.title) : \"\"}\n                    </Typography>\n                    <Divider/>\n                  </Grid>\n                  <Grid item md={12} xs={12} sm={12}>\n                    <Paper className={classes.paper}>\n                      <Typography variant=\"h6\">\n                        {value.description !== null\n                          ? ReactHtmlParser(value.description)\n                          : \"\"}\n                      </Typography>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Paper>\n            );\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default DetailedNews;\n","D:\\my-app\\src\\components\\login\\registerSteps.js",["502","503","504"],"import Typography from \"@material-ui/core/Typography\";\n\nimport React  from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport FormGenerator from \"../../commons/genricComponents/formGenerator\";\nimport { formFileds } from \"../../formdata\"\nimport Container from '@material-ui/core/Container';\nimport formValidation from \"../../commons/formfunction\";\nimport customStyles from \"../../styles/genricStyle\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Topbar from \"../../components/landingPage/TopBar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ApiCall } from \"../../APIService\";\nimport { commons } from \"../../commons\";\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport { steps } from \"../../formdata\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Avatar from \"@material-ui/core/Avatar\";\n\nclass registerSteps extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      stepperdata: steps,\n      \"otpStatus\": false,\n      \"pwdStatus\": false,\n      \"otpbutton\": false,\n      \"otpMessage\": \"\",\n      \"pwdMessage\": \"\",\n      \"checked\": false,\n      otpcode: 0,\n      activeStep: 0,\n    };\n  }\n\n  handleNext = () => {\n    this.setState((state) => ({\n      activeStep: state.activeStep + 1,\n    }));\n  };\n\n  handleChange = (event) => {\n    this.setState((state) => ({\n      checked: !state.checked,\n    }));\n    \n  };\n//email veification\n  validateEmail = async () => {\n    const { formData } = this.state\n    let filteredata = [formData.find(item => item.id === \"email\")]\n\n    let formInputDataValid = await formValidation.validatelogin(filteredata);\n    let result = formInputDataValid.find((item) => {\n\n      if (item.error.length)\n        return item;\n      // this.setState({ \"otpbutton\": false, });\n    })\n\n\n    this.setState({ \"otpbutton\": false, \"otpMessage\": \"\", \"pwdMessage\": \"\" },\n\n\n\n    );\n\n\n    if (result === undefined) {\n\n      this.setState({ \"otpbutton\": true, },\n\n\n      );\n\n\n\n\n\n    }\n  }\n\n//otp generation\n  generateOtp = () => {\n\n\n    this.setState({\n\n      \"otpStatus\": false, \"otpMessage\": \"\", \"pwdStatus\": false, \"pwdMessage\": false\n    })\n    const data = {};\n    const formvalues = [...this.state.formData];\n    formvalues.map((obj) => {\n\n     \n      data[obj.key] = obj.value\n\n    });\n\n    let apiData = {};\n    apiData.type = \"regOtp\";\n  \n    apiData.emailId = data.emailAddress;\n      this.setState({ loading: true });\n    ApiCall(\"POST\", apiData, \"coreApi\")\n      .then(res => res.json())\n      .then(res => {\n        if (res.status === \"failure\") {\n          this.setState({ otpbutton: false, loading: false, \"otpMessage\": res.registerStatus })\n          this.resetForm();\n        }\n\n\n\n        if (res.status === \"success\") {\n          this.setState({ otpbutton: false, loading: false, \"otpStatus\": true, \"otpMessage\": res.message, \"otpcode\": res.verificationCode })\n          setTimeout(() => {\n            this.setState((state) => ({\n              otpMessage:\"\",\n              activeStep: state.activeStep + 1,\n            })\n          \n            );\n           \n          }, 2000);\n        }\n        else if (res.errors) {\n          this.setState({ loading: false, \"otpMessage\": res.errors.toString() })\n        }\n      }).catch(error => {\n        commons.errorLog(error)\n      });\n  }\n\n\n\n\n  onChange = (e) => {\n\n    let formDataInput = [...this.state.formData];\n    this.setState({ otpMessage: \"\", });\n    formDataInput.find((item) => {\n\n\n      \n\n        if (item.key === e.target.name && item.id === \"email\") {\n          item.value = e.target.value;\n          this.setState({ formData: formDataInput });\n          this.validateEmail()\n        }\n\n\n\n    })\n    this.setState({ formData: formDataInput });\n\n\n  }\n//handle change for stepper\n  changeStep = (activeStep) => {\n   \n    let { stepperdata}=this.state\n    let logObj = stepperdata.find(obj => obj[\"activestep\"] === activeStep)\n    if (logObj && logObj.component)\n      return <div><logObj.component update={this.state.formData} otp={this.state.otpcode} /></div>\n\n  }\n  \n\n \n\n  componentDidMount() {\n    const value = formFileds.filter(word => word.id ===\"email\")\n    let formDataControl = [...JSON.parse(JSON.stringify(value))];\n  \n\n    this.setState({\n      \"formData\": formDataControl,\n\n    })\n  }\n\n  render() {\n    const { classes, orientation } = this.props;\n\n    const { activeStep, checked, stepperdata, otpStatus,otpbutton, otpMessage } = this.state;\n\n    \n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={3}  />\n        <div className={classes.root}>\n          {/* <Grid container justify=\"center\"> */}\n\n          <Paper elavation={10} square={false}>\n            <Grid container spacing={2} align=\"center\">\n              <Grid item md={12} sm={12} xs={12}>\n                <div>\n                  <Stepper activeStep={activeStep}\n                    orientation={orientation ? \"vertical\" :\"horizontal\"}\n                    alternativeLabel>\n                    {stepperdata.map((steps,index) => {\n                      return (\n                        <Step key={index}>\n                          <StepLabel>{steps.label}</StepLabel>\n                        </Step>\n                      );\n                    })}\n                  </Stepper>\n               \n                  {(activeStep === 1) ? this.changeStep(1) :\n                   \n                    \n                      <Container maxWidth=\"sm\">\n                  \n\n                      <Card className={classes.card}>\n                        <CardHeader\n                          avatar={\n                            <Avatar aria-label=\"recipe\" style={{\n                              margin: 8,\n                            }}>\n                              R\n          </Avatar>\n                          }\n\n                          title=\"EMAIL VERIFICATION\"\n\n                        />\n                        <CardContent>\n                          <Grid container style={{ marginBottom: 20 }}>\n                            <Grid item  justifyContent=\"space-between\" sm={12} xs={12} md={8}>\n                              <FormControlLabel\n                                control={<Checkbox checked={this.state.checked} />}\n                                onChange={this.handleChange}\n                                style={{ margin: 0 }}\n                              />\n                              <Typography variant=\"subtitle1\" component=\"span\">\n                                KTTA Registration for 2020-2021\n                                            </Typography>\n                            </Grid>\n\n                            <Grid item sm={12} xs={12} md={4}>\n\n                              <Typography variant=\"subtitle1\" style={{ padding: 8 }} >\n                                Rs 500/-\n                                            </Typography>\n\n                            </Grid>\n\n\n\n\n\n\n\n                          </Grid>\n\n\n                          <FormGenerator\n                            formList={this.state.formData}\n\n                            onChange={this.onChange} />\n\n                        </CardContent>\n\n                        {(otpbutton && checked) ? <Button\n                          style={{ marginTop: 15 }}\n                          size=\"small\"\n                          onClick={this.generateOtp}>Generate OTP</Button> : \"\"}\n\n                        {otpStatus ? <span className={classes.success}>\n                          {otpMessage}\n                        </span> :\n                          <span className={classes.error}> {otpMessage}</span>}\n\n                      </Card>\n                      </Container>\n                    \n                  \n                  \n                 \n                   }\n                 \n                 \n              \n                 \n\n                </div>\n              </Grid>\n            </Grid>\n\n          \n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(customStyles)(registerSteps);\n","D:\\my-app\\src\\components\\login\\fogotPassword.js",["505","506","507","508","509"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport customStyles from \"../../styles/genricStyle\";\nimport Topbar from \"../../components/landingPage/TopBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { ApiCall } from \"../../APIService\";\nimport formValidation from \"../../commons/formfunction\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { changePasswordForm } from \"../../formdata\";\nimport FormGenerator from \"../../commons/genricComponents/formGenerator\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport { DialogActions } from \"@material-ui/core\";\nimport { commons } from \"../../commons\";\nimport RefreshLoader from \"../../commons/genricComponents/pageloader\";\nclass FogotPassword extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: [],\n      otpStatus: false,\n      pwdStatus: false,\n      otpbutton: false,\n      otpMessage: \"\",\n      pwdMessage: \"\",\n      loading: false,\n      dialogOpen: false,\n      otpcode: 0,\n    };\n    this.verifyForm = this.verifyForm.bind(this);\n\n    this.handleDialog = this.handleDialog.bind(this);\n  }\n\n  componentDidMount() {\n    //password change fields\n    let formDataControl = [...JSON.parse(JSON.stringify(changePasswordForm))];\n  \n\n    this.setState({\n      formData: formDataControl,\n    });\n  }\n//form reset\n  resetForm = () => {\n    let formDataControl = [...JSON.parse(JSON.stringify(changePasswordForm))];\n  \n\n    this.setState({\n      formData: formDataControl,\n      otpStatus: false,\n    });\n  };\n  handleDialog = () => {\n    this.setState({ dialogOpen: false });\n    this.props.history.push(\"/login\");\n  };\n//otp valdiation\n  showotpval = async () => {\n    const { formData } = this.state;\n    let filteredata = [formData.find((item) => item.id === \"email\")];\n\n    let formInputDataValid = await formValidation.genricFromValidation(filteredata);\n    let result = formInputDataValid.find((item) => {\n      if (item.error.length) return item;\n  \n    });\n\n    this.setState({ otpbutton: false, otpMessage: \"\", pwdMessage: \"\" });\n\n    if (result === undefined) {\n      this.setState({ otpbutton: true });\n    }\n  };\n//api call for otp generation\n  generateOtp = () => {\n    this.setState({\n      otpStatus: false,\n      otpMessage: \"\",\n      pwdStatus: false,\n      pwdMessage: false,\n    });\n    const data = {};\n    const formvalues = [...this.state.formData];\n    formvalues.map((obj) => {\n      data[obj.key] = obj.value;\n    });\n\n    let apiData = {};\n    apiData.type = \"forgotOtp\";\n  \n    \n    apiData.emailId = data.email;\n     this.setState({ loading: true });\n    ApiCall(\"POST\", apiData, \"coreApi\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.status === \"failure\"){\n\n        \n          this.setState({\n            otpbutton: false,\n            loading: false,\n            otpMessage: res.message,\n          });\n        }\n        if (res.status === \"success\") {\n          this.setState({\n            otpbutton: false,\n            otpStatus: true,\n            loading: false,\n            otpMessage: res.message,\n            otpcode: res.verificationCode,\n          });\n        } else if (res.errors) {\n          this.setState({ otpMessage: res.errors.toString() })\n        }\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n//api call for submitting new password\n  verifyForm = async (e) => {\n    e.preventDefault();\n    this.setState({ pwdMessage: \"\" });\n    let formData = this.state.formData;\n\n    formData = await formValidation.genricFromValidation(\n      formData,\n      this.state.otpcode\n    );\n\n    let result = formData.find((item) => {\n      if (item && item.error.length) return item;\n    });\n\n    this.setState({ formData: formData });\n\n    if (result === undefined) {\n      const data = {};\n      const formvalues = this.state.formData;\n      formvalues.map((obj) => {\n        data[obj.id] = obj.value;\n      });\n\n      let apiData = {};\n      apiData.type = \"setPassword\";\n    \n    \n      apiData.verificationCode = data.otp;\n        apiData.userId = data.email;\n        apiData.password = data.confirmPassword;\n\n      this.setState({ loading: true });\n      ApiCall(\"POST\", apiData, \"coreApi\")\n        .then((res) => res.json())\n        .then((res) => {\n          if (res.message) {\n            this.setState({ pwdMessage: res.message });\n            this.resetForm();\n          }\n          if (res.status === \"success\") {\n            this.setState({\n              pwdStatus: true,\n              loading: false,\n              dialogOpen: true,\n            });\n            this.resetForm();\n          }\n        })\n        .catch((error) => {\n          commons.errorLog(error);\n        });\n    }\n  };\n //change handler for input fileds of form.\n  onChange = (e) => {\n    let formDataInput = [...this.state.formData];\n    this.setState({ otpMessage: \"\" });\n    formDataInput.find((item) => {\n      if (item.key === e.target.name) {\n        item.type === \"number\"\n          ? (item.value = parseInt(e.target.value))\n          : (item.value = e.target.value);\n\n        if (item.key === e.target.name && item.type !== \"string\")\n          item.value = e.target.value;\n        if (item.type === \"date\") {\n          //  let formatDate = moment(e.target.value).format('DD-MM-YYYY');\n          //  item.value = formatDate\n        }\n        if (item.key === e.target.name && item.type === \"string\") {\n          item.value = e.target.value;\n          this.setState({ formData: formDataInput });\n          this.showotpval();\n        }\n      }\n    });\n    this.setState({ formData: formDataInput });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n    \n      otpStatus,\n      pwdStatus,\n      otpMessage,\n      loading,\n      otpbutton,\n      pwdMessage,\n      dialogOpen,\n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={3} />\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <RefreshLoader display=\"overlay\" loading={loading} />\n            <Grid\n              justify=\"center\"\n              alignItems=\"center\"\n              container\n              style={{\n                marginTop: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n           \n            >\n              <Avatar\n                style={{\n                  margin: 8,\n                  backgroundColor: \"red\",\n                }}\n              >\n                <LockOpenIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Change Password\n              </Typography>\n            </Grid>\n\n            <Container maxWidth=\"xs\">\n              <form>\n                <FormGenerator\n                  formList={this.state.formData}\n                  onChange={this.onChange}\n                  xx={123}\n                />\n                {/* {formData.map((item, index) => {\n                                    const styleObj = {};\n                                    if (item.hidden) styleObj[\"display\"] = \"none\";\n\n                                    return (<TextField\n                                        key={index}\n                                        variant='outlined'\n                                        type={item.type}\n                                        disabled={item.disabled ? true : false}\n                                        hidden={item.hidden ? true : false}\n                                        label={item.hidden ? '' : item.displayName}\n                                        name={item.key}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        value={item.value}\n                                        onChange={this.onChange}\n                                        error={item.error.length ? true : false}\n                                        helperText={item.error}\n                                        autoComplete=\"off\"\n                                        style={styleObj}\n                                    />)\n\n                                })} */}\n                {otpbutton ? (\n                  <Button\n                    style={{ marginBottom: 10 }}\n                    size=\"small\"\n                    onClick={this.generateOtp}\n                  >\n                    Request OTP\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n\n                <Button\n                  onClick={this.verifyForm}\n                  fullWidth\n                  disabled={otpStatus ? false : true}\n                >\n                  Submit\n                </Button>\n\n                {otpStatus ? (\n                  <span className={classes.success}>{otpMessage}</span>\n                ) : (\n                  <span className={classes.error}> {otpMessage}</span>\n                )}\n\n                <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                  <div>\n                    <Dialog\n                      open={dialogOpen}\n                      aria-labelledby=\"alert-dialog-title\"\n                      aria-describedby=\"alert-dialog-description\"\n                    >\n                      <DialogTitle id=\"alert-dialog-title\">\n                        Password Reset\n                      </DialogTitle>\n                      {pwdStatus ? (\n                        <DialogContent>\n                          <DialogContentText id=\"alert-dialog-description\">\n                            {pwdMessage} successfully. Please login again\n                          </DialogContentText>\n                        </DialogContent>\n                      ) : (\n                        <DialogContent>\n                          <DialogContentText id=\"alert-dialog-description\">\n                            {pwdMessage}\n                          </DialogContentText>\n                        </DialogContent>\n                      )}\n                      <DialogActions>\n                        <Button\n                          color=\"primary\"\n                          autoFocus\n                          onClick={this.handleDialog}\n                        >\n                          Ok\n                        </Button>\n                      </DialogActions>\n                    </Dialog>\n                  </div>\n                </div>\n              </form>\n            </Container>\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(withStyles(customStyles)(FogotPassword));\n","D:\\my-app\\src\\responsiveComp\\clubAssoc.js",[],"D:\\my-app\\src\\components\\login\\registerPlayer.js",["510","511","512","513","514","515","516"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {  withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport customStyles from \"../../styles/genricStyle\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { ApiCall } from \"../../APIService\";\nimport formValidation from \"../../commons/formfunction\";\nimport Container from \"@material-ui/core/Container\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { commons } from \"../../commons\";\nimport { registration, registred_clubs } from \"../../formdata\";\nimport FormGenerator from \"../../commons/genricComponents/formGenerator\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport RefreshLoader from \"../../commons/genricComponents/pageloader\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport { DialogActions } from \"@material-ui/core\";\nclass playerRegister extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formData: [],\n      emailfield: this.props.update,\n      otpcode: this.props.otp,\n      otpStatus: false,\n      pwdStatus: false,\n      otpbutton: false,\n      otpMessage: \"\",\n      pwdMessage: \"\",\n      order_id: {},\n      registredClub: [],\n      dialogOpen: false,\n      loading: false,\n      regfees: \"1\",\n      paymentid: \"\",\n      \n    }\n    this.verifyForm = this.verifyForm.bind(this);\n\n    this.handleDialog = this.handleDialog.bind(this);\n  }\n//api call for club data  which is used in dropdown  in registration form\n  loadClubData = () => {\n    let params = {};\n\n  \n    params.type = \"academylist\";\n\n\n    ApiCall(\"POST\", params, \"coreApi\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (!res[\"status\"]) {\n          console.log(\"api error\" + res[\"status\"]);\n        }\n        return res;\n      })\n      .then((res) => {\n        this.setState({\n          registredClub: res[\"data\"],\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n\n  componentDidMount() {\n      //registration change fields\n      this.loadClubData();\n    let emailvalue = this.state.emailfield;\n\n    let formDataControl = [...JSON.parse(JSON.stringify(registration))];\n   \n\n    formDataControl.map((item, index) => {\n      if (item.key === \"emailAddress\") {\n        item[\"value\"] = emailvalue[0].value;\n      }\n    });\n\n    this.setState({\n      formData: formDataControl,\n    });\n  }\n\n//clear fileds if registration fails\n  resetForm = () => {\n    let emailvalue = this.state.emailfield;\n\n    let formDataControl = [...JSON.parse(JSON.stringify(registration))];\n   \n\n    formDataControl.map((item, index) => {\n      if (item.key === \"emailAddress\") {\n        item[\"value\"] = emailvalue[0].value;\n      }\n    });\n\n    this.setState({\n      formData: formDataControl,\n      otpStatus: false,\n    });\n  };\n\n  //dialog for  registration completion message\n  handleDialog = () => {\n    this.setState({ dialogOpen: false });\n    this.props.history.push(\"/login\");\n  };\n\n\n\n\n//displaying payement modal\n  displayRazorpay = async (formdata) => {\n    const res = await commons.loadScript (\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n//function to get order_id to pass to options \n    await this.loadpaymentdata();\n     const options = {\n      key: \"rzp_live_kApuBzXGZuYXGG\",\n      currency: \"INR\",\n      amount: (parseInt(this.state.regfees) * 100).toString(),\n      order_id: this.state.order_id,\n      name: \"PLAYER REGISTRATION\",\n      description: \"Registration amount\",\n\n      handler: (response) => {\n        alert(response.razorpay_payment_id);\n        if (response.razorpay_payment_id) {\n          this.setState({ paymentid: response.razorpay_payment_id });\n          this.submitfom(response.razorpay_payment_id, this.state.regfees);\n        }\n      },\n      prefill: {\n        name: formdata.name,\n        email: formdata.email,\n        phone_number: formdata.phoneNo,\n      },\n    };\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.on(\"payment.failed\", function (response) {\n      alert(response.error.description);\n    });\n    paymentObject.open();\n  };\n//api call for  oder_id for payment \n  loadpaymentdata = async () => {\n    const formvalues = this.state.formData;\n    let data = commons.displayfileds(formvalues);\n\n   // let timeStamp = data.email + \"_\" + Math.floor(Date.now());\n    let apiData = {};\n    apiData.type =\"create_order\";\n    apiData.amount = (parseInt(this.state.regfees) * 100).toString();\n      \n    await ApiCall(\"POST\",apiData,\"coreApi\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (res) {\n          this.setState({ order_id: res.orderId });\n        }\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n\n//api call to server to store the transaction_id/form fileds\n  submitfom = async (id,amount) => {\n\n    const formvalues = this.state.formData;\n    let data = commons.displayfileds(formvalues);\n    let apiData = {}\n    apiData.client_key= \"TSA\";\n    apiData.type=\"playerReg\";\n \n    apiData.userName = data.name;\n    apiData.verificationCode = data.otp;\n    apiData.emailAddress = data.email;\n    apiData.password = data.password;\n    apiData.clubNameId = data.clubNameId;\n    \n     apiData.transactionID = id;\n      apiData.transactionAmount = amount;\n      apiData.approvalCode = \"TSA\";\n    \n   \n    apiData.dob = data.DOB;\n    this.setState({ loading: true });\n    await fetch('https://sports-whiz.herokuapp.com/sports', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(apiData)\n          \n    })\n      .then((res) => res.json())\n      .then((res) => {\n        if (res && res.data) {\n          if (res.data.status === \"failure\") {\n            this.setState({ pwdMessage: res.message, loading: false });\n            this.resetForm();\n          } else {\n            this.setState({\n              pwdStatus: true,\n              dialogOpen: true,\n              loading: false,\n            });\n            this.resetForm();\n          }\n        }\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n//function for form validation\n  verifyForm = async (e) => {\n  \n    e.preventDefault();\n    this.setState({ pwdMessage: \"\" });\n    let formData = this.state.formData;\n    let data = commons.displayfileds(formData);\n    formData = await formValidation.genricFromValidation(\n      formData,\n      this.state.otpcode\n    );\n \n    let result = formData.find((item) => {\n      if (item && item.error.length) return item;\n    });\n\n    this.setState({ formData: formData });\n\n    if (result === undefined) {\n     \n      this.displayRazorpay(data);\n    }\n  };\n\n  //change handler for input fileds of form.\n  onChange = (e) => {\n    let formDataInput = [...this.state.formData];\n    this.setState({ otpMessage: \"\" });\n    formDataInput.find((item) => {\n      if (item.key === e.target.name) {\n        item.type === \"number\"\n          ? (item.value = parseInt(e.target.value))\n          : (item.value = e.target.value);\n\n        if (item.key === e.target.name && item.type !== \"string\")\n          item.value = e.target.value;\n        if (item.type === \"date\") {\n       \n          item.value = e.target.value;\n\n         \n        }\n\n        if (item.key === e.target.name && item.id === \"email\") {\n          item.value = e.target.value;\n          this.setState({ formData: formDataInput });\n          this.showotpval();\n        } else if (item.key === e.target.name && item.type === \"string\")\n          item.value = e.target.value;\n      }\n    });\n    this.setState({ formData: formDataInput });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      formData,\n     \n      \n      pwdStatus,\n      registredClub,\n      pwdMessage,\n      dialogOpen,\n      loading,\n    } = this.state;\n\n    let role_groups = formValidation.chunkArray(2, formData);\n\n    console.log(formData);\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <Grid\n              justify=\"center\"\n              alignItems=\"center\"\n              container\n              style={{\n                marginTop: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n              \n            >\n              <RefreshLoader display=\"overlay\" loading={loading} />\n            </Grid>\n\n            <Container maxWidth=\"sm\">\n              <Card style={{ margin: \"10px\" }}>\n                <CardHeader\n                  avatar={\n                    <Avatar\n                      aria-label=\"recipe\"\n                      style={{\n                        margin: 8,\n                        backgroundColor: \"red\",\n                      }}\n                    >\n                      R\n                    </Avatar>\n                  }\n                  title=\"Player Registration\"\n                />\n                <CardContent>\n                  <FormGenerator\n                    data={registredClub}\n                    groups={role_groups}\n                    groupBy={2}\n                    onChange={this.onChange}\n                  />\n                  {/* {formData.map((item, index) => {\n                                    const styleObj = {};\n                                    if (item.hidden) styleObj[\"display\"] = \"none\";\n\n                                    return (<TextField\n                                        key={index}\n                                        variant='outlined'\n                                        type={item.type}\n                                        disabled={item.disabled ? true : false}\n                                        hidden={item.hidden ? true : false}\n                                        label={item.hidden ? '' : item.displayName}\n                                        name={item.key}\n                                        fullWidth\n                                        margin=\"normal\"\n                                        value={item.value}\n                                        onChange={this.onChange}\n                                        error={item.error.length ? true : false}\n                                        helperText={item.error}\n                                        autoComplete=\"off\"\n                                        style={styleObj}\n                                    />)\n\n                                })} */}\n\n                  <Button\n                    onClick={this. verifyForm}\n                    style={{ marginTop: 10 }}\n                    fullWidth\n                  >\n                    Register\n                  </Button>\n\n                  <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                    {pwdStatus ? (\n                      <div>\n                        <span\n                          style={{ float: \"left\" }}\n                          className={classes.success}\n                        >\n                          {pwdMessage}\n                        </span>\n                        <Dialog\n                          open={dialogOpen}\n                          aria-labelledby=\"alert-dialog-title\"\n                          aria-describedby=\"alert-dialog-description\"\n                        >\n                          <DialogTitle id=\"alert-dialog-title\">\n                            Player Registation{\" \"}\n                          </DialogTitle>\n                          <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">\n                              Registation Completed.Please login\n                            </DialogContentText>\n                          </DialogContent>\n                          <DialogActions>\n                            <Button\n                              color=\"primary\"\n                              autoFocus\n                              onClick={this.handleDialog}\n                            >\n                              Ok\n                            </Button>\n                          </DialogActions>\n                        </Dialog>\n                      </div>\n                    ) : (\n                      <span style={{ float: \"left\" }} className={classes.error}>\n                        {pwdMessage}\n                      </span>\n                    )}\n                  </div>\n                </CardContent>\n              </Card>\n            </Container>\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(withStyles(customStyles)(playerRegister));\n","D:\\my-app\\src\\responsiveComp\\ranking.js",[],"D:\\my-app\\src\\components\\login\\login.js",["517","518"],"import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { formFileds } from \"../../formdata\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport customStyles from \"../../styles/genricStyle\";\nimport Topbar from \"../../components/landingPage/TopBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { sessioncommons } from \"../../commons\";\nimport { ApiCall } from \"../../APIService\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport formValidation from \"../../commons/formfunction\";\nimport SnackPopup from \"../../commons/genricComponents/snackbar\";\n\nimport { commons } from \"../../commons\";\nimport FieldIcon from \"../../commons/genricComponents/fieldIcon\";\n\nfunction cloneArray(arrayToClone) {\n  let clonedArray = arrayToClone.map((item) => ({ ...item }));\n  return clonedArray;\n}\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formdata: [],\n\n      loading: false,\n      requestStatus: \"\",\n      loginData: {},\n    };\n  }\n\n  componentDidMount() {\n    if (sessioncommons.getUser()) {\n      this.props.history.push({\n        pathname: \"/dashboard\",\n      });\n     \n    } else {\n      let data = cloneArray(formFileds);\n      this.setState({ formdata: data });\n    }\n  }\n//redirection to dashboad on success\n  handleSuccessfulAuth() {\n    this.props.history.push({\n      pathname: \"/dashboard\",\n    });\n  }\n//api call for login data\n  handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const formvalues = [...this.state.formdata];\n    let formInputDataValid = await formValidation.genricFromValidation(formvalues);\n\n    let result = formInputDataValid.find((item) => {\n     \n      if (item.error.length) return item;\n    });\n\n    this.setState({ formdata: formInputDataValid });\n    if (result === undefined) {\n      const data = {};\n      const formvalues = [...this.state.formdata];\n      formvalues.map((obj) => {\n        return(\n        data[obj.id] = obj.value\n        \n        )\n      });\n\n      let apiData = {};\n      apiData.type = \"userLogin\";\n    \n      \n      apiData.userName = data.email;\n        apiData.userPassword = data.password;\n        apiData.emailOrPhoneFlag = 1;\n        apiData.loginRole = \"Player\";\n      apiData.paymentValid = \"yes\";\n\n      ApiCall(\"POST\", apiData, \"coreApi\")\n        .then((response) => response.json())\n        .then((res) => {\n          if (res.status === \"success\")\n          {\n               if(typeof res.data === \"object\")\n               {\n                this.setState({ loginData: res.data });\n                sessioncommons.setUserSession(res.data);\n                this.handleSuccessfulAuth();\n              } else if (typeof res.data === \"string\") {\n                this.setState({\n                  requestStatus:res.data,\n                });\n              }\n\n          }\n          \n      \n        })\n        .catch((error) => {\n          commons.errorLog(error);\n        });\n    }\n  };\n//change handler for input fileds of form.\n  handleChange = (e) => {\n    const formvalues = [...this.state.formdata];\n\n    formvalues.find((el) => {\n      if (el && el.id === e.target.id) el.value = e.target.value;\n    });\n\n    this.setState({\n      formdata: formvalues,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { formdata, requestStatus} = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={3} />\n\n        <div className={classes.root}>\n          <Paper className={classes.paper}>\n            <Grid\n              justify=\"center\"\n              alignItems=\"center\"\n              container\n              style={{\n                marginTop: 10,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n             \n            >\n              <Avatar\n                style={{\n                  margin: 8,\n                }}\n              >\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Login\n              </Typography>\n\n              <Grid\n                item\n                xs={12}\n                sm={8}\n                md={6}\n                className={classes.loginpaper}\n                component={Paper}\n                elevation={10}\n                square\n              >\n                <form noValidate className={classes.form} autoComplete=\"off\">\n                  {formdata.map((formval, index) => {\n                    return (\n                      <TextField\n                        key={index}\n                        variant=\"outlined\"\n                        autoFocus={formval.id ===\"email\" ? true : false}\n                        margin=\"normal\"\n                        required={formval.required ? formval.required : false}\n                        multiline={\n                          formval.multiline ? formval.multiline : false\n                        }\n                        error={formval.error ? true : false}\n                        helperText={formval.error}\n                        id={formval.id}\n                        rows={formval.rows ? formval.rows : \"\"}\n                        value={formval.value}\n                        fullWidth\n                        onChange={this.handleChange}\n                        label={formval.label}\n                        type={formval.type}\n                        InputLabelProps={{\n                          classes: {\n                            root: classes.label,\n                            focused: classes.cssFocused,\n                          },\n                        }}\n                        InputProps={{\n                          classes: {\n                            root: classes.cssOutlinedInput,\n                            focused: classes.cssFocused,\n                            notchedOutline: classes.notchedOutline,\n                            input: classes.input,\n                          },\n                          startAdornment: <FieldIcon name={formval.adorment} />,\n                        }}\n                      />\n                    );\n                  })}\n                  <Button\n                    onClick={this.handleFormSubmit}\n                    fullWidth\n                    type=\"submit\"\n                    className={classes.loginsubmit}\n                  >\n                    Submit\n                  </Button>\n\n                  <Grid container>\n                    <Grid item xs>\n                      <Link\n                        to={{\n                          pathname: \"/fogotPassword\",\n                        }}\n                        variant=\"body2\"\n                      >\n                        Forgot password?\n                      </Link>\n                    </Grid>\n\n                    <Grid item>\n                      <Link to={{ pathname: \"/registerSteps\" }} variant=\"body2\">\n                        {\"Don't have an account? Sign Up\"}\n                      </Link>\n                    </Grid>\n                  </Grid>\n\n                  {requestStatus.length ? (\n                    <SnackPopup message={requestStatus} type=\"error\" />\n                  ) : (\n                    \"\"\n                  )}\n                </form>\n              </Grid>\n            </Grid>\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default withRouter(withStyles(customStyles)(Login));\n","D:\\my-app\\src\\responsiveComp\\regsteps.js",["519","520","521","522","523"],"import registerSteps from \"../components/login/registerSteps\"\nimport React, { useEffect } from 'react';\nimport { Desktop, Tablet, Mobile, Default } from \"../views\"\nimport ClubAssociation from \"../components/about/ClubAsscoc\"\nimport { aboutMenu } from \"../formdata\"\nimport Topbar from \"../components/landingPage/TopBar\"\n\nimport Mobileview from \"../components/MobileView/mobileView\"\nconst playerRegistration = (props) => {\n    const { classes } = props;\n\n    return (<div>\n        <Desktop>\n            <registerSteps classes={classes} />\n        </Desktop>\n        <Tablet>\n            <Topbar tab={true} />\n            <registerSteps orientation={true} />\n        </Tablet>\n        <Mobile>\n            <Topbar tab={true} />\n            <registerSteps orientation={true} />\n        </Mobile>\n\n    </div>)\n\n}\n\n\n\nexport default playerRegistration",["524","525"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\dashboard.js",["526","527","528","529","530","531"],"import React, { Component } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport Typography from \"@material-ui/core/Typography\";\nimport customStyles from \"../../../styles/genricStyle\"\nimport Topbar from \"../../landingPage/TopBar\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Logout from \"../../login/dashboardcomp/logout\"\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Grid from \"@material-ui/core/Grid\";\nimport { ApiCall } from \"../../../APIService\";\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport { commons } from \"../../../commons\";\nimport formValidation from \"../../../commons/formfunction\"\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport clsx from 'clsx';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport List from '@material-ui/core/List';\n\nimport { fileCall } from \"../../../APIService\"\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {  withRouter } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport { dashboardData } from \"../../../formdata\" \nimport Container from '@material-ui/core/Container';\nimport Downloadpdf from \"../../tournaments/ViewsDraws/drawsDialouge\";\nimport {\n   \n   \n    Paper,\n   \n} from \"@material-ui/core\";\nimport SnackPopup from \"../../../commons/genricComponents/snackbar\"\nimport { sessioncommons } from \"../../../commons\"\nimport RefreshLoader from \"../../../commons/genricComponents/pageloader\"\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            logout: false,\n            pdata: false,\n            value: 0,\n            name: \"\",\n            activeStep: 0,\n            uploadedFile: null,\n            error: {},\n            open: true,\n            \"message\": '',\n            playerDetails: [],\n            requestStatus: \"\",\n            uploadedstatus: {},\n            iduploaded: null,\n            loading: false,\n            notup: false,\n            uploaded: false,\n\n            //tournamentId: this.props.match.params.id,\n            pdfopen: false,\n            prosvalue:\"Prospectus\",\n            download:false,\n            ViewPdf: \"\",\n            validPdf: false,\n        };\n    }\n\n\n    handleDrawerOpen = () => {\n        this.setState({ open: true })\n    };\n    handleDrawerClose = () => {\n        this.setState({ open: false })\n    };\n    logout = () => {\n        this.setState({ logout: !this.state.logout })\n    }\n\n    handleChange = (event, index) => {\n        \n       debugger\n\n        let Found = dashboardData.find(item => item.value === index);\n        this.setState({\n            value: Found.value,\n         \n         \n        });\n    };\n    showComp = (index) => {\n\n\n        let Found = dashboardData.find(item => item.value === index);\n\n        if (Found) return <div><Found.component/></div>\n\n\n        return false;\n    };\n    downloaddraws = () => {\n        this.setState({\n            download: true,\n\n           \n        });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n      \n      \n        \n     \n        let fileVal = formValidation.validateFile(this.state.uploadedFile);\n        this.setState({ message: fileVal });\n        if (fileVal) {\n            if (!fileVal.status) {\n                this.setState({ \"message\": fileVal.msg })\n            }\n            else {\n                this.setState({ \"message\": fileVal.msg })\n                let loggeduser = sessioncommons.getUser()\n                let params = {};\n               \n                params.playerName = loggeduser.userName;\n                params.affiliationId = loggeduser.affiliationId;\n                params.playerEmail = loggeduser.emailAddress;\n                params.file = this.state.uploadedFile;\n\n                let fData = new FormData();\n\n                for (let key in params) {\n                    fData.append(key, params[key]);\n                }\n                this.setState({ loading: true });\n                fileCall(\"POST\", fData, \"playerupload\")\n                    .then((res) => res.json())\n                    .then(res => {\n                        if (res.recordAdded && res.message) {\n                          \n\n                            this.setState({\n                                loading: false,\n\n                                uploadedstatus: res.message\n                            })\n\n                           \n                           \n                        }\n\n                        \n                    })\n                    .then((res) => {\n                        setTimeout(() => {\n                            this.onReset();\n                        }, 1000);\n                    })\n\n              \n                    .catch((error)=>{\n                        this.setState({\n                            loading: false,\n                            iduploaded: false,\n                            message: \"Please try after some  time\",\n                        });\n\n                        console.log(\"upload error \" + error);\n                    });\n\n              \n            }\n        }\n    };\n\n\n    onChange = (e) => {\n        this.setState({\n            uploadedFile: e.target.files[0],\n           \n        });\n    };\n\n//reset file data\n    onReset() {\n        this.refs.file.value = \"\";\n        this.setState({\n            uploaded: true,\n            notup: false\n        });\n    }\n//check if player uploded the doc\n    checkidverification = () => {\n    \n        let loggeduser = sessioncommons.getUser()\n        let playerdata = sessioncommons.getplayerDetails()\n\n        if (loggeduser && playerdata) {\n            let affiliationId = loggeduser.affiliationId;\n            let userId = playerdata.find(\n                (obj) => affiliationId === obj[\"player_affliation_id\"]\n            );\n\n            if (userId) {\n                this.setState(\n                    {\n                       \n                        notup: true,\n                    },\n                 \n                );\n            } else {\n                this.setState(\n                    {\n\n                        \n                        uploaded:true,\n                    },\n                 \n                );\n            }\n        }\n\n\n\n\n\n    };\n    \n\n   \n    handleClose = () => {\n        this.setState({\n\n            pdfopen: false,\n        });\n    };\n\n\n\n\n    componentDidMount() {\n       \n        this.setState({ pdfopen: false });\n        // let data = \"http://karnatakatt.com/pdf/fp-prospectus.pdf\"\n       \n\n        // this.setState({\n        //     loading: false,\n        //     ViewPdf: data,\n        //     pdfopen: true,\n        //     validPdf: true,\n        // });\n     \n        // {\n        //     let apiData = {};\n        //     apiData.tableName = \"playerdetails\";\n           \n        //     apiData.type = \"getData\"\n        //     this.setState({ pdata:true, loading: true });\n        //     ApiCall(\"POST\", apiData, \"getData\")\n\n        //         .then(res => res.json())\n        //         .then((res) => {\n        //             if (res && res.status === \"success\" && res.getData) {\n\n        //                 this.setState({\n        //                     loading: false,\n        //                     pdata: false,\n        //                     playerDetails: res[\"getData\"],\n\n        //                 });\n\n        //             }\n\n                  \n\n        //             sessioncommons.setplayerSession(res[\"getData\"])\n                 \n\n        //         }).then((res) => {\n                 \n                 \n                   \n        //                 this.checkidverification();\n                  \n\n        //         })\n                \n                \n                \n        //         .catch(error => {\n        //             commons.errorLog(error)\n        //         });\n\n        // }\n\n\n\n    }\n\n    render() {\n        const { classes } = this.props;\n        const {  download ,pdata, uploadedstatus, notup, uploaded, message, open, loading, value,\n              pdfopen,\n            validPdf,\n            ViewPdf,\n            prosvalue,\n           } = this.state\n      \n      \n       \n        const tname = sessioncommons.getTournament()\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Topbar index={3} />\n                <div className={classes.rootDashboard}>\n                 \n                    <Drawer\n                        variant=\"permanent\"\n                        classes={{\n                            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n                        }}\n                        open={open}\n                    >\n                        <div className={classes.toolbarIcon}>\n                            {!open ? (<IconButton\n                                edge=\"start\"\n                                color=\"inherit\"\n                                aria-label=\"open drawer\"\n                                onClick={this.handleDrawerOpen}\n                                className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n                            >\n                                <MenuIcon/>\n                            </IconButton>) : <IconButton onClick={this.handleDrawerClose}>\n                                    <ChevronLeftIcon />\n                                </IconButton>}\n                          \n                           \n                        </div>\n                        <Divider/>\n                        <List> {dashboardData.map((nestedItem, index) => {\n                            return (\n                                <ListItem\n                                    className={classes.ListItemu}\n                                    key={index}\n                                    selected={value === index}\n                                    button\n                                    onClick={(e) =>\n                                        this.handleChange(e, index)\n                                    }\n                                \n                                  \n                                   \n                                >\n                                    <ListItemIcon>{nestedItem.icon ? nestedItem.icon : ''}</ListItemIcon>\n                                    <ListItemText primary={nestedItem.label} />\n                                </ListItem>\n                                \n                            );\n                        })}</List>\n                        <Divider />\n                    \n                    </Drawer>\n                    <main className={classes.content}>\n                        <div className={classes.appBarSpacer}>\n                            <Grid container style={{ marginBottom: 15 }}>\n                                <Grid style={{ flex: 1 }} >\n                                    <Typography gutterBottom variant=\"h4\" component=\"span\">\n                                        KTTA\n                                            </Typography>\n                                </Grid>\n                              \n                                <Grid>\n\n                                    <Button onClick={this.downloaddraws}\n                                        style={{ marginRight: 30 }}\n                                        startIcon={<DescriptionIcon/>}\n                                >\n                                    Prospectus\n                                            </Button>\n\n                                </Grid>\n\n                                <Grid>\n                                    <Button onClick={this.logout}\n                                        startIcon={<ExitToAppIcon />}\n                                    >\n                                        Logout\n                                            </Button>\n                                    {this.state.logout &&\n                                        <Logout />\n                                    }\n\n\n\n                                </Grid>\n\n\n                               \n\n\n                            </Grid>\n                            </div>\n                        <Divider />\n                        <Container maxWidth=\"md\" >\n                            <Grid\n                                \n                                alignItems=\"center\"\n                                justify=\"center\"\n                                container\n                               \n                            >\n                                <Grid item xs={12} md={12}>\n                                 \n                                    <Paper className={classes.contentpaper}>\n\n{/*                                            \n                                            {pdata &&\n                                                <Grid align=\"center\" justify=\"center\" container >\n                                                    <Grid>\n                                                        <RefreshLoader display=\"normal\" loading={loading} />\n                                                    </Grid>\n                                                </Grid>} */}\n\n                                            <Grid  container>\n                                               \n                                                    \n                                                      \n\n                                                      \n                                                            <Grid container align=\"center\">\n                                                               \n                                                            {pdata &&\n                                                <Grid align=\"center\" justify=\"center\" container >\n                                                    <Grid>\n                                                        <RefreshLoader style=\"normal\" loading={loading} />\n                                                    </Grid>\n                                                </Grid>}\n\n                                                                \n\n                                                                <Grid item md={12}>\n                                                                    {this.showComp(value)}\n                                                                </Grid>\n                                                            </Grid>\n\n\n\n                                                        \n\n                                                   \n\n\n\n                                                \n\n                                                {notup ?\n                                                    (<Card className={classes.card} style={{ margin: '10px' }}>\n                                                        <CardHeader\n                                                            title=\"DOB proof for verification\"\n                                                        />\n                                                        <CardContent>\n\n\n                                                            <RefreshLoader display=\"normal\" loading={loading} />\n\n                                                            <Grid item md={12} sm={12} xs={12}>\n\n                                                                <input\n                                                                    accept=\"image/*\"\n                                                                    ref=\"file\"\n                                                                    id=\"contained-button-file\"\n                                                                    type=\"file\"\n                                                                    onChange={this.onChange}\n                                                                />\n\n                                                                <label htmlFor=\"contained-button-file\">\n                                                                    <Button\n                                                                        size=\"small\"\n                                                                        startIcon={<ArrowUpwardIcon />}\n                                                                        component=\"span\"\n                                                                        onClick={this.onSubmit}\n                                                                    >\n                                                                        Upload\n                    </Button>\n                                                                </label>\n\n                                                                <Typography variant=\"body1\" color=\"error\">\n                                                                    {\" \"}\n                                                                    {message.length ? message : \"\"}\n                                                                </Typography>\n                                                                {uploadedstatus.length ? (\n                                                                    <SnackPopup\n                                                                        message={uploadedstatus}\n                                                                        type=\"success\"\n                                                                    />\n                                                                ) : (\n                                                                        \"\"\n                                                                    )}\n                                                            </Grid>\n\n                                                        </CardContent>\n\n\n\n                                                    </Card>\n                                                    ) : \"\"}\n                                            </Grid>\n                                        </Paper>\n\n                                    {download ? <Downloadpdf\n                                        open={pdfopen}\n                                        view={validPdf}\n                                        ViewPdf={ViewPdf}\n                                        tounamentgroup={prosvalue}\n                                        onClose={this.handleClose}\n                                        test={true}\n                                    /> : \"\"}\n\n\n\n\n\n                                    \n\n\n\n\n\n\n\n\n\n                                </Grid>\n\n                            </Grid>\n                        \n                        </Container>\n                           \n                     \n                    </main>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default withRouter(withStyles(customStyles)(Dashboard));\n","D:\\my-app\\src\\responsiveComp\\viewsDraws.js",[],"D:\\my-app\\src\\responsiveComp\\playerList.js",[],"D:\\my-app\\src\\components\\contact\\contact.js",["532","533","534"],"D:\\my-app\\src\\commons\\uiCommons.js",[],"D:\\my-app\\src\\commons\\userfunc.js",["535"],"import moment from \"moment\";\n\nconst commons = {}\n//genic api error\ncommons.errorLog = (e) => {\n    console.log(e)\n}\n//filter date past/present/future in tounament file\ncommons.checkDate = (input1, input2,input3) => {\n    \n    let curDate = new Date();\n    let startDate = new Date(input1);\n    let endDate = new Date(input2);\n    let endsub = new Date(input3);\n    if (moment(curDate).isBetween(startDate, endDate)) return \"current\";\n    if (moment(curDate).isAfter(moment(endDate))) return \"past\";\n    if (moment(curDate).isAfter(moment(endsub)))\n        return \"closed\"\n     if (moment(curDate).isBefore(startDate))\n        return \"future\"\n    \n}\n\n//genric function for payment script\ncommons.loadScript = (src) => {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  };\n\n\n//genric function to filter form fileds to send as params to api\ncommons.displayfileds = (formvalues) => {\n    const data = {};\n  \n    formvalues.forEach((obj) => {\n\n        if (obj.id === \"DOB\")\n            data[obj.id] = moment(obj.value).format('DD MMM YYYY');\n        else {\n            data[obj.id] = obj.value\n        }\n\n    });\n    return data\n}\n\n//format date used in tournament.js file\ncommons.formatDate = (inputDate) => {\n    inputDate = inputDate.split(\" \");\n    inputDate = inputDate[2] + \" \" + inputDate[1] + \" \" + inputDate[0];\n    return inputDate;\n}\n//  data for news/clubs/association landing page based on gridrows\ncommons.genricGrid = (apidata, gridrows, gridColumns)=>{\n\n    const x = commons.shuffleArray(apidata)\n\n    let genricData= [];\n    let i;\n    for (i = 0; i < gridrows; i++) {\n        genricData.push({ \"row\": i, \"colums\": x.slice((i * gridColumns), (i + 1) * gridColumns) })\n    }\n\n    return genricData\n}\n//data array that needs to displayed in draws compone \ncommons.gridData= (apidata) => {\n\n  \n\n    let genricData = [];\n    let i;\n    for (i = 0; i <=2; i++) {\n        genricData.push(apidata[i])\n    }\n\n    return genricData\n}\n\n//format the date used in tournament file\ncommons.formatterDate = (inputDate) => {\n    inputDate = inputDate.substring(0, 10).split(/\\D/g)\n    inputDate = inputDate[2] + \"-\" + inputDate[1] + \"-\" + inputDate[0]\n    return inputDate\n}\n//abbrevtion used in registered clubs and registered association \ncommons.abrrevatedData = (val) => {\n    const data = val.substring(0, 4)\n    return data.toUpperCase()\n}\n//check shuffle array function fo displying random data each time load\ncommons.shuffleArray = (array) => {\n    for (let i = array.length - 1; i >0; i--)\n    {\n       const j = Math.floor(Math.random() * (i + 1));\n       [array[i], array[j]] = [array[j],array[i]];\n     }\n     return array;\n}\n//check futuredate\ncommons.checkFuturedate = (date) => {\n    var today = new Date().getTime(),\n        idate = date.split(\"-\");\n\n    idate = new Date(idate[0], idate[1] - 1, idate[2]).getTime();\n    const datecheck = (today - idate) < 0\n    return datecheck\n      \n\n\n}\n//array sort in home page for registred clubs/association on abrrevation data\ncommons.sortArray = (array, type) => {\n\n  return array.sort((a, b) => {\n      if (type === \"acadamy\") {\n         \n          if (a.abbrevationAcademy < b.abbrevationAcademy) return -1;\n          if (a.abbrevationAcademy > b.abbrevationAcademy) return 1;\n          return 0;\n        //   if (a.clubName < b.clubName) return -1;\n        //   if (a.clubName > b.clubName) return 1;\n        //   return 0;\n      }\n      else if (type === \"assoc\") {\n          if (a.abbrevationAssociation < b.abbrevationAssociation) return -1;\n          if (a.abbrevationAssociation > b.abbrevationAssociation) return 1;\n          return 0;\n\n          \n         \n      }\n  })\n};\n\nexport default commons;\n","D:\\my-app\\src\\commons\\userAuth.js",[],"D:\\my-app\\src\\AUTHSevice.js",[],"D:\\my-app\\src\\components\\tournaments\\prolegue.js",[],"D:\\my-app\\src\\APIService.js",[],"D:\\my-app\\src\\formdata\\formvalues.js",[],"D:\\my-app\\src\\components\\landingPage\\home.js",[],"D:\\my-app\\src\\components\\landingPage\\TopBar.js",["536","537"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Typography, Switch, Box} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport { menuData } from \"../../formdata\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ApiCall } from \"../../APIService\";\nimport { API_URL } from \"../../globalUrls\";\nimport { commons } from \"../../commons\";\n// color:#d90404\nimport customStyles from \"../../styles/genricStyle\";\nimport {\n  List,\n  AppBar,\n  Toolbar,\n  Paper,\n  Tabs,\n  Tab,\n  Popper,\n  MenuList,\n  MenuItem,\n \n} from \"@material-ui/core\";\n\nimport pageBanner from \"../../config/bannerConfig\";\n//import Theme from \"./styles/customTheme.js\";\n\nclass Topbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      darkState: true,\n      logopath: [],\n      nestedclick: null,\n      selected: null,\n      filepath: \"\",\n      value: this.props.index ? this.props.index : 0,\n      menuDrawer: false,\n      menuList: [],\n      open: false,\n      anchorEl: null,\n      currentLabel: \"HOME\",\n    };\n  }\n \n  loadMediaData = () => {\n    let apiData = {};\n    apiData.tableName = \"aboutus\";\n    //apiData.client_key = \"ktta\";\n    apiData.type = \"getData\";\n\n    ApiCall(\"POST\", apiData, \"getData\")\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          logopath: res[\"getData\"],\n          filepath: res[\"imagePath\"],\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n  componentDidMount = () => {\n    this.loadMediaData();\n  };\n\n  handleDrawerClick1 = (event, item, index) => {\n   \n    //const { nestedclick } = this.state;\n    this.setState({\n      nestedclick: index,\n    });\n  };\n\n  handleDrawerClick = (event, item, index) => {\n    const { open } = this.state;\n    this.setState({\n      open: !open,\n    });\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value: value });\n  };\n  //function of tab click\n  handleMenuClick = (e, item) => {\n    console.log(\"new file\");\n    // if (e.target.textContent === \"PLAYERS\")\n    // og('label name', e.target.textContent)\n    this.setState({\n      currentLabel: item.label,\n    });\n  };\n\n  //function on hover\n  handleMenuOpen = (event, item) => {\n    const { currentTarget } = event;\n    let curMenuList = [];\n    if (item.choices && item.choices.length) {\n      curMenuList = item.choices;\n    }\n\n    this.setState({\n      open: true,\n\n      anchorEl: currentTarget,\n      //value: item.value,\n\n      menuList: curMenuList,\n    });\n  };\n\n  handleMenuClose = () => {\n    const currentLabel = this.state.value;\n    //const val = menuData.filter(item => `#${item.pathname}` === location || item.choices?.filter(choice => `#${choice.pathname}` === location))[0].value\n    const val = menuData.find((item) => item.value === currentLabel).value;\n\n    this.setState({\n      open: false,\n      anchorEl: null,\n      value: val,\n    });\n  };\n  handleThemeChange = (x) => {\n    let checked = x.target.checked\n    this.setState((prevState) => ({\n      darkState: !prevState.darkState,\n    }));\n   \n\n    this.props.tokenChange(checked ? \"dark\" : \"light\");\n    checked \n      ? localStorage.setItem(\"theme\", \"dark\")\n      : localStorage.setItem(\"theme\", \"light\");\n  };\n\n\n\n\n  handleClick1 = (event, index) => {\n    //const { nestedclick } = this.state;\n   \n    \n    this.setState({ nestedclick: index });\n  \n  };\n \n\n  handleInputSearch = () => {};\n\n  mobileMenuOpen = (event) => {\n    this.setState({ menuDrawer: true });\n  };\n\n  mobileMenuClose = (event) => {\n    this.setState({ menuDrawer: false });\n  };\n\n  renderMenu = () => {\n    const {\n     \n      open,\n      nestedclick,\n     \n      value,\n    \n    } = this.state;\n    return menuData && menuData.length ? (\n      <List>\n        {menuData.map((item, index1) => {\n          if (item.choices && item.choices.length) {\n            return (\n              <div key={index1}>\n                <ListItem\n                  button\n                  onClick={(e) => this.handleDrawerClick(e, item, index1)}\n                >\n                  <ListItemIcon>{item.icon ? item.icon : \"\"}</ListItemIcon>\n                  <ListItemText primary={item.label} />\n                  {open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                  <List component=\"div\" disablePadding>\n                    {item.choices.map((nestedItem, index) => {\n                      console.log(\"state\", nestedclick);\n                      return (\n                        <ListItem\n                          key={index}\n                          button\n                          onClick={(e) =>\n                            this.handleDrawerClick1(e, item, index1)\n                          }\n                          selected={nestedclick === index}\n                          //className={classes.nested}\n                          component={Link}\n                          to={{\n                            pathname: nestedItem.pathname,\n                            search: this.props.location.search,\n                          }}\n                        >\n                          <ListItemIcon>\n                            {nestedItem.icon ? nestedItem.icon : \"\"}\n                          </ListItemIcon>\n                          <ListItemText primary={nestedItem.name} />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </Collapse>\n              </div>\n            );\n          } else {\n            return (\n              <ListItem\n                selected={value === index1}\n                component={Link}\n                to={{\n                  pathname: item.pathname,\n                  search: this.props.location.search,\n                  hash: item.hash ? item.hash : \"\",\n                }}\n                button\n                key={item.label}\n              >\n                <ListItemIcon>{item.icon ? item.icon : \"\"}</ListItemIcon>\n                <ListItemText primary={item.label} />\n              </ListItem>\n            );\n          }\n        })}\n      </List>\n    ) : (\n      <div></div>\n    );\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const { classes, tab } = this.props;\n    \n    const {\n      anchorEl,\n      \n      open,\n      darkState,\n    \n      filepath,\n      logopath,\n      menuList,\n      \n    } = this.state;\n    const defaultlogo = pageBanner(\"topBar\");\n  \n   \n   \n    return (\n      <div\n        className={classes.root}\n        onMouseLeave={this.handleMenuClose.bind(this)}\n      >\n        <AppBar position=\"relative\" color=\"default\">\n          <Toolbar>\n            <Grid container spacing={2}>\n              {/* <Grid item xs={12} className={classes.flex}> */}\n              {logopath.length === 0 ? (\n                <Grid\n                  item\n                  md={4}\n                  sm={10}\n                  xs={10}\n                  style={{\n                    objectFit: \"cover\",\n                    width: \"100%\",\n                    maxWidth: \"100%\",\n                    //backgroundSize: \"cover\",\n                    // backgroundPositionX: 'left',\n                    background: `url(${defaultlogo} )  bottom no-repeat `,\n                    backgroundPosition: \"left\",\n                    backgroundSize: \"contain\",\n                  }}\n                ></Grid>\n              ) : (\n                \"\"\n              )}\n\n              {logopath.map((value, index) => {\n                return (\n                  <Grid\n                    item\n                    md={4}\n                    sm={10}\n                    xs={10}\n                    style={{\n                      objectFit: \"cover\",\n                      width: \"100%\",\n                      maxWidth: \"100%\",\n                      //backgroundSize: \"cover\",\n                      // backgroundPositionX: 'left',\n                      background: `url(${API_URL + `${filepath}` + \"/\" + `${value.logo}`} )  bottom no-repeat `,\n                      backgroundPosition: \"left\",\n                      backgroundSize: \"contain\",\n                    }}\n                  >\n                    <div></div>\n                  </Grid>\n                );\n              })}\n              <Grid item md={8} sm={2} xs={2}>\n                {(!this.props.noTabs || tab) && (\n                  <React.Fragment>\n                    <div className={classes.iconContainer}>\n                      <IconButton\n                        onClick={this.mobileMenuOpen}\n                        className={classes.iconButton}\n                        color=\"inherit\"\n                        aria-label=\"Menu\"\n                      >\n                        <MenuIcon />\n                      </IconButton>\n                    </div>\n                    <div className={classes.tabContainer}>\n                      <SwipeableDrawer\n                        classes={{\n                          paper: classes.swipeableDrawer, // class name, e.g. `classes-nesting-root-x`\n                        }}\n                        anchor=\"right\"\n                        open={this.state.menuDrawer}\n                        onClose={this.mobileMenuClose}\n                        onOpen={this.mobileMenuOpen}\n                      >\n                        <AppBar title=\"Menu\" />\n\n                        {this.renderMenu()}\n                      </SwipeableDrawer>\n                      {/* <Grid\n                      alignItems=\"flex-start\"\n                      justify=\"flex-end\"\n                      direction=\"row\"\n                      md={8}\n                      container\n                    > */}\n\n                      <Tabs\n                        value={this.state.value}\n                        indicatorColor=\"primary\"\n                        classes={{\n                          indicator: classes.indicator,\n                        }}\n                        centered\n                      >\n                        {menuData.map((item, index) => {\n                          return (\n                            <Tab\n                              key={index}\n                              selected\n                              onChange={this.handleChange}\n                              onMouseOver={(e) => this.handleMenuOpen(e, item)}\n                              //onClick={(e)=> this.handleMenuClick(e ,item)}\n                              component={Link}\n                              to={{\n                                pathname: item.pathname,\n                                search: this.props.location.search,\n                              }}\n                              classes={{ root: classes.tabItem }}\n                              label={item.label}\n                              aria-owns={open ? \"menu-list-grow\" : undefined}\n                              aria-haspopup={\"true\"}\n                            />\n                          );\n                        })}\n                      </Tabs>\n\n                      {menuList && menuList.length ? (\n                        <Popper\n                          open={open}\n                          anchorEl={anchorEl}\n                          id=\"menu-list-grow\"\n                        >\n                          <Paper>\n                            <MenuList>\n                              {menuList.map((value, index) => {\n                                return (\n                                  <MenuItem\n                                    component={Link}\n                                    to={{\n                                      pathname: value.pathname,\n                                      search: this.props.location.search,\n                                    }}\n                                    key={index}\n                                    //onClick={(e) => this.handleMenuClick(e, value)}\n                                    onClick={this.handleMenuClose}\n                                  >\n                                    {value.name}\n                                  </MenuItem>\n                                );\n                              })}\n                            </MenuList>\n                          </Paper>\n                        </Popper>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </React.Fragment>\n                )}\n              </Grid>\n            </Grid>\n            <Box display=\"flex\" flexDirection=\"row\">\n              <Typography variant=\"subtitle1\" align=\"center\">\n                Light\n              </Typography>\n              <Switch checked={darkState} onChange={this.handleThemeChange} />\n              <Typography variant=\"subtitle1\" align=\"center\">\n                Dark\n              </Typography>\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(Topbar));\n","D:\\my-app\\src\\genricSceen\\officebeares.js",["538","539"],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\viewEntries.js",[],"D:\\my-app\\src\\components\\MobileView\\mobileView.js",[],"D:\\my-app\\src\\components\\MobileView\\playerlistView.js",[],"D:\\my-app\\src\\commons\\genricComponents\\infoComponent.js",[],"D:\\my-app\\src\\commons\\genricComponents\\pageloader.js",[],"D:\\my-app\\src\\commons\\genricComponents\\fontAwsomicon.js",[],"D:\\my-app\\src\\commons\\genricComponents\\titlize.js",[],"D:\\my-app\\src\\commons\\genricComponents\\fieldIcon.js",[],"D:\\my-app\\src\\commons\\formfunction.js",["540","541","542","543","544","545","546","547","548"],"D:\\my-app\\src\\commons\\genricComponents\\snackbar.js",[],"D:\\my-app\\src\\components\\typo\\map.js",["549"],"D:\\my-app\\src\\formdata\\index.js",[],"D:\\my-app\\src\\globalUrls.js",[],"D:\\my-app\\src\\components\\MobileView\\responsiveListDilouge.js",[],"D:\\my-app\\src\\components\\contact\\assocList.js",["550","551","552"],"D:\\my-app\\src\\formdata\\matchdata.js",[],"D:\\my-app\\src\\formdata\\registeredclub.js",[],"D:\\my-app\\src\\formdata\\dashboardList.js",["553"],"//dashboard menu schema\nimport React from \"react\";\n\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport EditIcon from '@material-ui/icons/Edit';\nimport subscribeEvent from \"../components/login/dashboardcomp/userVerification/GiveEntries\"\nimport SceduleTournament from \"../components/login/dashboardcomp/userVerification/scheduletour\"\nimport userProfile from \"../components/login/dashboardcomp/userVerification/userProfile\"\n\nexport const dashboardData = [\n   \n\n\n  {\n    label: \"GIVE ENTRIES\",\n    pathname: \"/\",\n    value: 0,\n    component: subscribeEvent,\n    icon: <AssignmentIcon />\n  },\n\n  \n \n \n    // {\n    //     label: \"PROSPECTUS\",\n    //        value: 2,\n    //   icon: <FileCopyIcon/>,\n    //   component: viewProspectus\n    // },\n  {\n    label: \"SCHEDULE\",\n    value: 1,\n    component: SceduleTournament,\n    icon: <AccessTimeIcon />,\n   \n  \n  },\n    {\n      label: \"EDIT\",\n      icon: <EditIcon/>,\n      component:userProfile,\n    \n      value: 2\n    },\n    \n \n\n   \n  ];\n  \n  ","D:\\my-app\\src\\formdata\\editDetils.js",[],"D:\\my-app\\src\\formdata\\drawresults.js",[],"D:\\my-app\\src\\formdata\\schedule.js",[],"D:\\my-app\\src\\formdata\\changePasswordFrom.js",[],"D:\\my-app\\src\\formdata\\eventsubscriptionlist.js",[],"D:\\my-app\\src\\formdata\\registerPlayer.js",[],"D:\\my-app\\src\\formdata\\verificationsteps.js",[],"D:\\my-app\\src\\formdata\\regex.js",["554","555","556","557","558","559","560","561"],"//regular expression rules for form fileds\n\nexport const regularExpData = [\n   \n   \n  \n       {\n        name: \"userName\",\n        regExp:   /^[a-zA-Z ]{3,15}$/,\n        \n           message: \"Enter characters between 3 to 15\"\n\n    },\n    {\n        name: \"phoneNumber\",\n        regExp: /^\\d{10}$/,\n        \"message\": \"Invalid Phone Number\"\n    },\n    {\n        name: \"emailAddress\",\n        regExp: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i,\n        message: \"Invalid Email Address\"\n    },\n  \n    {\n        name: \"pincode\",\n        regExp: /^\\d{6}$/,\n        \"message\": \"Invalid Pincode\"\n    },\n    // {\n    //     name: \"dob\",\n    //     regExp: /^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/i,\n    //     message: \"Invalid DOB\"\n    // },\n  \n    {\n        name: \"password\",\n        regExp: /^[a-zA-Z\\d\\!@#\\$%&\\*]{6,15}$/i,\n        \"message\": \"password accepts only alphabets,charcters, and number of 6 length\"\n    },\n    {\n        name: \"confirmpassword\",\n        regExp: /^[a-zA-Z\\d\\!@#\\$%&\\*]{6,15}$/i,\n        \"message\": \"Passwords don't match\"\n    },\n    {\n        name: \"otp\",\n        regExp: /^[0-9]{4}$/i,\n        \"message\": \"4 digits otp required\"\n        \n    },\n   \n    {\n        name: \"password\",\n        regExp: /^.{5,15}$/i,\n        \"message\": \"password required with minimum 5 characters\"\n    },\n    // {\n    //     name: \"isallusersdisabled\",\n    //     regExp: /^(true|false)$/,\n    //     \"message\": \"all users disabled/enabled selection required\"\n    // },\n    {\n        name: 'gender',\n        regExp: /^male$|^female$/,\n        \"message\": \"Allowed gender : male/female\"\n    },\n    {\n        name: 'afftype',\n        regExp: /^type1$/,\n        message: \"Allowed Affiliation Type : type1\"\n        // regExp: /^type1$|^custom$/,\n        //\"message\": \"Allowed Affiliation Type : type1/custom\"\n    },\n   \n    \n]","D:\\my-app\\src\\formdata\\formFields.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\viewProspectus.js",["562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580"],"import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Downloadpdf from \"../../../tournaments/ViewsDraws/drawsDialouge\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n//import Titleize from 'react-titleize';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport customStyles from \"../../../../styles/genricStyle\";\n\n\n\nimport { ApiCall } from \"../../../../APIService\";\nimport { commons } from \"../../../../commons\";\nclass viewProspectus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \n            tournamentId: this.props.match.params.id,\n            open: false,\n         \n            value: \"Prospectus\",\n            ViewPdf: \"\",\n            validPdf: false,\n        };\n    }\n\n    componentDidMount() { \n\n   \n        this.setState({open: false });\n        let data= \"http://karnatakatt.com/pdf/fp-prospectus.pdf\"\n        const { tournamentId } = this.state;\n       \n                this.setState({\n                    loading: false,\n                    ViewPdf: data,\n                    open: true,\n                    validPdf: true,\n                });\n            \n            \n    };\n\n    validatepdf = (pdf) => {\n        const base64Rejex = /^([A-Za-z0-9+\\/]{4})*([A-Za-z0-9+\\/]{4}|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{2}==)$/;\n        const check = base64Rejex.test(pdf); // base64Data is the base64 string\n        return check;\n    };\n\n    handleClose = () => {\n        this.setState({\n          \n            open: false,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const {\n            buttonArr,\n            value,\n            open,\n            validPdf,\n            ViewPdf,\n            loading,\n            tournamentId,\n        } = this.state;\n\n       \n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n\n                <div className={classes.root}>\n                   \n\n                    <Downloadpdf\n                        open={open}\n                        view={validPdf}\n                        ViewPdf={ViewPdf}\n                        tounamentgroup={value}\n                        onClose={this.handleClose}\n                        test={true}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(withStyles(customStyles)(viewProspectus));\n",["581","582"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\userProfile.js",["583","584","585","586"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\scheduletour.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\GiveEntries.js",["587","588","589"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\idverifiction.js",[],["590","591"],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\drawsDialouge.js",["592"],"import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport newsStyle from '../../../styles/genricStyle'\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\n\n\n//downloding draws  pdf component for event category\nclass Downloadpdf extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            tournamentId: this.props.id,\n            tounamentName:this.tounamentgroup,\n\n        };\n\n\n    }\n\n    componentDidMount() {\n     //   this.downloadFile()\n    }\n\n\n\n    \n\n    // downloadFile = () => {\n    //     window.location.href = \"https://yoursite.com/src/assets/files/exampleDoc.pdf\"\n    // }\n\n    // downloadFile = (event) => {\n\n    //     const { tounamentName, tournamentId } = this.state\n    //     var params = {};\n       \n    //     params.type = \"downloadDraws\";\n    //     params.tournamentId = tournamentId;\n    //     params.eventName = tounamentName;\n    //     params.client_key = \"ktta\";\n    //     params.withscore = false\n\n\n    //     ApiCall(\"POST\", params, \"core\")\n\n    //         .then((response) => response.json())\n    //         .then((data) => {\n    //             this.setState({\n\n    //                 ViewPdf: data,\n    //             });\n    //         })\n    //         .catch((error) => {\n    //             console.log(\"pdf error \" + error);\n    //         });\n    // };\n    \n\n\n\n\n    render() {\n\n        const { ViewPdf, open, view, test, onClose, tounamentgroup} = this.props;\n      //  const { tournamentId, ViewPdf, tounamentgroup } = this.state\n    \n     \n        return (\n            <Dialog\n                open={open}\n                onClose={onClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                scroll='body'\n                maxWidth=\"md\"\n            >\n                {view ?\n                    <React.Fragment>\n                        <DialogTitle children=\"\" id=\"alert-dialog-title\"></DialogTitle>\n                        {test ? <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\" />\n                            <Typography>Do you want to download {tounamentgroup} PDF? </Typography>\n\n                        </DialogContent> : <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\" />\n                                <Typography>Do you want to download {tounamentgroup} Draws PDF? </Typography>\n\n                            </DialogContent>\n                        }\n                       \n                        <DialogActions>\n                            {\" \"}\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={onClose}\n                            >\n                                Back\n                                     </Button>\n                            <Button\n                                href={test ? ViewPdf : `data:application/pdf;base64,${ViewPdf}`}\n                              \n                                download={`${tounamentgroup}` + \".pdf\"}\n                              \n                            //onClick={this.downloadFile}\n                            >\n                                Download\n                                     </Button>\n\n\n                        </DialogActions>\n                    </React.Fragment>\n                    :\n                    <React.Fragment>\n                        <DialogTitle children=\"\" id=\"alert-dialog-title\">\n                            <Typography color=\"error\">No Data found for {tounamentgroup} </Typography>\n                        </DialogTitle>\n\n                    </React.Fragment>\n\n\n                }\n\n            </Dialog>\n\n        )\n\n    }\n}\n\nexport default withStyles(newsStyle)(Downloadpdf);\n\n\n","D:\\my-app\\src\\commons\\genricComponents\\formGenerator.js",["593","594","595","596"],"import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\"\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {  withRouter } from \"react-router-dom\";\nimport Titlize from \"../genricComponents/titlize\"\nimport customStyles from \"../../styles/genricStyle\";\n///genric form genertor component for provided form schema\nclass FormGenerator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formList: [],\n            data: this.props.data,\n            groups:[]\n           \n        }\n    }\n\n    componentDidMount() {\n        if (this.props.formList) this.setState({ formList: this.props.formList })\n     \n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.formList !== this.props.formList) {\n            if (this.props.formList) this.setState({ formList: this.props.formList })\n        }\n\n      \n    }\n//show hidden password\n    handleClickShowPassword = (item) => {\n     \n        if (!this.props.groups) {\n            let formDataInput = [...this.state.formList];\n            let showPassword;\n            if (item && item.type === \"password\" && item.showPassword) showPassword = item.showPassword;\n            item.showPassword = (!showPassword)\n            formDataInput.find(nestedItem => {\n                if (nestedItem.key === \"password\" && nestedItem.key === item.key) nestedItem = item;\n            })\n\n            this.setState({ formList: formDataInput })\n        }\n\n        else\n        {\n            let formDataInput = [...this.state.groups];\n            let showPassword;\n            if (item && item.type === \"password\" && item.showPassword) showPassword = item.showPassword;\n            item.showPassword = (!showPassword)\n            formDataInput.map(nestedItem => {\n                nestedItem.find((option, index) => {\n                    if (option.key === \"password\" && option.key === item.key) option = item;\n                })\n               \n            })\n\n            this.setState({ groups: formDataInput })  \n            }\n    }\n\n  \n\n//dropdown data\n    showDropDown = (nestedItem) => {\n        \n        if (nestedItem && nestedItem.key === \"clubNameId\") {\n  \n           // const {registredClub} =this.state\n            //let genricData = [];\n            this.props.data.forEach(item => {\n                nestedItem.options.push({ \"value\": item.clubName, \"key\": item.clubName })\n\n            })\n            //let x = Object.assign(nestedItem, { \"options\": genricData }) \n        \n            // this.state.registredClub.map(item => {\n            //     genricData.push({ \"options\": { \"value\": item.clubName, \"key\": item.clubName } })\n\n            // })\n            const dropDownOptions = nestedItem.options.map((option, index) => {\n                return (<option key={index} value={option.value} >\n                    {option.key}\n                </option>)\n            })\n            return dropDownOptions\n\n\n         }\n        \n        else {\n            const dropDownOptions = nestedItem.options.map((option, index) => {\n                return (<option key={index} value={option.value} >\n                    {option.key}\n                </option>)\n            })\n            return dropDownOptions\n\n        }\n    }\n\n\n    render() {\n\n        const { onChange, classes,variant } = this.props;\n        const { formList} = this.state;\n        \n        let content = \"\"\n        if (this.props.groupBy) {\n            let md = 12;\n            let xs = 12;\n            if (this.props.groupBy === 3) md = 4\n            if (this.props.groupBy === 2) md = 6\n            content = this.props.groups.map((groupItem, groupIndex) => {\n                \n                return (\n                    <Grid container spacing={5}  key={groupIndex} >\n                        {groupItem.map((item, index) => {\n                            const styleObj = {};\n                            if (item.hidden) styleObj[\"display\"] = \"none\";\n\n                            \n                                                   \n                                                \n                            if (item.upperCase) item.value = item.value.toUpperCase()\n\n                            return (<Grid item xs={xs} md={md} key={index}>\n                                <TextField\n                                    SelectProps={{\n                                        native: true,\n                                        MenuProps: {\n                                            className: classes.menu\n                                        }\n                                    }}\n                                    id=\"component-simple\"\n                                    margin=\"normal\"\n                                   \n                                    fullWidth\n                                    disabled={item.disabled ? true : false}\n                                    variant={variant ? variant : \"outlined\"}\n                                    select={item.select}\n                                    autoComplete=\"off\"\n                                    label={item.displayName ? item.displayName :\"\"}\n                                    name={item.key}\n                                    value={item.value}\n                                    onChange={onChange}\n                                    multiline={item.multiline}\n                                    style={styleObj}\n                                    rowsMax={item.rowsMax}\n                                   //disabled={!editMode || item.disabled}\n                                    rows={item.rows}\n                                    type={(item.type !== \"select\" && item.type !== \"password\") ? item.type : ((item.type === \"password\" && item.showPassword) ? 'text' : 'password')}\n                                    format=\"dd/mm/yyyy\"\n                                    error={(item.error && item.error.length) ? true : false}\n                                    helperText={item.error}\n                                    InputProps={{\n                                        endAdornment: (\n                                            (item.type === \"password\") ? (<InputAdornment position=\"end\">\n                                                <IconButton\n                                                    onClick={() => this.handleClickShowPassword(item)}\n                                                >\n                                                    {item.showPassword ? <Visibility /> : <VisibilityOff />}\n                                                </IconButton>\n\n                                            </InputAdornment >) : false\n                                        ),\n                                    }\n                                    }\n                                    InputLabelProps={{ shrink: true }}>\n                                    {(item.select ) ? (\n                                        this.showDropDown(item)\n                                    ) : ''}\n                                   \n\n\n                                </TextField>\n                               \n\n                            </Grid >)\n                        })}</Grid>)\n            })\n        }\n        else {\n            content = formList.map((item, index) => {\n                const styleObj = {};\n               \n                if (item.hidden) styleObj[\"display\"] = \"none\";\n              \n                return (\n                  \n                    <React.Fragment>\n                    <TextField\n                    id={item.key}\n                    select={item.select}\n                    key={index}\n                            variant={variant? variant:\"outlined\"}\n                    //type={item.type}\n                    disabled={item.disabled ? true : false}\n                    hidden={item.hidden ? true : false}\n                            label={item.displayName ? item.displayName :\"\"}\n                    name={item.key}\n                    type={(item.type !== \"select\" && item.type !== \"password\") ? item.type : ((item.type === \"password\" && item.showPassword) ? 'text' : 'password')}\n                    fullWidth\n                         \n                    margin=\"normal\"\n                    value={item.value}\n                    onChange={onChange}\n                    error={(item.error && item.error.length) ? true : false}\n                    helperText={item.error}\n                    autoComplete=\"off\"\n                    style={styleObj}\n                    rows={item.rows}\n                    multiline={item.multiline}\n                    rowsMax={item.rowsMax}\n                    InputLabelProps={{ shrink: true }}\n                    InputProps={{\n                        endAdornment: (\n                            (item.type === \"password\") ? (<InputAdornment position=\"end\">\n                                <IconButton\n                                    onClick={() => this.handleClickShowPassword(item)}\n                                >\n                                    {item.showPassword ? <Visibility /> : <VisibilityOff />}\n                                </IconButton>\n                                 \n                            </InputAdornment >) : false\n                        ),\n                    }\n                    }\n\n                    >\n                      \n\n                            {(item.select) ? (\n                        this.showDropDown(item)\n                    ) : ''}\n                        </TextField>\n                   \n                      \n\n\n\n                       \n                    \n                    </React.Fragment>\n                   \n                   \n                    \n                    \n                )\n              \n                \n            })\n             \n            \n           \n\n          \n        }\n\n\n\n        return content\n    }\n\n}\n\nexport default withRouter(withStyles(customStyles)(FormGenerator));\n\n\n","D:\\my-app\\src\\components\\login\\dashboardcomp\\genicPayemnt.js",["597","598","599","600","601"],"import Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React, { Component } from \"react\";\nclass Payment extends React.Component {\n    // const[alignment, setAlignment] = React.useState('left');\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            subvalue: this.props.fomdata,\n\n        };\n    }\n    componentDidMount() {\n        //this.checkidverification()\n        \n         this.showrazorPay()\n\n\n\n    }\n\n    // parentupdate = (value) => {\n    //     handleChildUpdate(value)\n    // }\n    loadScript = (src) => {\n        return new Promise((resolve) => {\n            const script = document.createElement('script')\n            script.src = src\n            script.onload = () => {\n                resolve(true)\n            }\n            script.onerror = () => {\n                resolve(false)\n            }\n            document.body.appendChild(script)\n        })\n    }\n\n   \n    showrazorPay = async () => {\n       \n      \n     \n      \n        const res = await this.loadScript('https://checkout.razorpay.com/v1/checkout.js')\n\n        if (!res) {\n            alert('Razorpay SDK failed to load. Are you online?')\n            return\n        }\n\n        await this.props.orderId()\n\n    \n        const options = {\n            key: 'rzp_test_ipbJ8OB0OUxB2u',\n            currency: \"INR\",\n            amount: (parseInt(this.props.orderno.checkedFees) * 100).toString(),\n            order_id: this.props.orderno.order_id,\n            name: 'KTTA',\n            description: 'Subsciption amount',\n\n            handler: (response) => {\n\n                if (response.razorpay_payment_id)\n                \n                { this.props.submit(response.razorpay_payment_id) }\n\n\n\n\n\n\n            },\n            prefill: {\n                name: this.state.subvalue.userName,\n                email: this.state.subvalue.emailAddress,\n                phone_number: '9899999999'\n            }\n        }\n        const paymentObject = new window.Razorpay(options)\n        paymentObject.on('payment.failed', function (response) {\n\n            alert(response.error.description);\n\n        });\n        paymentObject.open()\n\n    };\n\n    render() {\n        const { classes, loading } = this.props;\n        const { value } = this.state;\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div\n\n                >\n\n                  \n\n\n                </div>\n               \n                       \n                         \n            </React.Fragment>\n        );\n    }\n}\nexport default (Payment);\n",["602","603"],"D:\\my-app\\src\\formdata\\clubassocid.js",[],"D:\\my-app\\src\\formdata\\tableIcons.js",[],"D:\\my-app\\src\\formdata\\button.js",[],"D:\\my-app\\src\\formdata\\registeredAssociation.js",[],"D:\\my-app\\src\\components\\players\\dialouges\\baseDialouge.js",[],"D:\\my-app\\src\\formdata\\viewDrawsMenu.js",[],"D:\\my-app\\src\\formdata\\statistics.js",[],"D:\\my-app\\src\\formdata\\playerDetailsCol.js",[],"D:\\my-app\\src\\components\\about\\registeredClub.js",[],"D:\\my-app\\src\\components\\about\\registeredAssoc.js",[],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\draws.js",["604","605","606","607","608"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Downloadpdf from \"./drawsDialouge\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n//import Titleize from 'react-titleize';\nimport Paper from \"@material-ui/core/Paper\";\nimport customStyles from \"../../../styles/genricStyle\";\nimport { selectButtons } from \"../../../formdata\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { ApiCall } from \"../../../APIService\";\nimport RefreshLoader from \"../../../commons/genricComponents/pageloader\";\nimport { commons } from \"../../../commons\";\n//downloding draws  view component\nclass ViewDraws extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      tournamentId: this.props.match.params.id,\n      open: false,\n      buttonArr: selectButtons,\n      value: \"\",\n      ViewPdf: \"\",\n      validPdf: false,\n    };\n  }\n\n  componentDidMount() {}\n\n  onChange = (event, value) => {\n    this.setState({ value: value, open: false });\n\n    const { tournamentId } = this.state;\n    var params = {};\n\n    params.type = \"downloadDraws\";\n    params.tournamentId = tournamentId;\n    params.eventName = value;\n\n    this.setState({ loading: true });\n    ApiCall(\"POST\", params, \"coreApi\")\n      .then((response) => response.json())\n      .then((data) => {\n   \n        const validPdf = this.validatepdf(data);\n        this.setState({\n          loading: false,\n          ViewPdf: data,\n          open: true,\n          validPdf,\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error)\n      });\n  };\n\n  validatepdf = (pdf) => {\n   \n  const base64Rejex = /^([A-Za-z0-9+\\/]{4})*([A-Za-z0-9+\\/]{4}|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{2}==)$/;\n    const check = base64Rejex.test(pdf); // base64Data is the base64 string\n    return check;\n  };\n\n  handleClose = () => {\n    this.setState({\n      value: \"\",\n      open: false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      buttonArr,\n      value,\n      open,\n      validPdf,\n      ViewPdf,\n      loading,\n      tournamentId,\n    } = this.state;\n\n    \n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <RefreshLoader display=\"overlay\" loading={loading} />\n            <Paper>\n              <Grid  item md={12} sm={12}>\n                {buttonArr.map((item, index) => {\n                  return (\n                    <ToggleButtonGroup\n                      style={{ margin: 5 }}\n                      value={value}\n                      exclusive\n                      key={index}\n                      onChange={this.onChange}\n                      aria-label=\"text alignment\"\n                    >\n                      <ToggleButton\n                        classes={{\n                          root: classes.buttonstyle, // class name, e.g. `root-x`\n\n                          selected: classes.selected, // class name, e.g. `disabled-x`\n                        }}\n                        value={item.value}\n                        aria-label=\"centered\"\n                      >\n                        {item.name}\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  );\n                })}\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Downloadpdf\n            open={open}\n            view={validPdf}\n            ViewPdf={ViewPdf}\n            tounamentgroup={value}\n            onClose={this.handleClose}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(ViewDraws));\n","D:\\my-app\\src\\genricSceen\\registerdClub.js",[],"D:\\my-app\\src\\components\\landingPage\\linkpage.js",[],"D:\\my-app\\src\\formdata\\standings.js",[],"D:\\my-app\\src\\formdata\\menuData.js",[],"D:\\my-app\\src\\config\\bannerConfig.js",[],"D:\\my-app\\src\\components\\socialMediaExtracts\\mediaExtracts.js",[],"D:\\my-app\\src\\commons\\genricComponents\\imageClass.js",[],"D:\\my-app\\src\\components\\landingPage\\Sponsers.js",["609","610"],"D:\\my-app\\src\\components\\landingPage\\RegisteredAssoc.js",[],"D:\\my-app\\src\\components\\landingPage\\RegistredCulb.js",[],"D:\\my-app\\src\\components\\landingPage\\OfficeBearers.js",[],"D:\\my-app\\src\\components\\landingPage\\StatisticsContent.js",[],"D:\\my-app\\src\\components\\landingPage\\StandingContent.js",["611","612","613","614","615","616","617","618","619","620"],"D:\\my-app\\src\\components\\landingPage\\NewsContent.js",[],"D:\\my-app\\src\\components\\landingPage\\Footer.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\logout.js",[],"D:\\my-app\\src\\components\\MobileView\\rankingView.js",[],"D:\\my-app\\src\\components\\players\\dialouges\\tabledisplay.js",[],"D:\\my-app\\src\\genricSceen\\newsPage.js",["621","622","623"],"D:\\my-app\\src\\components\\tournaments\\commitedetails.js",[],"D:\\my-app\\src\\commons\\genricComponents\\charts.js",["624"],"D:\\my-app\\src\\components\\MobileView\\responsiveDialouge.js",[],"D:\\my-app\\src\\formdata\\playerlist.js",[],"D:\\my-app\\src\\formdata\\rankingRespTableData.js",[],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\showResults.js",["625","626"],"\nimport React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport customStyles from \"../../../styles/genricStyle\";\nimport Fontawsome from \"../../../commons/genricComponents/fontAwsomicon\"\nimport Paper from \"@material-ui/core/Paper\";\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport { commons } from \"../../../commons\";\nimport SnackPopup from \"../../../commons/genricComponents/snackbar\";\n\nimport { ApiCall } from \"../../../APIService\";\nimport Container from '@material-ui/core/Container';\nimport TableRow from '@material-ui/core/TableRow';\nimport RefreshLoader from \"../../../commons/genricComponents/pageloader\";\n\n\nimport { drawresults, mresults} from \"../../../formdata\"\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { sessioncommons } from \"../../../commons\"\nclass displaydraws extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            matchresults: [],\n            status: false,\n            tournamentId: this.props.match.params.id,\n            \"message\": \"\",\n            loading: false,\n            emessage:\"\",\n            \n        }\n  \n    }\n\n\n\n\n\n\n//set the draw results in local storage. \n    handleClick =(x) => {\n       const {tournamentId} =this.state\n        let apiData = {};\n        apiData.type = \"setPassword\";\n      \n        apiData.type= \"matchResults\";\n        apiData.tournamentId = tournamentId;\n        apiData.eventName=x\n       \n  \n        this.setState({ loading: true });\n        ApiCall(\"POST\", apiData, \"coreApi\")\n          .then((res) => res.json())\n          .then((res) => {\n         \n            if (res.status === \"success\") {\n                if (Object.keys(res).length)\n                {\n                 sessioncommons.setdrawData(res)\n                }\n                this.props.history.push(`/showdraws/${x}`);\n            }\n\n            else if (res.status === \"failure\") {\n\n                this.setState({\n\n\n                    \"emessage\": res.message, loading: false \n\n                });\n            }\n          })\n          .catch((error) => {\n            commons.errorLog(error);\n          });\n      \n          \n        \n     \n    \n       \n    \n    }\n\n    componentDidMount() {\n        this.setState({ data: mresults })\n        \n      \n       \n}\n\n   \n  \n\n\n   \n\n\n   \n  \n\n    render() {\n        const { classes} = this.props;\n      const {message, loading, emessage}=this.state;\n    \n\n      \n\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n           \n                <div className={classes.root}>\n               <Grid container justify=\"center\">\n               <RefreshLoader display=\"overlay\" loading={loading} />\n            \n              <Table\n                          className={classes.drawstable}\n                    \n                \n                            \n                            size=\"small\"\n                            aria-label=\"simple table\"\n                        >\n                          \n                            <TableBody>\n\n                            {drawresults.map((row, index) => {\n                               \n                                return (\n                                    <TableRow key={index}\n                                      \n                                    >\n                                        <TableCell component=\"th\" scope=\"row\"\n                                            onClick={() => this.handleClick(row.fEvent.event)}\n                                        >\n                                            <Fontawsome\n                                                name={row.fEvent.icon}\n                                                size=\"2x\"\n                                                style={{ width: \"0.9em\", color: \"#D85B6D\" }}\n                                            />\n                                          \n                                        </TableCell>\n                                        <TableCell align=\"center\">\n                                            {row.category}\n                                        </TableCell>\n                                        <TableCell align=\"left\"\n                                            onClick={() => this.handleClick(row.mEvent.event)}\n                                        >\n                                       \n                                           \n                                            <Fontawsome\n                                                name={row.mEvent.icon}\n                                                size=\"2x\"\n                                                style={{ width: \"0.9em\", color: \"#D85B6D\" }}\n                                            />\n                                        </TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                            </TableBody>\n                        </Table>\n                        {(message.length) ? (<SnackPopup message={message} type=\"success\" />) : (emessage.length) ? (<SnackPopup message={`${emessage}` } type=\"error\" />) : \"\"}\n              \n                        \n                  \n                   </Grid>\n                </div>\n            </React.Fragment>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        )\n    }\n\n}\nexport default withRouter( withStyles(customStyles)(displaydraws));\n","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\showdraws.js",["627","628"],"D:\\my-app\\src\\genricSceen\\registeredAssoc.js",[],{"ruleId":"629","replacedBy":"630"},{"ruleId":"631","replacedBy":"632"},{"ruleId":"633","severity":1,"message":"634","line":82,"column":28,"nodeType":"635","messageId":"636","endLine":82,"endColumn":30},{"ruleId":"637","severity":1,"message":"638","line":47,"column":32,"nodeType":"639","endLine":47,"endColumn":51},{"ruleId":"640","severity":1,"message":"641","line":90,"column":28,"nodeType":"642","messageId":"643","endLine":90,"endColumn":35},{"ruleId":"640","severity":1,"message":"644","line":90,"column":37,"nodeType":"642","messageId":"643","endLine":90,"endColumn":46},{"ruleId":"645","severity":1,"message":"646","line":81,"column":53,"nodeType":"635","messageId":"647","endLine":81,"endColumn":54},{"ruleId":"645","severity":1,"message":"646","line":81,"column":59,"nodeType":"635","messageId":"647","endLine":81,"endColumn":60},{"ruleId":"648","severity":1,"message":"649","line":65,"column":49,"nodeType":"650","messageId":"651","endLine":65,"endColumn":51},{"ruleId":"648","severity":1,"message":"652","line":104,"column":26,"nodeType":"650","messageId":"653","endLine":104,"endColumn":28},{"ruleId":"648","severity":1,"message":"654","line":153,"column":31,"nodeType":"650","messageId":"653","endLine":153,"endColumn":33},{"ruleId":"648","severity":1,"message":"649","line":75,"column":49,"nodeType":"650","messageId":"651","endLine":75,"endColumn":51},{"ruleId":"648","severity":1,"message":"652","line":96,"column":26,"nodeType":"650","messageId":"653","endLine":96,"endColumn":28},{"ruleId":"648","severity":1,"message":"649","line":145,"column":39,"nodeType":"650","messageId":"651","endLine":145,"endColumn":41},{"ruleId":"648","severity":1,"message":"652","line":154,"column":28,"nodeType":"650","messageId":"653","endLine":154,"endColumn":30},{"ruleId":"648","severity":1,"message":"654","line":192,"column":31,"nodeType":"650","messageId":"653","endLine":192,"endColumn":33},{"ruleId":"640","severity":1,"message":"655","line":17,"column":24,"nodeType":"642","messageId":"643","endLine":17,"endColumn":39},{"ruleId":"648","severity":1,"message":"652","line":85,"column":39,"nodeType":"650","messageId":"653","endLine":85,"endColumn":41},{"ruleId":"648","severity":1,"message":"652","line":103,"column":39,"nodeType":"650","messageId":"653","endLine":103,"endColumn":41},{"ruleId":"640","severity":1,"message":"656","line":166,"column":9,"nodeType":"642","messageId":"643","endLine":166,"endColumn":13},{"ruleId":"648","severity":1,"message":"649","line":247,"column":39,"nodeType":"650","messageId":"651","endLine":247,"endColumn":41},{"ruleId":"648","severity":1,"message":"654","line":263,"column":31,"nodeType":"650","messageId":"653","endLine":263,"endColumn":33},{"ruleId":"657","severity":1,"message":"658","line":375,"column":30,"nodeType":"659","messageId":"660","endLine":375,"endColumn":46,"fix":"661"},{"ruleId":"648","severity":1,"message":"649","line":65,"column":49,"nodeType":"650","messageId":"651","endLine":65,"endColumn":51},{"ruleId":"648","severity":1,"message":"654","line":120,"column":26,"nodeType":"650","messageId":"653","endLine":120,"endColumn":28},{"ruleId":"640","severity":1,"message":"662","line":2,"column":17,"nodeType":"642","messageId":"643","endLine":2,"endColumn":26},{"ruleId":"640","severity":1,"message":"663","line":3,"column":35,"nodeType":"642","messageId":"643","endLine":3,"endColumn":42},{"ruleId":"640","severity":1,"message":"664","line":4,"column":8,"nodeType":"642","messageId":"643","endLine":4,"endColumn":23},{"ruleId":"640","severity":1,"message":"665","line":5,"column":10,"nodeType":"642","messageId":"643","endLine":5,"endColumn":19},{"ruleId":"640","severity":1,"message":"666","line":8,"column":8,"nodeType":"642","messageId":"643","endLine":8,"endColumn":18},{"ruleId":"629","replacedBy":"667"},{"ruleId":"631","replacedBy":"668"},{"ruleId":"640","severity":1,"message":"669","line":11,"column":10,"nodeType":"642","messageId":"643","endLine":11,"endColumn":17},{"ruleId":"640","severity":1,"message":"670","line":14,"column":10,"nodeType":"642","messageId":"643","endLine":14,"endColumn":17},{"ruleId":"637","severity":1,"message":"638","line":103,"column":32,"nodeType":"639","endLine":103,"endColumn":50},{"ruleId":"640","severity":1,"message":"671","line":312,"column":58,"nodeType":"642","messageId":"643","endLine":312,"endColumn":66},{"ruleId":"640","severity":1,"message":"672","line":321,"column":15,"nodeType":"642","messageId":"643","endLine":321,"endColumn":20},{"ruleId":"673","severity":1,"message":"674","line":446,"column":72,"nodeType":"675","endLine":446,"endColumn":86},{"ruleId":"648","severity":1,"message":"654","line":44,"column":30,"nodeType":"650","messageId":"653","endLine":44,"endColumn":32},{"ruleId":"648","severity":1,"message":"649","line":57,"column":49,"nodeType":"650","messageId":"651","endLine":57,"endColumn":51},{"ruleId":"648","severity":1,"message":"652","line":66,"column":28,"nodeType":"650","messageId":"653","endLine":66,"endColumn":30},{"ruleId":"648","severity":1,"message":"676","line":124,"column":28,"nodeType":"650","messageId":"651","endLine":124,"endColumn":30},{"ruleId":"645","severity":1,"message":"646","line":310,"column":66,"nodeType":"635","messageId":"647","endLine":310,"endColumn":67},{"ruleId":"645","severity":1,"message":"646","line":310,"column":72,"nodeType":"635","messageId":"647","endLine":310,"endColumn":73},{"ruleId":"640","severity":1,"message":"677","line":23,"column":10,"nodeType":"642","messageId":"643","endLine":23,"endColumn":17},{"ruleId":"633","severity":1,"message":"678","line":79,"column":63,"nodeType":"635","messageId":"636","endLine":79,"endColumn":65},{"ruleId":"648","severity":1,"message":"654","line":13,"column":23,"nodeType":"650","messageId":"653","endLine":13,"endColumn":25},{"ruleId":"648","severity":1,"message":"652","line":42,"column":18,"nodeType":"650","messageId":"653","endLine":42,"endColumn":20},{"ruleId":"633","severity":1,"message":"678","line":43,"column":24,"nodeType":"635","messageId":"636","endLine":43,"endColumn":26},{"ruleId":"633","severity":1,"message":"634","line":49,"column":23,"nodeType":"635","messageId":"636","endLine":49,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":56,"column":23,"nodeType":"635","messageId":"636","endLine":56,"endColumn":25},{"ruleId":"633","severity":1,"message":"634","line":77,"column":28,"nodeType":"635","messageId":"636","endLine":77,"endColumn":30},{"ruleId":"633","severity":1,"message":"678","line":78,"column":29,"nodeType":"635","messageId":"636","endLine":78,"endColumn":31},{"ruleId":"633","severity":1,"message":"678","line":93,"column":22,"nodeType":"635","messageId":"636","endLine":93,"endColumn":24},{"ruleId":"648","severity":1,"message":"652","line":142,"column":18,"nodeType":"650","messageId":"653","endLine":142,"endColumn":20},{"ruleId":"640","severity":1,"message":"679","line":5,"column":8,"nodeType":"642","messageId":"643","endLine":5,"endColumn":21},{"ruleId":"640","severity":1,"message":"679","line":21,"column":8,"nodeType":"642","messageId":"643","endLine":21,"endColumn":21},{"ruleId":"633","severity":1,"message":"634","line":44,"column":31,"nodeType":"635","messageId":"636","endLine":44,"endColumn":33},{"ruleId":"640","severity":1,"message":"680","line":61,"column":20,"nodeType":"642","messageId":"643","endLine":61,"endColumn":27},{"ruleId":"640","severity":1,"message":"681","line":6,"column":8,"nodeType":"642","messageId":"643","endLine":6,"endColumn":20},{"ruleId":"682","severity":1,"message":"683","line":21,"column":33,"nodeType":"684","messageId":"685","endLine":21,"endColumn":34,"suggestions":"686"},{"ruleId":"682","severity":1,"message":"683","line":21,"column":53,"nodeType":"684","messageId":"685","endLine":21,"endColumn":54,"suggestions":"687"},{"ruleId":"682","severity":1,"message":"688","line":38,"column":28,"nodeType":"684","messageId":"685","endLine":38,"endColumn":29,"suggestions":"689"},{"ruleId":"682","severity":1,"message":"690","line":38,"column":32,"nodeType":"684","messageId":"685","endLine":38,"endColumn":33,"suggestions":"691"},{"ruleId":"682","severity":1,"message":"692","line":38,"column":36,"nodeType":"684","messageId":"685","endLine":38,"endColumn":37,"suggestions":"693"},{"ruleId":"682","severity":1,"message":"688","line":43,"column":28,"nodeType":"684","messageId":"685","endLine":43,"endColumn":29,"suggestions":"694"},{"ruleId":"682","severity":1,"message":"690","line":43,"column":32,"nodeType":"684","messageId":"685","endLine":43,"endColumn":33,"suggestions":"695"},{"ruleId":"682","severity":1,"message":"692","line":43,"column":36,"nodeType":"684","messageId":"685","endLine":43,"endColumn":37,"suggestions":"696"},{"ruleId":"640","severity":1,"message":"697","line":2,"column":8,"nodeType":"642","messageId":"643","endLine":2,"endColumn":19},{"ruleId":"640","severity":1,"message":"698","line":3,"column":8,"nodeType":"642","messageId":"643","endLine":3,"endColumn":17},{"ruleId":"640","severity":1,"message":"699","line":5,"column":8,"nodeType":"642","messageId":"643","endLine":5,"endColumn":20},{"ruleId":"640","severity":1,"message":"700","line":6,"column":8,"nodeType":"642","messageId":"643","endLine":6,"endColumn":12},{"ruleId":"640","severity":1,"message":"701","line":7,"column":10,"nodeType":"642","messageId":"643","endLine":7,"endColumn":14},{"ruleId":"640","severity":1,"message":"702","line":11,"column":10,"nodeType":"642","messageId":"643","endLine":11,"endColumn":20},{"ruleId":"640","severity":1,"message":"703","line":13,"column":8,"nodeType":"642","messageId":"643","endLine":13,"endColumn":12},{"ruleId":"640","severity":1,"message":"704","line":16,"column":8,"nodeType":"642","messageId":"643","endLine":16,"endColumn":18},{"ruleId":"640","severity":1,"message":"705","line":20,"column":8,"nodeType":"642","messageId":"643","endLine":20,"endColumn":13},{"ruleId":"640","severity":1,"message":"669","line":25,"column":10,"nodeType":"642","messageId":"643","endLine":25,"endColumn":17},{"ruleId":"640","severity":1,"message":"670","line":26,"column":10,"nodeType":"642","messageId":"643","endLine":26,"endColumn":17},{"ruleId":"640","severity":1,"message":"706","line":47,"column":17,"nodeType":"642","messageId":"643","endLine":47,"endColumn":29},{"ruleId":"682","severity":1,"message":"707","line":60,"column":43,"nodeType":"684","messageId":"685","endLine":60,"endColumn":44,"suggestions":"708"},{"ruleId":"682","severity":1,"message":"707","line":60,"column":63,"nodeType":"684","messageId":"685","endLine":60,"endColumn":64,"suggestions":"709"},{"ruleId":"682","severity":1,"message":"707","line":60,"column":81,"nodeType":"684","messageId":"685","endLine":60,"endColumn":82,"suggestions":"710"},{"ruleId":"682","severity":1,"message":"707","line":60,"column":100,"nodeType":"684","messageId":"685","endLine":60,"endColumn":101,"suggestions":"711"},{"ruleId":"640","severity":1,"message":"712","line":75,"column":13,"nodeType":"642","messageId":"643","endLine":75,"endColumn":22},{"ruleId":"640","severity":1,"message":"713","line":80,"column":13,"nodeType":"642","messageId":"643","endLine":80,"endColumn":20},{"ruleId":"640","severity":1,"message":"706","line":81,"column":13,"nodeType":"642","messageId":"643","endLine":81,"endColumn":25},{"ruleId":"629","replacedBy":"714"},{"ruleId":"631","replacedBy":"715"},{"ruleId":"648","severity":1,"message":"652","line":67,"column":53,"nodeType":"650","messageId":"653","endLine":67,"endColumn":55},{"ruleId":"648","severity":1,"message":"649","line":148,"column":46,"nodeType":"650","messageId":"651","endLine":148,"endColumn":48},{"ruleId":"648","severity":1,"message":"652","line":160,"column":34,"nodeType":"650","messageId":"653","endLine":160,"endColumn":36},{"ruleId":"648","severity":1,"message":"654","line":220,"column":35,"nodeType":"650","messageId":"653","endLine":220,"endColumn":37},{"ruleId":"640","severity":1,"message":"716","line":288,"column":9,"nodeType":"642","messageId":"643","endLine":288,"endColumn":19},{"ruleId":"648","severity":1,"message":"652","line":318,"column":34,"nodeType":"650","messageId":"653","endLine":318,"endColumn":36},{"ruleId":"648","severity":1,"message":"652","line":325,"column":34,"nodeType":"650","messageId":"653","endLine":325,"endColumn":36},{"ruleId":"629","replacedBy":"717"},{"ruleId":"631","replacedBy":"718"},{"ruleId":"645","severity":1,"message":"646","line":116,"column":63,"nodeType":"635","messageId":"647","endLine":116,"endColumn":64},{"ruleId":"640","severity":1,"message":"719","line":12,"column":8,"nodeType":"642","messageId":"643","endLine":12,"endColumn":15},{"ruleId":"648","severity":1,"message":"654","line":46,"column":43,"nodeType":"650","messageId":"653","endLine":46,"endColumn":45},{"ruleId":"648","severity":1,"message":"652","line":59,"column":42,"nodeType":"650","messageId":"653","endLine":59,"endColumn":44},{"ruleId":"648","severity":1,"message":"654","line":60,"column":49,"nodeType":"650","messageId":"653","endLine":60,"endColumn":51},{"ruleId":"640","severity":1,"message":"704","line":1,"column":8,"nodeType":"642","messageId":"643","endLine":1,"endColumn":18},{"ruleId":"640","severity":1,"message":"720","line":3,"column":17,"nodeType":"642","messageId":"643","endLine":3,"endColumn":26},{"ruleId":"640","severity":1,"message":"721","line":94,"column":17,"nodeType":"642","messageId":"643","endLine":94,"endColumn":24},{"ruleId":"640","severity":1,"message":"713","line":94,"column":26,"nodeType":"642","messageId":"643","endLine":94,"endColumn":33},{"ruleId":"640","severity":1,"message":"722","line":95,"column":17,"nodeType":"642","messageId":"643","endLine":95,"endColumn":22},{"ruleId":"629","replacedBy":"723"},{"ruleId":"631","replacedBy":"724"},{"ruleId":"682","severity":1,"message":"707","line":64,"column":37,"nodeType":"684","messageId":"685","endLine":64,"endColumn":38,"suggestions":"725"},{"ruleId":"682","severity":1,"message":"707","line":64,"column":57,"nodeType":"684","messageId":"685","endLine":64,"endColumn":58,"suggestions":"726"},{"ruleId":"682","severity":1,"message":"707","line":64,"column":75,"nodeType":"684","messageId":"685","endLine":64,"endColumn":76,"suggestions":"727"},{"ruleId":"682","severity":1,"message":"707","line":64,"column":94,"nodeType":"684","messageId":"685","endLine":64,"endColumn":95,"suggestions":"728"},{"ruleId":"640","severity":1,"message":"706","line":85,"column":7,"nodeType":"642","messageId":"643","endLine":85,"endColumn":19},{"ruleId":"640","severity":1,"message":"677","line":13,"column":10,"nodeType":"642","messageId":"643","endLine":13,"endColumn":17},{"ruleId":"640","severity":1,"message":"729","line":58,"column":23,"nodeType":"642","messageId":"643","endLine":58,"endColumn":31},{"ruleId":"640","severity":1,"message":"730","line":5,"column":8,"nodeType":"642","messageId":"643","endLine":5,"endColumn":13},{"ruleId":"640","severity":1,"message":"731","line":6,"column":8,"nodeType":"642","messageId":"643","endLine":6,"endColumn":17},{"ruleId":"640","severity":1,"message":"732","line":7,"column":8,"nodeType":"642","messageId":"643","endLine":7,"endColumn":17},{"ruleId":"640","severity":1,"message":"733","line":8,"column":8,"nodeType":"642","messageId":"643","endLine":8,"endColumn":22},{"ruleId":"640","severity":1,"message":"734","line":9,"column":8,"nodeType":"642","messageId":"643","endLine":9,"endColumn":17},{"ruleId":"640","severity":1,"message":"735","line":10,"column":8,"nodeType":"642","messageId":"643","endLine":10,"endColumn":16},{"ruleId":"640","severity":1,"message":"736","line":11,"column":10,"nodeType":"642","messageId":"643","endLine":11,"endColumn":22},{"ruleId":"640","severity":1,"message":"737","line":13,"column":25,"nodeType":"642","messageId":"643","endLine":13,"endColumn":38},{"ruleId":"640","severity":1,"message":"719","line":16,"column":8,"nodeType":"642","messageId":"643","endLine":16,"endColumn":15},{"ruleId":"640","severity":1,"message":"738","line":20,"column":8,"nodeType":"642","messageId":"643","endLine":20,"endColumn":18},{"ruleId":"640","severity":1,"message":"677","line":26,"column":10,"nodeType":"642","messageId":"643","endLine":26,"endColumn":17},{"ruleId":"640","severity":1,"message":"729","line":65,"column":36,"nodeType":"642","messageId":"643","endLine":65,"endColumn":44},{"ruleId":"648","severity":1,"message":"739","line":94,"column":65,"nodeType":"650","messageId":"651","endLine":94,"endColumn":67},{"ruleId":"640","severity":1,"message":"740","line":2,"column":8,"nodeType":"642","messageId":"643","endLine":2,"endColumn":14},{"ruleId":"640","severity":1,"message":"705","line":6,"column":8,"nodeType":"642","messageId":"643","endLine":6,"endColumn":13},{"ruleId":"640","severity":1,"message":"741","line":17,"column":8,"nodeType":"642","messageId":"643","endLine":17,"endColumn":17},{"ruleId":"648","severity":1,"message":"652","line":109,"column":21,"nodeType":"650","messageId":"653","endLine":109,"endColumn":23},{"ruleId":"648","severity":1,"message":"652","line":114,"column":42,"nodeType":"650","messageId":"653","endLine":114,"endColumn":44},"no-native-reassign",["742"],"no-negated-in-lhs",["743"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component component must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'pdfPath' is assigned a value but never used.","Identifier","unusedVar","'emptyData' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.find() expects a return value from arrow function.","'registred_clubs' is defined but never used.","'data' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property verifyForm.","MemberExpression","unexpectedWhitespace",{"range":"744","text":"745"},"'useEffect' is defined but never used.","'Default' is defined but never used.","'ClubAssociation' is defined but never used.","'aboutMenu' is defined but never used.","'Mobileview' is defined but never used.",["742"],["743"],"'ApiCall' is defined but never used.","'commons' is defined but never used.","'uploaded' is assigned a value but never used.","'tname' is assigned a value but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","Array.prototype.sort() expects a value to be returned at the end of arrow function.","'API_URL' is defined but never used.","Expected '!==' and instead saw '!='.","'InfoComponent' is defined but never used.","'message' is assigned a value but never used.","'FileCopyIcon' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["746","747"],["748","749"],"Unnecessary escape character: \\!.",["750","751"],"Unnecessary escape character: \\$.",["752","753"],"Unnecessary escape character: \\*.",["754","755"],["756","757"],["758","759"],["760","761"],"'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'ScheduleIcon' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'makeStyles' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'tournamentId' is assigned a value but never used.","Unnecessary escape character: \\/.",["762","763"],["764","765"],["766","767"],["768","769"],"'buttonArr' is assigned a value but never used.","'loading' is assigned a value but never used.",["742"],["743"],"'loggeduser' is assigned a value but never used.",["742"],["743"],"'Titlize' is defined but never used.","'Component' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.",["742"],["743"],["770","771"],["772","773"],["774","775"],["776","777"],"'filepath' is assigned a value but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'standingData' is defined but never used.","'MTableToolbar' is defined but never used.","'Fontawsome' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'Legend' is defined but never used.","'Container' is defined but never used.","no-global-assign","no-unsafe-negation",[11095,11097],".",{"messageId":"778","fix":"779","desc":"780"},{"messageId":"781","fix":"782","desc":"783"},{"messageId":"778","fix":"784","desc":"780"},{"messageId":"781","fix":"785","desc":"783"},{"messageId":"778","fix":"786","desc":"780"},{"messageId":"781","fix":"787","desc":"783"},{"messageId":"778","fix":"788","desc":"780"},{"messageId":"781","fix":"789","desc":"783"},{"messageId":"778","fix":"790","desc":"780"},{"messageId":"781","fix":"791","desc":"783"},{"messageId":"778","fix":"792","desc":"780"},{"messageId":"781","fix":"793","desc":"783"},{"messageId":"778","fix":"794","desc":"780"},{"messageId":"781","fix":"795","desc":"783"},{"messageId":"778","fix":"796","desc":"780"},{"messageId":"781","fix":"797","desc":"783"},{"messageId":"778","fix":"798","desc":"780"},{"messageId":"781","fix":"799","desc":"783"},{"messageId":"778","fix":"800","desc":"780"},{"messageId":"781","fix":"801","desc":"783"},{"messageId":"778","fix":"802","desc":"780"},{"messageId":"781","fix":"803","desc":"783"},{"messageId":"778","fix":"804","desc":"780"},{"messageId":"781","fix":"805","desc":"783"},{"messageId":"778","fix":"806","desc":"780"},{"messageId":"781","fix":"807","desc":"783"},{"messageId":"778","fix":"808","desc":"780"},{"messageId":"781","fix":"809","desc":"783"},{"messageId":"778","fix":"810","desc":"780"},{"messageId":"781","fix":"811","desc":"783"},{"messageId":"778","fix":"812","desc":"780"},{"messageId":"781","fix":"813","desc":"783"},"removeEscape",{"range":"814","text":"815"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"816","text":"817"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"818","text":"815"},{"range":"819","text":"817"},{"range":"820","text":"815"},{"range":"821","text":"817"},{"range":"822","text":"815"},{"range":"823","text":"817"},{"range":"824","text":"815"},{"range":"825","text":"817"},{"range":"826","text":"815"},{"range":"827","text":"817"},{"range":"828","text":"815"},{"range":"829","text":"817"},{"range":"830","text":"815"},{"range":"831","text":"817"},{"range":"832","text":"815"},{"range":"833","text":"817"},{"range":"834","text":"815"},{"range":"835","text":"817"},{"range":"836","text":"815"},{"range":"837","text":"817"},{"range":"838","text":"815"},{"range":"839","text":"817"},{"range":"840","text":"815"},{"range":"841","text":"817"},{"range":"842","text":"815"},{"range":"843","text":"817"},{"range":"844","text":"815"},{"range":"845","text":"817"},{"range":"846","text":"815"},{"range":"847","text":"817"},[413,414],"",[413,413],"\\",[433,434],[433,433],[827,828],[827,827],[831,832],[831,831],[835,836],[835,835],[1009,1010],[1009,1009],[1013,1014],[1013,1013],[1017,1018],[1017,1017],[1688,1689],[1688,1688],[1708,1709],[1708,1708],[1726,1727],[1726,1726],[1745,1746],[1745,1745],[1841,1842],[1841,1841],[1861,1862],[1861,1861],[1879,1880],[1879,1879],[1898,1899],[1898,1898]]