[{"D:\\my-app\\src\\index.js":"1","D:\\my-app\\src\\App.js":"2","D:\\my-app\\src\\serviceWorker.js":"3","D:\\my-app\\src\\reponsive.js":"4","D:\\my-app\\src\\config\\clientConfig.js":"5","D:\\my-app\\src\\styles\\customTheme.js":"6","D:\\my-app\\src\\routes.js":"7","D:\\my-app\\src\\views.js":"8","D:\\my-app\\src\\styles\\themefile\\darktheme.js":"9","D:\\my-app\\src\\styles\\themefile\\lightTheme.js":"10","D:\\my-app\\src\\commons\\index.js":"11","D:\\my-app\\src\\styles\\genricStyle.js":"12","D:\\my-app\\src\\PrivateRoutes.js":"13","D:\\my-app\\src\\components\\Main.js":"14","D:\\my-app\\src\\components\\about\\officeBeareres.js":"15","D:\\my-app\\src\\components\\tournaments\\viewsDraws.js":"16","D:\\my-app\\src\\components\\tournaments\\tornament.js":"17","D:\\my-app\\src\\components\\about\\ClubAsscoc.js":"18","D:\\my-app\\src\\components\\legal\\legal.js":"19","D:\\my-app\\src\\components\\players\\playerList.js":"20","D:\\my-app\\src\\components\\news\\newsinfo.js":"21","D:\\my-app\\src\\components\\players\\ranking.js":"22","D:\\my-app\\src\\components\\news\\detailednews.js":"23","D:\\my-app\\src\\components\\login\\registerSteps.js":"24","D:\\my-app\\src\\components\\login\\fogotPassword.js":"25","D:\\my-app\\src\\responsiveComp\\clubAssoc.js":"26","D:\\my-app\\src\\components\\login\\registerPlayer.js":"27","D:\\my-app\\src\\responsiveComp\\ranking.js":"28","D:\\my-app\\src\\components\\login\\login.js":"29","D:\\my-app\\src\\responsiveComp\\regsteps.js":"30","D:\\my-app\\src\\components\\login\\dashboardcomp\\dashboard.js":"31","D:\\my-app\\src\\responsiveComp\\viewsDraws.js":"32","D:\\my-app\\src\\responsiveComp\\playerList.js":"33","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\showdraws.js":"34","D:\\my-app\\src\\components\\contact\\contact.js":"35","D:\\my-app\\src\\commons\\uiCommons.js":"36","D:\\my-app\\src\\commons\\userfunc.js":"37","D:\\my-app\\src\\commons\\userAuth.js":"38","D:\\my-app\\src\\AUTHSevice.js":"39","D:\\my-app\\src\\components\\tournaments\\prolegue.js":"40","D:\\my-app\\src\\APIService.js":"41","D:\\my-app\\src\\formdata\\formvalues.js":"42","D:\\my-app\\src\\components\\landingPage\\home.js":"43","D:\\my-app\\src\\components\\landingPage\\TopBar.js":"44","D:\\my-app\\src\\genricSceen\\officebeares.js":"45","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\viewEntries.js":"46","D:\\my-app\\src\\components\\MobileView\\mobileView.js":"47","D:\\my-app\\src\\components\\MobileView\\playerlistView.js":"48","D:\\my-app\\src\\commons\\genricComponents\\infoComponent.js":"49","D:\\my-app\\src\\commons\\genricComponents\\pageloader.js":"50","D:\\my-app\\src\\commons\\genricComponents\\fontAwsomicon.js":"51","D:\\my-app\\src\\commons\\genricComponents\\titlize.js":"52","D:\\my-app\\src\\commons\\genricComponents\\fieldIcon.js":"53","D:\\my-app\\src\\commons\\formfunction.js":"54","D:\\my-app\\src\\commons\\genricComponents\\snackbar.js":"55","D:\\my-app\\src\\components\\typo\\map.js":"56","D:\\my-app\\src\\formdata\\index.js":"57","D:\\my-app\\src\\globalUrls.js":"58","D:\\my-app\\src\\components\\MobileView\\responsiveListDilouge.js":"59","D:\\my-app\\src\\components\\contact\\assocList.js":"60","D:\\my-app\\src\\formdata\\matchdata.js":"61","D:\\my-app\\src\\formdata\\registeredclub.js":"62","D:\\my-app\\src\\formdata\\dashboardList.js":"63","D:\\my-app\\src\\formdata\\editDetils.js":"64","D:\\my-app\\src\\formdata\\drawresults.js":"65","D:\\my-app\\src\\formdata\\schedule.js":"66","D:\\my-app\\src\\formdata\\changePasswordFrom.js":"67","D:\\my-app\\src\\formdata\\eventsubscriptionlist.js":"68","D:\\my-app\\src\\formdata\\registerPlayer.js":"69","D:\\my-app\\src\\formdata\\verificationsteps.js":"70","D:\\my-app\\src\\formdata\\regex.js":"71","D:\\my-app\\src\\formdata\\formFields.js":"72","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\viewProspectus.js":"73","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\showResults.js":"74","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\userProfile.js":"75","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\scheduletour.js":"76","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\GiveEntries.js":"77","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\idverifiction.js":"78","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\drawsDialouge.js":"79","D:\\my-app\\src\\commons\\genricComponents\\formGenerator.js":"80","D:\\my-app\\src\\components\\login\\dashboardcomp\\genicPayemnt.js":"81","D:\\my-app\\src\\formdata\\clubassocid.js":"82","D:\\my-app\\src\\formdata\\tableIcons.js":"83","D:\\my-app\\src\\formdata\\button.js":"84","D:\\my-app\\src\\formdata\\registeredAssociation.js":"85","D:\\my-app\\src\\components\\players\\dialouges\\baseDialouge.js":"86","D:\\my-app\\src\\formdata\\viewDrawsMenu.js":"87","D:\\my-app\\src\\formdata\\statistics.js":"88","D:\\my-app\\src\\formdata\\playerDetailsCol.js":"89","D:\\my-app\\src\\components\\about\\registeredClub.js":"90","D:\\my-app\\src\\components\\about\\registeredAssoc.js":"91","D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\draws.js":"92","D:\\my-app\\src\\genricSceen\\registerdClub.js":"93","D:\\my-app\\src\\components\\landingPage\\linkpage.js":"94","D:\\my-app\\src\\formdata\\standings.js":"95","D:\\my-app\\src\\formdata\\menuData.js":"96","D:\\my-app\\src\\config\\bannerConfig.js":"97","D:\\my-app\\src\\components\\socialMediaExtracts\\mediaExtracts.js":"98","D:\\my-app\\src\\commons\\genricComponents\\imageClass.js":"99","D:\\my-app\\src\\components\\landingPage\\Sponsers.js":"100","D:\\my-app\\src\\components\\landingPage\\RegisteredAssoc.js":"101","D:\\my-app\\src\\components\\landingPage\\RegistredCulb.js":"102","D:\\my-app\\src\\components\\landingPage\\OfficeBearers.js":"103","D:\\my-app\\src\\components\\landingPage\\StatisticsContent.js":"104","D:\\my-app\\src\\components\\landingPage\\StandingContent.js":"105","D:\\my-app\\src\\components\\landingPage\\NewsContent.js":"106","D:\\my-app\\src\\components\\landingPage\\Footer.js":"107","D:\\my-app\\src\\components\\login\\dashboardcomp\\logout.js":"108","D:\\my-app\\src\\components\\MobileView\\rankingView.js":"109","D:\\my-app\\src\\components\\players\\dialouges\\tabledisplay.js":"110","D:\\my-app\\src\\genricSceen\\newsPage.js":"111","D:\\my-app\\src\\components\\tournaments\\commitedetails.js":"112","D:\\my-app\\src\\commons\\genricComponents\\charts.js":"113","D:\\my-app\\src\\components\\MobileView\\responsiveDialouge.js":"114","D:\\my-app\\src\\formdata\\playerlist.js":"115","D:\\my-app\\src\\formdata\\rankingRespTableData.js":"116"},{"size":459,"mtime":1610348195863,"results":"117","hashOfConfig":"118"},{"size":633,"mtime":1610568391836,"results":"119","hashOfConfig":"118"},{"size":4948,"mtime":1608785972622,"results":"120","hashOfConfig":"118"},{"size":1065,"mtime":1610410474461,"results":"121","hashOfConfig":"118"},{"size":93,"mtime":1610571035106,"results":"122","hashOfConfig":"118"},{"size":4421,"mtime":1610409372817,"results":"123","hashOfConfig":"118"},{"size":4154,"mtime":1610697627131,"results":"124","hashOfConfig":"118"},{"size":647,"mtime":1608785972658,"results":"125","hashOfConfig":"118"},{"size":2723,"mtime":1610409330037,"results":"126","hashOfConfig":"118"},{"size":354,"mtime":1610409388133,"results":"127","hashOfConfig":"118"},{"size":152,"mtime":1608785964729,"results":"128","hashOfConfig":"118"},{"size":10276,"mtime":1610427257494,"results":"129","hashOfConfig":"118"},{"size":1916,"mtime":1610410314457,"results":"130","hashOfConfig":"118"},{"size":381,"mtime":1610407011517,"results":"131","hashOfConfig":"118"},{"size":639,"mtime":1610309533743,"results":"132","hashOfConfig":"118"},{"size":3953,"mtime":1610348433565,"results":"133","hashOfConfig":"118"},{"size":11240,"mtime":1610590856525,"results":"134","hashOfConfig":"118"},{"size":3664,"mtime":1610315629109,"results":"135","hashOfConfig":"118"},{"size":6705,"mtime":1610591460286,"results":"136","hashOfConfig":"118"},{"size":4228,"mtime":1610599775882,"results":"137","hashOfConfig":"118"},{"size":474,"mtime":1610320917273,"results":"138","hashOfConfig":"118"},{"size":9010,"mtime":1610590489938,"results":"139","hashOfConfig":"118"},{"size":3253,"mtime":1610564418001,"results":"140","hashOfConfig":"118"},{"size":8445,"mtime":1610694228717,"results":"141","hashOfConfig":"118"},{"size":11220,"mtime":1610703261735,"results":"142","hashOfConfig":"118"},{"size":856,"mtime":1610407730757,"results":"143","hashOfConfig":"118"},{"size":13159,"mtime":1610703005744,"results":"144","hashOfConfig":"118"},{"size":674,"mtime":1610408954700,"results":"145","hashOfConfig":"118"},{"size":7776,"mtime":1610690318077,"results":"146","hashOfConfig":"118"},{"size":844,"mtime":1608785971726,"results":"147","hashOfConfig":"118"},{"size":19453,"mtime":1610704255639,"results":"148","hashOfConfig":"118"},{"size":863,"mtime":1610409152843,"results":"149","hashOfConfig":"118"},{"size":663,"mtime":1610407751029,"results":"150","hashOfConfig":"118"},{"size":16458,"mtime":1610402638754,"results":"151","hashOfConfig":"118"},{"size":6340,"mtime":1610352074696,"results":"152","hashOfConfig":"118"},{"size":650,"mtime":1610313746517,"results":"153","hashOfConfig":"118"},{"size":3926,"mtime":1610421834922,"results":"154","hashOfConfig":"118"},{"size":1939,"mtime":1610421104723,"results":"155","hashOfConfig":"118"},{"size":397,"mtime":1610409625883,"results":"156","hashOfConfig":"118"},{"size":1800,"mtime":1610421692656,"results":"157","hashOfConfig":"118"},{"size":672,"mtime":1610594731497,"results":"158","hashOfConfig":"118"},{"size":853,"mtime":1610567809970,"results":"159","hashOfConfig":"118"},{"size":2818,"mtime":1610390788199,"results":"160","hashOfConfig":"118"},{"size":13511,"mtime":1610402275244,"results":"161","hashOfConfig":"118"},{"size":10062,"mtime":1610407470208,"results":"162","hashOfConfig":"118"},{"size":5567,"mtime":1610596323387,"results":"163","hashOfConfig":"118"},{"size":1567,"mtime":1610312861359,"results":"164","hashOfConfig":"118"},{"size":5770,"mtime":1610596794410,"results":"165","hashOfConfig":"118"},{"size":351,"mtime":1610315334627,"results":"166","hashOfConfig":"118"},{"size":3027,"mtime":1610325587248,"results":"167","hashOfConfig":"118"},{"size":1014,"mtime":1610429079822,"results":"168","hashOfConfig":"118"},{"size":149,"mtime":1610428938242,"results":"169","hashOfConfig":"118"},{"size":722,"mtime":1610429041143,"results":"170","hashOfConfig":"118"},{"size":7809,"mtime":1610703366919,"results":"171","hashOfConfig":"118"},{"size":1268,"mtime":1610428963707,"results":"172","hashOfConfig":"118"},{"size":3734,"mtime":1610406997268,"results":"173","hashOfConfig":"118"},{"size":1431,"mtime":1610413446900,"results":"174","hashOfConfig":"118"},{"size":582,"mtime":1610571199127,"results":"175","hashOfConfig":"118"},{"size":8876,"mtime":1610564376021,"results":"176","hashOfConfig":"118"},{"size":5403,"mtime":1610306611636,"results":"177","hashOfConfig":"118"},{"size":58150,"mtime":1608785968999,"results":"178","hashOfConfig":"118"},{"size":20601,"mtime":1610568601950,"results":"179","hashOfConfig":"118"},{"size":1350,"mtime":1610703907846,"results":"180","hashOfConfig":"118"},{"size":1938,"mtime":1610567732188,"results":"181","hashOfConfig":"118"},{"size":1133,"mtime":1610319492346,"results":"182","hashOfConfig":"118"},{"size":2339,"mtime":1610137160196,"results":"183","hashOfConfig":"118"},{"size":759,"mtime":1610567682643,"results":"184","hashOfConfig":"118"},{"size":193,"mtime":1610567908327,"results":"185","hashOfConfig":"118"},{"size":2436,"mtime":1610702775565,"results":"186","hashOfConfig":"118"},{"size":365,"mtime":1610568218485,"results":"187","hashOfConfig":"118"},{"size":1852,"mtime":1610568036365,"results":"188","hashOfConfig":"118"},{"size":479,"mtime":1610567849702,"results":"189","hashOfConfig":"118"},{"size":2826,"mtime":1609991246935,"results":"190","hashOfConfig":"118"},{"size":4088,"mtime":1610427815902,"results":"191","hashOfConfig":"118"},{"size":10314,"mtime":1610703685915,"results":"192","hashOfConfig":"118"},{"size":3986,"mtime":1610399495737,"results":"193","hashOfConfig":"118"},{"size":14027,"mtime":1610424022116,"results":"194","hashOfConfig":"118"},{"size":5131,"mtime":1610324971684,"results":"195","hashOfConfig":"118"},{"size":4272,"mtime":1610564489077,"results":"196","hashOfConfig":"118"},{"size":10268,"mtime":1610696689049,"results":"197","hashOfConfig":"118"},{"size":2457,"mtime":1610324727402,"results":"198","hashOfConfig":"118"},{"size":383,"mtime":1610315609451,"results":"199","hashOfConfig":"118"},{"size":2278,"mtime":1610568180468,"results":"200","hashOfConfig":"118"},{"size":2404,"mtime":1610567658767,"results":"201","hashOfConfig":"118"},{"size":17478,"mtime":1610568637586,"results":"202","hashOfConfig":"118"},{"size":2323,"mtime":1610564289555,"results":"203","hashOfConfig":"118"},{"size":460,"mtime":1610568257125,"results":"204","hashOfConfig":"118"},{"size":218,"mtime":1610568146104,"results":"205","hashOfConfig":"118"},{"size":238,"mtime":1610567960075,"results":"206","hashOfConfig":"118"},{"size":510,"mtime":1610317111358,"results":"207","hashOfConfig":"118"},{"size":6319,"mtime":1610307058652,"results":"208","hashOfConfig":"118"},{"size":3863,"mtime":1610594869488,"results":"209","hashOfConfig":"118"},{"size":13739,"mtime":1610580968642,"results":"210","hashOfConfig":"118"},{"size":1147,"mtime":1610318662512,"results":"211","hashOfConfig":"118"},{"size":1330,"mtime":1610568126462,"results":"212","hashOfConfig":"118"},{"size":1894,"mtime":1610567889914,"results":"213","hashOfConfig":"118"},{"size":419,"mtime":1610564160278,"results":"214","hashOfConfig":"118"},{"size":4937,"mtime":1610417639719,"results":"215","hashOfConfig":"118"},{"size":344,"mtime":1610390665976,"results":"216","hashOfConfig":"118"},{"size":2621,"mtime":1610390883571,"results":"217","hashOfConfig":"118"},{"size":2954,"mtime":1610428077837,"results":"218","hashOfConfig":"118"},{"size":551,"mtime":1610352035249,"results":"219","hashOfConfig":"118"},{"size":299,"mtime":1610390803629,"results":"220","hashOfConfig":"118"},{"size":936,"mtime":1610351974109,"results":"221","hashOfConfig":"118"},{"size":3248,"mtime":1610428101676,"results":"222","hashOfConfig":"118"},{"size":315,"mtime":1610318005653,"results":"223","hashOfConfig":"118"},{"size":1365,"mtime":1610428288600,"results":"224","hashOfConfig":"118"},{"size":1670,"mtime":1610422025606,"results":"225","hashOfConfig":"118"},{"size":8118,"mtime":1610590562430,"results":"226","hashOfConfig":"118"},{"size":2975,"mtime":1610564264782,"results":"227","hashOfConfig":"118"},{"size":10149,"mtime":1610407485006,"results":"228","hashOfConfig":"118"},{"size":5297,"mtime":1610564555111,"results":"229","hashOfConfig":"118"},{"size":2274,"mtime":1610429074011,"results":"230","hashOfConfig":"118"},{"size":6201,"mtime":1610413500747,"results":"231","hashOfConfig":"118"},{"size":1688,"mtime":1610567976547,"results":"232","hashOfConfig":"118"},{"size":329,"mtime":1610567998763,"results":"233","hashOfConfig":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"1p52f7e",{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"236"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"236"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"236"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"236"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"236"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"236"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"236"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"236"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"392"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"236"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"236"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"413"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"236"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"236"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"236"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"236"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"D:\\my-app\\src\\index.js",[],["488","489"],"D:\\my-app\\src\\App.js",[],"D:\\my-app\\src\\serviceWorker.js",[],"D:\\my-app\\src\\reponsive.js",[],"D:\\my-app\\src\\config\\clientConfig.js",[],"D:\\my-app\\src\\styles\\customTheme.js",[],"D:\\my-app\\src\\routes.js",[],"D:\\my-app\\src\\views.js",[],"D:\\my-app\\src\\styles\\themefile\\darktheme.js",[],"D:\\my-app\\src\\styles\\themefile\\lightTheme.js",[],"D:\\my-app\\src\\commons\\index.js",[],"D:\\my-app\\src\\styles\\genricStyle.js",[],"D:\\my-app\\src\\PrivateRoutes.js",[],"D:\\my-app\\src\\components\\Main.js",[],"D:\\my-app\\src\\components\\about\\officeBeareres.js",[],"D:\\my-app\\src\\components\\tournaments\\viewsDraws.js",[],"D:\\my-app\\src\\components\\tournaments\\tornament.js",["490"],"import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport Card from \"@material-ui/core/Card\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Topbar from \"../landingPage/TopBar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport { sessioncommons } from \"../../commons\"\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport LeagueInfo from \"./prolegue\"\nimport { } from \"../../APIService\"\nimport { commons } from \"../../commons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHandPointRight } from '@fortawesome/free-solid-svg-icons'\nimport Grid from \"@material-ui/core/Grid\";\nimport customStyles from \"../../styles/genricStyle\"\nimport RefreshLoader from \"../../commons/genricComponents/pageloader\"\nimport CommitieData from \"./commitedetails\"\nimport { ApiCall } from \"../../APIService\";\nimport { Link as CoreLink } from '@material-ui/core';\nimport InfoComponent from \"../../commons/genricComponents/infoComponent\"\n//displying the tounamnet list user cn register/view\nclass Tournament extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      emessage:\"\",\n  \n      tournamentData: [],\n      eventList: [],\n      commitie: false,\n      tourType: \"ranking\",\n      tourval: [],\n      playerDetails: [],\n      open: false,\n      commitiedata: [],\n      tournamentval: []\n    };\n    this.handleChildUpdate = this.handleChildUpdate.bind(this)\n\n  }\n//api call to display the tounamnet list \"upcomming/past\"\n  loadTournamentData = () => {\n\n    let params = {};\n   \n    params.type = \"tourList\";\n   \n   \n    this.setState({ loading: true });\n      \n    ApiCall(\"POST\", params,\"coreApi\")\n \n      .then((res) => res.json())\n      .then((res) => {\n\n        if (res.status === \"success\") {\n            this.setState({\n           loading: false,\n           tournamentData: res[\"data\"],\n            tourval: res[\"data\"],\n           tournamentval: res[\"tournamentList\"],\n           tname: \"\"\n        });\n\n\n       \n\n\n\n\n\n      \n        }\n        else if (res.status==\"failure\") {\n\n          this.setState({\n            tournamentData: res[\"data\"],\n            loading: false,\n            \"emessage\": \"Something went wrong!!!\"\n\n          });\n        }\n\n\n\n     \n      })\n\n\n\n\n      .catch((error) => {\n        commons.errorLog(error)\n\n      });\n  };\n\n  componentDidMount = () => {\n    this.loadTournamentData();\n   \n  };\n\n  \n\n  onsubmitdata = (tdata) => {\n    debugger\n   let  tournamentval ={};\n    tournamentval.tournamentId = tdata._id;\n    tournamentval.tournamentName = tdata.eventName;\n    sessioncommons.setTournament(tournamentval)\n    this.props.history.push({\n      pathname: '/login',\n    });\n\n  }\n\n\n  handleClose = () => {\n    this.setState({\n      open: false\n\n    });\n  };\n//api function to get committie data\n  showCommitie = (id, name) => {\n\n\n    var params = {};\n\n\n    params.tableName = \"league_committee\";\n    params.type = \"getDataByTournamentId\";\n    //params.client_key = \"ktta\";\n    params.tournamentId = id;\n\n\n\n    ApiCall(\"POST\", params, \"getData\")\n      .then(response => response.json())\n      .then((data) => {\n        this.setState({\n          open: true,\n          tname: name,\n          commitiedata: data[\"getData\"]\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error)\n\n      });\n\n\n  };\n\n//update the  type and fetch the tournamnet data based client key \"ranking/leugue\"\n  handleChildUpdate(tourType) {\n\n    const {  tourval } = this.state\n\n    if (tourType === \"ranking\")\n\n      this.setState({\n        tourType: \"ranking\",\n        tournamentData: tourval,\n\n      })\n    else\n      this.setState({ tourType: \"leauge\", tournamentData: tourval })\n\n  }\n  render() {\n    const { classes } = this.props;\n    const { tournamentData, tourType, open, loading, tname, commitiedata} = this.state;\n   console.log(\"tourdata\", tournamentData.length)\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={3}  />\n\n        <div className={classes.root}>\n          <LeagueInfo\n            handleChildUpdate={this.handleChildUpdate}\n            loadtdata={this.loadTournamentData}\n            //loading={loading}\n          />\n\n          <Grid\n            align=\"center\"\n            justify=\"center\"\n            container\n          \n          >\n            <RefreshLoader display=\"overlay\" loading={loading} />\n\n            <Paper className={classes.tourpaper}>\n              {tournamentData.length ? (\n                tournamentData.map((value, index) => {\n                  let tournamentType = commons.checkDate(\n                    value.eventStartDate,\n                    value.eventEndDate,\n                    value.eventSubscriptionLastDate\n                  );\n                  console.log(\"futue\", tournamentType);\n                  return (\n                    <Card className={classes.tornamentcard} key={index}>\n                      <Grid\n                        container\n                        item\n                        alignItems=\"center\"\n                        justify=\"center\"\n                        xs={12}\n                        md={12}\n                      >\n                        <Grid item xs={12} md={12}>\n                          <CardContent>\n                            <Grid container>\n                              <Grid style={{ flex: 1 }}>\n                                <Typography gutterBottom variant=\"body1\">\n                                  {\" \"}\n                                  <b>\n                                    {value.eventName !== null\n                                      ? value.eventName\n                                      : \"\"}\n                                  </b>\n                                </Typography>\n                              </Grid>\n\n                              <Grid>\n                                {tourType === \"ranking\" ? (\n                                  <CoreLink\n                                    component=\"button\"\n                                    variant=\"body1\"\n                                    onClick={() => {\n                                      this.showCommitie(\n                                        value._id,\n                                        value.eventName\n                                      );\n                                    }}\n                                  >\n                                    Committee\n                                    <FontAwesomeIcon\n                                      icon={faHandPointRight}\n                                      size=\"1x\"\n                                      style={{ width: \"2em\", color: \"black\" }}\n                                    />\n                                  </CoreLink>\n                                ) : (\n                                  \"\"\n                                )}\n                              </Grid>\n                            </Grid>\n\n                            <Grid container>\n                              <Grid item md={1} sm={2} xs={1}>\n                                <RoomIcon />\n                              </Grid>\n                              <Grid item md={11} sm={10} xs={11}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"body1\"\n                                  style={{ marginLeft: \"5px\" }}\n                                >\n                                  {value.domainName}\n                                </Typography>\n                              </Grid>\n\n                              <Grid item md={1} sm={2} xs={1}>\n                                <CalendarTodayIcon />\n                              </Grid>\n                              <Grid item xs={11} md={11} sm={10}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"body1\"\n                                  style={{ marginLeft: \"5px\" }}\n                                >\n                                  Event dates:\n                                  {commons.formatDate(value.eventStartDate)} to{\" \"}\n                                  {commons.formatDate(value.eventEndDate)}\n                                </Typography>\n                              </Grid>\n                              <Grid item xs={1} md={1} sm={2}>\n                                <ScheduleIcon />\n                              </Grid>\n                              <Grid item xs={11} md={11} sm={10}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"body1\"\n                                  style={{ marginLeft: \"5px\" }}\n                                >\n                                  Last date for registration:{\" \"}\n                                  {commons.formatDate(\n                                    value.eventSubscriptionLastDate\n                                  )}\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </CardContent>\n\n                          <CardActions style={{ justifyContent: \"flex-end\" }}>\n                            {tournamentType === \"future\" ? (\n                              <Button\n                                onClick={() =>\n                                  this.onsubmitdata(value)\n                                }\n                              >\n                                Register\n                              </Button>\n                            ) : tournamentType === \"closed\" ? (\n                              <Button disabled>Entries closed</Button>\n                            ) : (\n                              <div>\n                                <Button\n                                  component={Link}\n                                  to={`/entriesDraws/${value._id}`}\n                                >\n                                  View Entries/Draws\n                                </Button>\n                              </div>\n                            )}\n                          </CardActions>\n                        </Grid>\n                      </Grid>\n                    </Card>\n                  );\n                })\n              ) : (\n                <InfoComponent variant=\"h3\" message=\"No Tournament announced yet!!!!\"/>\n                 \n                \n                  \n               \n              )}\n\n              \n            </Paper>\n          </Grid>\n        </div>\n        <CommitieData\n          name={tname}\n          open={open}\n          data={commitiedata}\n          onClose={this.handleClose}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(Tournament));","D:\\my-app\\src\\components\\about\\ClubAsscoc.js",["491"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {  withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Topbar from \"../landingPage/TopBar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport customStyles from \"../../styles/genricStyle\"\nimport {aboutMenu }from \"../../formdata\"\n\n\n\n\nimport {\n \n    AppBar,\n    Toolbar,\n   \n    Tabs,\n    Tab,\n   \n} from \"@material-ui/core\";\n\n\n\nclass ClubAssociation extends Component {\n    state = {\n        value:this.props.location.asssocval?this.props.location.asssocval: 0,\n      \n    };\n\n    handleChange = (event, index\n    ) => {\n       \n        this.setState({\n            value: index,\n          \n        });\n    };\n    //display component\n    showComp = (index) => {\n\n\n        let Found = aboutMenu.find(item => item.value === index);\n\n        if (Found) return <div><Found.component /></div>\n\n\n        return false;\n    };\n\n\n    componentDidMount() {\n        window.scrollTo(0, 0);\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { value} = this.state;\n    \n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <Topbar index={0}  />\n\n\n              \n              \n                    <div className={classes.root}>\n\n\n\n                        <AppBar position=\"static\" color=\"default\">\n                            <Toolbar>\n                                <Grid container spacing={1}>\n\n\n                                    <Grid\n                                        item\n                                        md={8}\n                                        sm={8}\n                                        xs={8}\n                                        style={{ justifyContent: \"left\" }}\n                                    >\n\n\n\n                                        <div className={classes.tabContainer}>\n\n\n\n                                            <Tabs\n                                                onChange={this.handleChange}\n                                                value={value}\n                                                indicatorColor=\"primary\"\n                                                classes={{\n                                                    indicator: classes.indicator\n                                                }}\n                                              \n\n                                            >\n                                                {aboutMenu.map((item, index) => {\n\n                                                    return (\n                                                        <Tab\n                                                            key={index}\n                                                            selected\n\n\n\n                                        \n\n\n                                                          \n                                                            label={item.label}\n\n                                                        />\n\n\n\n                                                    );\n\n                                                })}\n\n                                            </Tabs>\n\n\n\n\n\n                                        </div>\n\n\n                                    </Grid>\n                                </Grid>\n                            </Toolbar>\n                        </AppBar>\n                        {this.showComp(value)}\n\n\n\n\n                    </div>\n             \n            </React.Fragment>\n        );\n\n    }\n}\n\nexport default withRouter(withStyles(customStyles)(ClubAssociation));\n","D:\\my-app\\src\\components\\legal\\legal.js",[],"D:\\my-app\\src\\components\\players\\playerList.js",[],"D:\\my-app\\src\\components\\news\\newsinfo.js",[],"D:\\my-app\\src\\components\\players\\ranking.js",[],"D:\\my-app\\src\\components\\news\\detailednews.js",["492","493"],"import React from \"react\";\n\n//import AuthService from \"../service/AuthService\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Topbar from \"../landingPage/TopBar\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ApiCall } from \"../../APIService\";\nimport { API_URL } from \"../../globalUrls\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { commons } from \"../../commons\";\n\nimport ReactHtmlParser from \"react-html-parser\";\n//detailing component of newsPage \nclass DetailedNews extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      news_id: this.props.match.params.id, //id from  news info\n      filepath: \"\",\n      newsDetails: [],\n    };\n  }\n  //api for getting detail news based on id\n  loadetailedData = () => {\n    const { news_id } = this.state;\n    let apiData = {};\n    apiData.tableName = \"news\";\n   \n    apiData.type = \"getDataById\";\n\n    apiData.id = news_id;\n    ApiCall(\"POST\", apiData, \"getDataById\")\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          newsDetails: res[\"getData\"],\n          filepath: res[\"imagePath\"],\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n\n  componentDidMount = () => {\n    this.loadetailedData();\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    const { filepath,  newsDetails } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={0} />\n\n        <div className={classes.root}>\n          {newsDetails.map((value, index) => {\n            return (\n              <Paper className={classes.paper} key={index}>\n                <Grid container align=\"center\">\n                  <Grid\n                    item\n                    md={12}\n                    xs={12}\n                    sm={12}\n                 \n                  >\n                    <img\n                      style={{ width: 400, height: 200 }}\n                      alt=\"\"\n                      src={\n                        value.image\n                          ? API_URL + `${filepath}` + \"/\" + `${value.image}`\n                          : \"\"\n                      }\n                    ></img>\n                  </Grid>\n                </Grid>\n                <Grid container justify=\"center\">\n                  <Grid item md={12} xs={12} sm={12} style={{ padding: 20 }}>\n                    <Typography variant=\"h4\">\n                      {value.title ? ReactHtmlParser(value.title) : \"\"}\n                    </Typography>\n                    <Divider/>\n                  </Grid>\n                  <Grid item md={12} xs={12} sm={12}>\n                    <Paper className={classes.paper}>\n                      <Typography variant=\"h6\">\n                        {value.description !== null\n                          ? ReactHtmlParser(value.description)\n                          : \"\"}\n                      </Typography>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Paper>\n            );\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default DetailedNews;\n","D:\\my-app\\src\\components\\login\\registerSteps.js",["494","495","496"],"D:\\my-app\\src\\components\\login\\fogotPassword.js",["497","498","499","500","501"],"D:\\my-app\\src\\responsiveComp\\clubAssoc.js",[],"D:\\my-app\\src\\components\\login\\registerPlayer.js",["502","503","504","505","506"],"D:\\my-app\\src\\responsiveComp\\ranking.js",[],"D:\\my-app\\src\\components\\login\\login.js",["507","508"],"D:\\my-app\\src\\responsiveComp\\regsteps.js",["509","510","511","512","513"],"import registerSteps from \"../components/login/registerSteps\"\nimport React, { useEffect } from 'react';\nimport { Desktop, Tablet, Mobile, Default } from \"../views\"\nimport ClubAssociation from \"../components/about/ClubAsscoc\"\nimport { aboutMenu } from \"../formdata\"\nimport Topbar from \"../components/landingPage/TopBar\"\n\nimport Mobileview from \"../components/MobileView/mobileView\"\nconst playerRegistration = (props) => {\n    const { classes } = props;\n\n    return (<div>\n        <Desktop>\n            <registerSteps classes={classes} />\n        </Desktop>\n        <Tablet>\n            <Topbar tab={true} />\n            <registerSteps orientation={true} />\n        </Tablet>\n        <Mobile>\n            <Topbar tab={true} />\n            <registerSteps orientation={true} />\n        </Mobile>\n\n    </div>)\n\n}\n\n\n\nexport default playerRegistration",["514","515"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\dashboard.js",["516","517","518","519"],"D:\\my-app\\src\\responsiveComp\\viewsDraws.js",[],"D:\\my-app\\src\\responsiveComp\\playerList.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\showdraws.js",["520","521"],"import React from \"react\";\n\nimport Container from '@material-ui/core/Container';\nimport customStyles from \"../../../../styles/genricStyle\";\nimport Divider from '@material-ui/core/Divider';\nimport Titlize from \"../../../../commons/genricComponents/titlize\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { commons } from \"../../../../commons\";\nimport Fontawsome from \"../../../../commons/genricComponents/fontAwsomicon\"\nimport { uiCommons } from \"../../../../commons\";\n\n//import { drawresults, mresults, } from \"../../../../formdata\"\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from '@material-ui/core/Box';\nimport { sessioncommons } from \"../../../../commons\"\nconst gridColumns = 3;\n\n\nclass showdraws extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selected: false,\n      value: \"round1\",\n      drawinfo: this.props.match.params.id,\n      //drawdata: mresults,\n      rowdata: sessioncommons.getdrawData().roundDetails,\n      rowmatchdata: sessioncommons.getdrawData().roundMatchDetails,\n      drawmatchRecords: sessioncommons.getdrawData().matchRecords,\n      matchresults: [],\n      datainitil: []\n    }\n\n  }\n//filling the dots based dot value\n  getDots = (x) => {\n    let icon = <Fontawsome\n      name=\"circle\"\n      size=\"2x\"\n      style={{ width: \"0.3em\", padding: \"1px\" }} />\n    return Array(x).fill(icon)\n\n\n  }\n  //fill the values with \"-\" if both scores are 0 in both sets in matchRecords data\n  getg = (val) => {\n\n    return Array(val).fill(\"-\")\n\n  }\n //reduce function to group the rows based on roundMatchDetails\n  groupBy = (array, key) => {\n    return array.reduce((result, currentValue) => {\n      // If an array already present for key, push it to the array. Else create an array and push the object\n      (result[currentValue[key]] = result[currentValue[key]] || []).push(\n        currentValue\n      );\n      // Return the current iteration `result` value, this will be taken as next iteration `result` value and accumulate\n      return result;\n    }, {});\n\n  };\n\n \n//reducer function to  to get indivisual ow details\n  showdatval = (xs, key) => {\n    return xs.reduce((rv, x) => {\n      rv[\"round\" + x.col] = this.getDots(x.dots);\n      rv.row = x.row;\n      rv.matchNo = x.matchNo\n      rv.round = x.round\n      return rv;\n    }, {});\n  };\n\n\n\n \n\n\n\n\n\n\n  componentDidMount() {\n\n    let update = [...this.state.drawmatchRecords]\n\n\n    const clubData = commons.gridData(this.state.rowdata)\n    this.setState({\n      datainitil: clubData\n    })\n\n    update.forEach(el => {\n//function to replace the player name () with empty value on component load\n      Object.keys(el.players).forEach((key) => {\n        const val = el.players[key];\n        if (val === \"()\") {\n          el.players[key] = \"\"\n        }\n      });\n\n\n\n    })\n\n \n\n//check if arrays contins same values\n    const containsAll = (a1, a2) => {\n      return a1.every(arr2Item => a2.includes(arr2Item))\n    }\n\n\n    update.map(el => {\n      let a1 = el.scores.setScoresA\n      let a2 = el.scores.setScoresB\n      let y = containsAll(a1, a2)\n      if (y) {\n        Object.keys(el.scores).map((key) => {\n          el.scores[key] = this.getg(el.scores[key].length)\n\n        });\n      }\n\n\n    })\n\n\n\n\n\n    this.setState({\n      drawmatchRecords: update\n    })\n\n  }\n\n//click handler to change the data based on rounds\n  handleClick = (r,index) => {\n   \n  \n    let allResult = [];\n    let filterdata = [];\n    for (let index = r.roundNumber; index < r.roundNumber + 3; index++) {\n      let result = this.state.drawmatchRecords.filter(\n        (word) => word.roundNumber === index\n      );\n      let xresult = this.state.rowdata.filter(\n        (x) => x.roundNumber === index\n      );\n      allResult = [...allResult, ...result];\n      filterdata = [...filterdata, ...xresult];\n    }\n\n\n\n \n\nthis.setState({\n      matchresults: allResult,\n      datainitil: filterdata,\n  selected:index\n    });\n  }\n//displaying function to display  draw details based on roundNumber\n  showdata = (outerElement) => {\n\n    let result = this.state.drawmatchRecords.filter(word => word.roundNumber === outerElement.roundNumber);\n    return result\n  }\n\n//displaying winner from matchRecords data\n  displayWinner = (winner, players) => {\n\n    if (winner.length) {\n      var found = Object.values(players).find((key) => {\n        return key === winner;\n      });\n    }\n    return found\n  }\n\n\n  // handleClick=(x)=>{\n  //     alert(JSON.stringify(x))\n  // }\n\n\n  render() {\n    const { classes,  } = this.props;\n    let gridColumnData = uiCommons.getGrid(gridColumns);\n    const {  drawinfo, datainitil, rowdata,  selected, rowmatchdata} = this.state;\n    const detailsGroupedByRow = this.groupBy(rowmatchdata, 'row');\n    const ELEMENT_DATA = Object.values(detailsGroupedByRow).map(rowItem => {\n      return this.showdatval(rowItem, \"row\");\n    });\n\n  \n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <div className={classes.root}>\n          <AppBar style={{ backgroundColor:\"#e50606e3\"}} position=\"static\">\n            <Toolbar variant=\"dense\">\n              <Typography variant=\"h6\" color=\"inherit\">\n                {drawinfo}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Container maxWidth=\"lg\">\n            <Table\n             \n              style={{ flex: 1 }}\n              size=\"small\"\n              aria-label=\"a dense table\"\n           \n            >\n             \n              <TableHead  >\n                <TableRow >\n                  {rowdata.map((outerElement,index) => {\n\n                    return (\n                    \n                        <TableCell\n                          align=\"center\"\n                          style={{cursor:\"pointer\"}}\n                          onClick={() => this.handleClick(outerElement, index)}\n                      >\n                        <Box borderColor={selected === index ? \"#1f4287\" : \"\"}  border={selected === index ? 2 : \"\"}>{outerElement.roundName}</Box>\n                       \n                        </TableCell>\n                      \n                     \n                     \n                    );\n                  })}\n                    </TableRow>\n                  </TableHead>\n               \n              <TableBody>\n                {ELEMENT_DATA.map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell\n                      classes={{ root: classes.drawtable }}\n                      align=\"center\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {row.round1}\n                    </TableCell>\n                    <TableCell\n                      classes={{ root: classes.drawtable }}\n                      align=\"center\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {row.round2}\n                    </TableCell>\n\n                    <TableCell\n                      classes={{ root: classes.drawtable }}\n                      align=\"center\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {row.round3}\n                    </TableCell>\n                    <TableCell\n                      classes={{ root: classes.drawtable }}\n                      align=\"center\"\n                      component=\"th\"\n                      scope=\"row\"\n                    >\n                      {row.round4}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Container>\n\n          <Grid container   align=\"center\">\n            {datainitil.map((outerElement) => {\n              let displayDraws = this.showdata(outerElement);\n\n              return (\n                <Grid\n                  item\n                  sm={12}\n                  md={gridColumnData.md}\n                  xs={12}\n                >\n                  <Grid container >\n                    <Grid item md={12} sm={8} xs={8}>\n                      <Typography>\n                        <span style={{ borderBottom: \"3px solid #32407b\" }}>\n                          {outerElement.roundName}\n                        </span>\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid container className={classes.drawsContainer}>\n                    <Grid\n                      item\n                      md={12}\n                      sm={8}\n                      xs={8}\n                      className={classes.drawsChildren}\n                    >\n                      {displayDraws.map((x) => {\n                        let showWinner = this.displayWinner(\n                          x.winner,\n                          x.players\n                        );\n\n                        return (\n                          <Paper\n                            style={{\n                              padding: 20,\n                              margin: 10,\n                            }}\n                          >\n                            <Grid container >\n                              <Grid container ></Grid>\n                              <Grid xs={1} sm={1} md={1}>{x.matchNumber}</Grid>\n                              \n                                {showWinner === x.players.playerA ? (\n                                  <React.Fragment>\n                                    <Grid\n                                      className={classes.winner}\n                                      xs={1} sm={1} md={1}\n                                    >\n                                      <Fontawsome\n                                        name=\"winner\"\n                                        size=\"md\"\n                                        style={{\n                                          width: \"2em\",\n                                          color: \"#00000\",\n                                        }}\n                                      />\n                                  </Grid>\n                                  \n                                    <Grid xs={3} sm={3} md={4} style={{\n                                      whiteSpace: \"nowrap\",\n\n                                      overflow: \"hidden\",\n                                      textOverflow: \"ellipsis\",\n\n                                    }}>\n                                      \n                                        <Titlize value={showWinner} />\n                                      \n                                    </Grid>\n\n\n\n                                  </React.Fragment>\n                                ) : (\n                                    <Grid xs={3} sm={3} md={4} style={{\n                                      whiteSpace: \"nowrap\",\n\n                                      overflow: \"hidden\",\n                                      textOverflow: \"ellipsis\",\n\n                                    }}>\n                                     \n                                        <Titlize value={x.players.playerA} />\n                                      \n\n                                    </Grid>\n                                  )}\n                              \n                            \n                                 \n                                \n                            \n\n                              <Grid xs={7} sm={7} md={6} >\n                                <Grid container>\n                                  {x.scores.setScoresA.map((scoreA, i) => {\n                                    const eq =\n                                      parseInt(scoreA) >\n                                      parseInt(x.scores.setScoresB[i]);\n\n                                    return (\n                                      <Grid\n                                        className={\n                                          eq\n                                            ? classes.highlightscore\n                                            : classes.spacing\n                                        }\n                                        xs={1} sm={1}   md={1}\n                                      >\n                                        {scoreA}\n                                      </Grid>\n                                    );\n                                  })}\n                                </Grid>\n                              </Grid>\n                            </Grid>\n\n                            \n                            <Divider />\n                            <Grid container >\n\n                              <Grid xs={1} sm={1} md={1}></Grid>\n                              {showWinner === x.players.playerB ? (\n                                <React.Fragment>\n                                  <Grid\n                                    className={classes.winner}\n                                    xs={1} sm={1} md={1}\n                                  >\n                                    <Fontawsome\n                                      name=\"winner\"\n                                      size=\"md\"\n                                      style={{\n                                        width: \"2em\",\n                                        color: \"#00000\",\n                                      }}\n                                    />\n                                  </Grid>\n                                  <Grid xs={3} sm={3} md={4} style={{\n                                    whiteSpace: \"nowrap\",\n\n                                    overflow: \"hidden\",\n                                    textOverflow: \"ellipsis\",\n                                  \n                                  }}>\n                                   \n                                      <Titlize value={showWinner} />\n                                   \n                                  </Grid>\n\n\n\n                                </React.Fragment>\n                              ) : (\n                                  <Grid xs={3} sm={3} md={4} style={{\n                                    whiteSpace: \"nowrap\",\n\n                                    overflow: \"hidden\",\n                                    textOverflow: \"ellipsis\",\n                                \n                                  }}>\n                                   \n                                      <Titlize value={x.players.playerB} />\n\n\n                                  </Grid>\n                                )}\n\n\n\n                              <Grid xs={7} sm={7} md={6} >\n                                <Grid container>\n                                  {x.scores.setScoresB.map((scoreB, i) => {\n                                    const eq =\n                                      parseInt(scoreB) >\n                                      parseInt(x.scores.setScoresA[i]);\n\n                                    return (\n                                      <Grid\n                                        className={\n                                          eq\n                                            ? classes.highlightscore\n                                            : classes.spacing\n                                        }\n                                        xs={1} sm={1} md={1}\n                                      >\n                                        {scoreB}\n                                      </Grid>\n                                    );\n                                  })}\n                                </Grid>\n                              </Grid>\n                            </Grid>\n\n                          </Paper>\n                        );\n                      })}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n}\nexport default withStyles(customStyles)(showdraws);","D:\\my-app\\src\\components\\contact\\contact.js",["522","523","524"],"import React from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport SnackPopup from \"../../commons/genricComponents/snackbar\"\n\nimport fields from \"../../formdata/formvalues\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Topbar from \"../landingPage/TopBar\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport MapContainer from \"../typo/map\";\nimport formValidation from \"../../commons/formfunction\";\nimport Container from '@material-ui/core/Container';\nimport FieldIcon from \"../../commons/genricComponents/fieldIcon\"\nimport { ApiCall } from \"../../APIService\";\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formdata: [], \n      reqmsg: false, \n      requestStatus: \"\",\n      asscoc: this.props.location.state\n    };\n  }\n\n  componentDidMount() {\n    let data = [...JSON.parse(JSON.stringify(fields))];\n    this.setState({ formdata: data });\n  }\n//form reset\n  resetForm = () => {\n    let data = [...JSON.parse(JSON.stringify(fields))];\n    this.setState({ formdata:data });\n  };\n\n  handleChange = e => {\n\n    const formvalues = [...this.state.formdata];\n          formvalues.find(el => {\n      if ( el && el.id === e.target.id) el.value = e.target.value;\n    });\n\n\n    this.setState({ formdata: formvalues });\n  };\n//api call for form submit\n  handleFormSubmit = async (e) => {\n    const formvalues = [...this.state.formdata];\n \n    let formInputDataValid =  await formValidation.genricFromValidation(formvalues);\n  \n    let result = formInputDataValid.find((item) => {\n      \n      if (item.error.length) return item;\n    })\n   this.setState({ formdata: formInputDataValid });\n    if (result === undefined) {\n      const data = {};\n      const formvalues = [...this.state.formdata];\n      formvalues.map((obj) => {\n        data[obj.id] = obj.value;\n      });\n      var params = {};\n\n     \n        params.emailId =data.email;\n        params.subject = data.subject;\n      params.description = data.Messege;\n\n      \n\n      ApiCall(\"POST\", params, \"contactus\")\n        .then(response => response.json())\n        .then(data => {\n       \n          if (data.mailStatus) {\n\n            this.setState({\n            \n              reqmsg: true,\n              requestStatus: data.mailStatus\n            });\n\n            this.resetForm();\n          }\n\n          else\n          {\n            this.setState({\n              reqmsg: false,\n              requestStatus: \"Error occured.Please try after sometime!!!\"\n            });\n            \n            }\n        })\n\n        .catch(error => {\n          \n          console.error(error);\n          this.setState({\n            reqmsg: false,\n            requestStatus: \"Error occured.Please try after sometime!!!\"\n          });\n\n          this.resetForm();\n        });\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { formdata, requestStatus } = this.state;\n    \n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <Topbar index={4}  />\n\n        <div className={classes.root}>\n          <Container maxWidth=\"lg\">\n     \n            <Paper className={classes.paper}>\n\n           \n                  <MapContainer />\n               \n               \n          \n             \n            \n                \n           \n             \n  \n                <Paper className={classes.formclass}>\n                  <Grid\n                   \n                  \n                    \n                    container\n                    \n                 \n                 >\n                <Grid item md={6}>\n                  <form noValidate autoComplete=\"off\">\n                    {formdata.map((formval, index) => {\n                      return (\n                        <TextField\n                          key={index}\n                          style={{ margin: 10 }}\n                          variant=\"outlined\"\n                          fullWidth\n                          required={\n                            formval.required ? formval.required:false\n                           \n                          }\n                          multiline={\n                            formval.multiline ? formval.multiline : false\n                          }\n                          error={formval.error ? true : false}\n                          helperText={formval.error}\n                          id={formval.id}\n                          rows={formval.rows ? formval.rows : \"\"}\n                          value={formval.value}\n\n                          onChange={this.handleChange}\n                          label={formval.label}\n                          type={formval.type}\n                          InputLabelProps={{\n                         \n                            classes: {\n                              root: classes.label,\n                              focused: classes.cssFocused\n                            }\n                          }}\n                          InputProps={{\n                            classes: {\n                              root: classes.cssOutlinedInput,\n                              focused: classes.cssFocused,\n                              notchedOutline: classes.notchedOutline,\n                              input: classes.input\n                            },\n                              startAdornment: (\n                                <FieldIcon name={formval.adorment} size=\"\" style={{}} type=\"mat\"/>\n                              )\n                          }}\n                        />\n                      );\n                    })}\n                      {(requestStatus.length) ? (<SnackPopup message={`${requestStatus} Response Recorded!!!!`} type=\"success\" />) : \"\"}\n\n                   \n                 \n                  </form>\n                    </Grid>\n                  </Grid>\n                     <Button\n                      onClick={this.handleFormSubmit}\n                   \n                      type=\"submit\"\n                      className={classes.actionButton}\n                    >\n                      Submit\n                      </Button>\n              </Paper>\n\n            </Paper>\n       \n          \n            </Container>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default (Contact);\n","D:\\my-app\\src\\commons\\uiCommons.js",[],"D:\\my-app\\src\\commons\\userfunc.js",["525"],"import moment from \"moment\";\n\nconst commons = {}\n//genic api error\ncommons.errorLog = (e) => {\n    console.log(e)\n}\n//filter date past/present/future in tounament file\ncommons.checkDate = (input1, input2,input3) => {\n    \n    let curDate = new Date();\n    let startDate = new Date(input1);\n    let endDate = new Date(input2);\n    let endsub = new Date(input3);\n    if (moment(curDate).isBetween(startDate, endDate)) return \"current\";\n    if (moment(curDate).isAfter(moment(endDate))) return \"past\";\n    if (moment(curDate).isAfter(moment(endsub)))\n        return \"closed\"\n     if (moment(curDate).isBefore(startDate))\n        return \"future\"\n    \n}\n\n//genric function for payment script\ncommons.loadScript = (src) => {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n      document.body.appendChild(script);\n    });\n  };\n\n\n//genric function to filter form fileds to send as params to api\ncommons.displayfileds = (formvalues) => {\n    const data = {};\n  \n    formvalues.forEach((obj) => {\n\n        if (obj.id === \"DOB\")\n            data[obj.id] = moment(obj.value).format('DD MMM YYYY');\n        else {\n            data[obj.id] = obj.value\n        }\n\n    });\n    return data\n}\n\n//format date used in tournament.js file\ncommons.formatDate = (inputDate) => {\n    inputDate = inputDate.split(\" \");\n    inputDate = inputDate[2] + \" \" + inputDate[1] + \" \" + inputDate[0];\n    return inputDate;\n}\n//  data for news/clubs/association landing page based on gridrows\ncommons.genricGrid = (apidata, gridrows, gridColumns)=>{\n\n    const x = commons.shuffleArray(apidata)\n\n    let genricData= [];\n    let i;\n    for (i = 0; i < gridrows; i++) {\n        genricData.push({ \"row\": i, \"colums\": x.slice((i * gridColumns), (i + 1) * gridColumns) })\n    }\n\n    return genricData\n}\n//data array that needs to displayed in draws compone \ncommons.gridData= (apidata) => {\n\n  \n\n    let genricData = [];\n    let i;\n    for (i = 0; i < (apidata.length-1); i++) {\n        genricData.push(apidata[i])\n    }\n\n    return genricData\n}\n\n//format the date used in tournament file\ncommons.formatterDate = (inputDate) => {\n    inputDate = inputDate.substring(0, 10).split(/\\D/g)\n    inputDate = inputDate[2] + \"-\" + inputDate[1] + \"-\" + inputDate[0]\n    return inputDate\n}\n//abbrevtion used in registered clubs and registered association \ncommons.abrrevatedData = (val) => {\n    const data = val.substring(0, 4)\n    return data.toUpperCase()\n}\n//check shuffle array function fo displying random data each time load\ncommons.shuffleArray = (array) => {\n    for (let i = array.length - 1; i >0; i--)\n    {\n       const j = Math.floor(Math.random() * (i + 1));\n       [array[i], array[j]] = [array[j],array[i]];\n     }\n     return array;\n}\n//check futuredate\ncommons.checkFuturedate = (date) => {\n    var today = new Date().getTime(),\n        idate = date.split(\"-\");\n\n    idate = new Date(idate[0], idate[1] - 1, idate[2]).getTime();\n    const datecheck = (today - idate) < 0\n    return datecheck\n      \n\n\n}\n//array sort in home page for registred clubs/association on abrrevation data\ncommons.sortArray = (array, type) => {\n\n  return array.sort((a, b) => {\n      if (type === \"acadamy\") {\n         \n          if (a.abbrevationAcademy < b.abbrevationAcademy) return -1;\n          if (a.abbrevationAcademy > b.abbrevationAcademy) return 1;\n          return 0;\n        //   if (a.clubName < b.clubName) return -1;\n        //   if (a.clubName > b.clubName) return 1;\n        //   return 0;\n      }\n      else if (type === \"assoc\") {\n          if (a.abbrevationAssociation < b.abbrevationAssociation) return -1;\n          if (a.abbrevationAssociation > b.abbrevationAssociation) return 1;\n          return 0;\n\n          \n         \n      }\n  })\n};\n\nexport default commons;\n","D:\\my-app\\src\\commons\\userAuth.js",[],"D:\\my-app\\src\\AUTHSevice.js",[],"D:\\my-app\\src\\components\\tournaments\\prolegue.js",[],"D:\\my-app\\src\\APIService.js",[],"D:\\my-app\\src\\formdata\\formvalues.js",[],"D:\\my-app\\src\\components\\landingPage\\home.js",[],"D:\\my-app\\src\\components\\landingPage\\TopBar.js",["526","527"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Typography, Switch, Box} from \"@material-ui/core\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport { menuData } from \"../../formdata\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { ApiCall } from \"../../APIService\";\nimport { API_URL } from \"../../globalUrls\";\nimport { commons } from \"../../commons\";\n// color:#d90404\nimport customStyles from \"../../styles/genricStyle\";\nimport {\n  List,\n  AppBar,\n  Toolbar,\n  Paper,\n  Tabs,\n  Tab,\n  Popper,\n  MenuList,\n  MenuItem,\n \n} from \"@material-ui/core\";\n\nimport pageBanner from \"../../config/bannerConfig\";\n//import Theme from \"./styles/customTheme.js\";\n\nclass Topbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      darkState: true,\n      logopath: [],\n      nestedclick: null,\n      selected: null,\n      filepath: \"\",\n      value: this.props.index ? this.props.index : 0,\n      menuDrawer: false,\n      menuList: [],\n      open: false,\n      anchorEl: null,\n      currentLabel: \"HOME\",\n    };\n  }\n \n  loadMediaData = () => {\n    let apiData = {};\n    apiData.tableName = \"aboutus\";\n    //apiData.client_key = \"ktta\";\n    apiData.type = \"getData\";\n\n    ApiCall(\"POST\", apiData, \"getData\")\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState({\n          logopath: res[\"getData\"],\n          filepath: res[\"imagePath\"],\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n  componentDidMount = () => {\n    this.loadMediaData();\n  };\n\n  handleDrawerClick1 = (event, item, index) => {\n   \n    //const { nestedclick } = this.state;\n    this.setState({\n      nestedclick: index,\n    });\n  };\n\n  handleDrawerClick = (event, item, index) => {\n    const { open } = this.state;\n    this.setState({\n      open: !open,\n    });\n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value: value });\n  };\n  //function of tab click\n  handleMenuClick = (e, item) => {\n    console.log(\"new file\");\n    // if (e.target.textContent === \"PLAYERS\")\n    // og('label name', e.target.textContent)\n    this.setState({\n      currentLabel: item.label,\n    });\n  };\n\n  //function on hover\n  handleMenuOpen = (event, item) => {\n    const { currentTarget } = event;\n    let curMenuList = [];\n    if (item.choices && item.choices.length) {\n      curMenuList = item.choices;\n    }\n\n    this.setState({\n      open: true,\n\n      anchorEl: currentTarget,\n      //value: item.value,\n\n      menuList: curMenuList,\n    });\n  };\n\n  handleMenuClose = () => {\n    const currentLabel = this.state.value;\n    //const val = menuData.filter(item => `#${item.pathname}` === location || item.choices?.filter(choice => `#${choice.pathname}` === location))[0].value\n    const val = menuData.find((item) => item.value === currentLabel).value;\n\n    this.setState({\n      open: false,\n      anchorEl: null,\n      value: val,\n    });\n  };\n  handleThemeChange = (x) => {\n    let checked = x.target.checked\n    this.setState((prevState) => ({\n      darkState: !prevState.darkState,\n    }));\n   \n\n    this.props.tokenChange(checked ? \"dark\" : \"light\");\n    checked \n      ? localStorage.setItem(\"theme\", \"dark\")\n      : localStorage.setItem(\"theme\", \"light\");\n  };\n\n\n\n\n  handleClick1 = (event, index) => {\n    //const { nestedclick } = this.state;\n   \n    \n    this.setState({ nestedclick: index });\n  \n  };\n \n\n  handleInputSearch = () => {};\n\n  mobileMenuOpen = (event) => {\n    this.setState({ menuDrawer: true });\n  };\n\n  mobileMenuClose = (event) => {\n    this.setState({ menuDrawer: false });\n  };\n\n  renderMenu = () => {\n    const {\n     \n      open,\n      nestedclick,\n     \n      value,\n    \n    } = this.state;\n    return menuData && menuData.length ? (\n      <List>\n        {menuData.map((item, index1) => {\n          if (item.choices && item.choices.length) {\n            return (\n              <div key={index1}>\n                <ListItem\n                  button\n                  onClick={(e) => this.handleDrawerClick(e, item, index1)}\n                >\n                  <ListItemIcon>{item.icon ? item.icon : \"\"}</ListItemIcon>\n                  <ListItemText primary={item.label} />\n                  {open ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                  <List component=\"div\" disablePadding>\n                    {item.choices.map((nestedItem, index) => {\n                      console.log(\"state\", nestedclick);\n                      return (\n                        <ListItem\n                          key={index}\n                          button\n                          onClick={(e) =>\n                            this.handleDrawerClick1(e, item, index1)\n                          }\n                          selected={nestedclick === index}\n                          //className={classes.nested}\n                          component={Link}\n                          to={{\n                            pathname: nestedItem.pathname,\n                            search: this.props.location.search,\n                          }}\n                        >\n                          <ListItemIcon>\n                            {nestedItem.icon ? nestedItem.icon : \"\"}\n                          </ListItemIcon>\n                          <ListItemText primary={nestedItem.name} />\n                        </ListItem>\n                      );\n                    })}\n                  </List>\n                </Collapse>\n              </div>\n            );\n          } else {\n            return (\n              <ListItem\n                selected={value === index1}\n                component={Link}\n                to={{\n                  pathname: item.pathname,\n                  search: this.props.location.search,\n                  hash: item.hash ? item.hash : \"\",\n                }}\n                button\n                key={item.label}\n              >\n                <ListItemIcon>{item.icon ? item.icon : \"\"}</ListItemIcon>\n                <ListItemText primary={item.label} />\n              </ListItem>\n            );\n          }\n        })}\n      </List>\n    ) : (\n      <div></div>\n    );\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const { classes, tab } = this.props;\n    \n    const {\n      anchorEl,\n      \n      open,\n      darkState,\n    \n      filepath,\n      logopath,\n      menuList,\n      \n    } = this.state;\n    const defaultlogo = pageBanner(\"topBar\");\n  \n   \n   \n    return (\n      <div\n        className={classes.root}\n        onMouseLeave={this.handleMenuClose.bind(this)}\n      >\n        <AppBar position=\"relative\" color=\"default\">\n          <Toolbar>\n            <Grid container spacing={2}>\n              {/* <Grid item xs={12} className={classes.flex}> */}\n              {logopath.length === 0 ? (\n                <Grid\n                  item\n                  md={4}\n                  sm={10}\n                  xs={10}\n                  style={{\n                    objectFit: \"cover\",\n                    width: \"100%\",\n                    maxWidth: \"100%\",\n                    //backgroundSize: \"cover\",\n                    // backgroundPositionX: 'left',\n                    background: `url(${defaultlogo} )  bottom no-repeat `,\n                    backgroundPosition: \"left\",\n                    backgroundSize: \"contain\",\n                  }}\n                ></Grid>\n              ) : (\n                \"\"\n              )}\n\n              {logopath.map((value, index) => {\n                return (\n                  <Grid\n                    item\n                    md={4}\n                    sm={10}\n                    xs={10}\n                    style={{\n                      objectFit: \"cover\",\n                      width: \"100%\",\n                      maxWidth: \"100%\",\n                      //backgroundSize: \"cover\",\n                      // backgroundPositionX: 'left',\n                      background: `url(${API_URL + `${filepath}` + \"/\" + `${value.logo}`} )  bottom no-repeat `,\n                      backgroundPosition: \"left\",\n                      backgroundSize: \"contain\",\n                    }}\n                  >\n                    <div></div>\n                  </Grid>\n                );\n              })}\n              <Grid item md={8} sm={2} xs={2}>\n                {(!this.props.noTabs || tab) && (\n                  <React.Fragment>\n                    <div className={classes.iconContainer}>\n                      <IconButton\n                        onClick={this.mobileMenuOpen}\n                        className={classes.iconButton}\n                        color=\"inherit\"\n                        aria-label=\"Menu\"\n                      >\n                        <MenuIcon />\n                      </IconButton>\n                    </div>\n                    <div className={classes.tabContainer}>\n                      <SwipeableDrawer\n                        classes={{\n                          paper: classes.swipeableDrawer, // class name, e.g. `classes-nesting-root-x`\n                        }}\n                        anchor=\"right\"\n                        open={this.state.menuDrawer}\n                        onClose={this.mobileMenuClose}\n                        onOpen={this.mobileMenuOpen}\n                      >\n                        <AppBar title=\"Menu\" />\n\n                        {this.renderMenu()}\n                      </SwipeableDrawer>\n                      {/* <Grid\n                      alignItems=\"flex-start\"\n                      justify=\"flex-end\"\n                      direction=\"row\"\n                      md={8}\n                      container\n                    > */}\n\n                      <Tabs\n                        value={this.state.value}\n                        indicatorColor=\"primary\"\n                        classes={{\n                          indicator: classes.indicator,\n                        }}\n                        centered\n                      >\n                        {menuData.map((item, index) => {\n                          return (\n                            <Tab\n                              key={index}\n                              selected\n                              onChange={this.handleChange}\n                              onMouseOver={(e) => this.handleMenuOpen(e, item)}\n                              //onClick={(e)=> this.handleMenuClick(e ,item)}\n                              component={Link}\n                              to={{\n                                pathname: item.pathname,\n                                search: this.props.location.search,\n                              }}\n                              classes={{ root: classes.tabItem }}\n                              label={item.label}\n                              aria-owns={open ? \"menu-list-grow\" : undefined}\n                              aria-haspopup={\"true\"}\n                            />\n                          );\n                        })}\n                      </Tabs>\n\n                      {menuList && menuList.length ? (\n                        <Popper\n                          open={open}\n                          anchorEl={anchorEl}\n                          id=\"menu-list-grow\"\n                        >\n                          <Paper>\n                            <MenuList>\n                              {menuList.map((value, index) => {\n                                return (\n                                  <MenuItem\n                                    component={Link}\n                                    to={{\n                                      pathname: value.pathname,\n                                      search: this.props.location.search,\n                                    }}\n                                    key={index}\n                                    //onClick={(e) => this.handleMenuClick(e, value)}\n                                    onClick={this.handleMenuClose}\n                                  >\n                                    {value.name}\n                                  </MenuItem>\n                                );\n                              })}\n                            </MenuList>\n                          </Paper>\n                        </Popper>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </React.Fragment>\n                )}\n              </Grid>\n            </Grid>\n            <Box display=\"flex\" flexDirection=\"row\">\n              <Typography variant=\"subtitle1\" align=\"center\">\n                Light\n              </Typography>\n              <Switch checked={darkState} onChange={this.handleThemeChange} />\n              <Typography variant=\"subtitle1\" align=\"center\">\n                Dark\n              </Typography>\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(Topbar));\n","D:\\my-app\\src\\genricSceen\\officebeares.js",[],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\viewEntries.js",[],"D:\\my-app\\src\\components\\MobileView\\mobileView.js",[],"D:\\my-app\\src\\components\\MobileView\\playerlistView.js",[],"D:\\my-app\\src\\commons\\genricComponents\\infoComponent.js",[],"D:\\my-app\\src\\commons\\genricComponents\\pageloader.js",[],"D:\\my-app\\src\\commons\\genricComponents\\fontAwsomicon.js",[],"D:\\my-app\\src\\commons\\genricComponents\\titlize.js",[],"D:\\my-app\\src\\commons\\genricComponents\\fieldIcon.js",[],"D:\\my-app\\src\\commons\\formfunction.js",["528","529","530","531","532","533","534","535","536","537"],"D:\\my-app\\src\\commons\\genricComponents\\snackbar.js",[],"D:\\my-app\\src\\components\\typo\\map.js",[],"D:\\my-app\\src\\formdata\\index.js",[],"D:\\my-app\\src\\globalUrls.js",[],"D:\\my-app\\src\\components\\MobileView\\responsiveListDilouge.js",[],"D:\\my-app\\src\\components\\contact\\assocList.js",[],"D:\\my-app\\src\\formdata\\matchdata.js",[],"D:\\my-app\\src\\formdata\\registeredclub.js",[],"D:\\my-app\\src\\formdata\\dashboardList.js",["538","539"],"D:\\my-app\\src\\formdata\\editDetils.js",[],"D:\\my-app\\src\\formdata\\drawresults.js",[],"D:\\my-app\\src\\formdata\\schedule.js",[],"D:\\my-app\\src\\formdata\\changePasswordFrom.js",[],"D:\\my-app\\src\\formdata\\eventsubscriptionlist.js",[],"D:\\my-app\\src\\formdata\\registerPlayer.js",[],"D:\\my-app\\src\\formdata\\verificationsteps.js",[],"D:\\my-app\\src\\formdata\\regex.js",["540","541","542","543","544","545","546","547"],"//regular expression rules for form fileds\n\nexport const regularExpData = [\n   \n   \n  \n       {\n        name: \"userName\",\n        regExp:   /^[a-zA-Z ]{3,15}$/,\n        \n           message: \"Enter characters between 3 to 15\"\n\n    },\n    {\n        name: \"phoneNumber\",\n        regExp: /^\\d{10}$/,\n        \"message\": \"Invalid Phone Number\"\n    },\n    {\n        name: \"emailAddress\",\n        regExp: /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i,\n        message: \"Invalid Email Address\"\n    },\n  \n    {\n        name: \"pincode\",\n        regExp: /^\\d{6}$/,\n        \"message\": \"Invalid Pincode\"\n    },\n    // {\n    //     name: \"dob\",\n    //     regExp: /^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$/i,\n    //     message: \"Invalid DOB\"\n    // },\n  \n    {\n        name: \"password\",\n        regExp: /^[a-zA-Z\\d\\!@#\\$%&\\*]{6,15}$/i,\n        \"message\": \"password accepts only alphabets,charcters, and number of 6 length\"\n    },\n    {\n        name: \"confirmpassword\",\n        regExp: /^[a-zA-Z\\d\\!@#\\$%&\\*]{6,15}$/i,\n        \"message\": \"Passwords don't match\"\n    },\n    {\n        name: \"otp\",\n        regExp: /^[0-9]{4}$/i,\n        \"message\": \"4 digits otp required\"\n        \n    },\n   \n    {\n        name: \"password\",\n        regExp: /^.{5,15}$/i,\n        \"message\": \"password required with minimum 5 characters\"\n    },\n    // {\n    //     name: \"isallusersdisabled\",\n    //     regExp: /^(true|false)$/,\n    //     \"message\": \"all users disabled/enabled selection required\"\n    // },\n    {\n        name: 'gender',\n        regExp: /^male$|^female$/,\n        \"message\": \"Allowed gender : male/female\"\n    },\n    {\n        name: 'afftype',\n        regExp: /^type1$/,\n        message: \"Allowed Affiliation Type : type1\"\n        // regExp: /^type1$|^custom$/,\n        //\"message\": \"Allowed Affiliation Type : type1/custom\"\n    },\n   \n    \n]","D:\\my-app\\src\\formdata\\formFields.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\viewProspectus.js",["548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566"],"import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport Card from \"@material-ui/core/Card\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Downloadpdf from \"../../../tournaments/ViewsDraws/drawsDialouge\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n//import Titleize from 'react-titleize';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport customStyles from \"../../../../styles/genricStyle\";\n\n\n\nimport { ApiCall } from \"../../../../APIService\";\nimport { commons } from \"../../../../commons\";\nclass viewProspectus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            \n            tournamentId: this.props.match.params.id,\n            open: false,\n         \n            value: \"Prospectus\",\n            ViewPdf: \"\",\n            validPdf: false,\n        };\n    }\n\n    componentDidMount() { \n\n   \n        this.setState({open: false });\n        let data= \"http://karnatakatt.com/pdf/fp-prospectus.pdf\"\n        const { tournamentId } = this.state;\n       \n                this.setState({\n                    loading: false,\n                    ViewPdf: data,\n                    open: true,\n                    validPdf: true,\n                });\n            \n            \n    };\n\n    validatepdf = (pdf) => {\n        const base64Rejex = /^([A-Za-z0-9+\\/]{4})*([A-Za-z0-9+\\/]{4}|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{2}==)$/;\n        const check = base64Rejex.test(pdf); // base64Data is the base64 string\n        return check;\n    };\n\n    handleClose = () => {\n        this.setState({\n          \n            open: false,\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const {\n            buttonArr,\n            value,\n            open,\n            validPdf,\n            ViewPdf,\n            loading,\n            tournamentId,\n        } = this.state;\n\n       \n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n\n                <div className={classes.root}>\n                   \n\n                    <Downloadpdf\n                        open={open}\n                        view={validPdf}\n                        ViewPdf={ViewPdf}\n                        tounamentgroup={value}\n                        onClose={this.handleClose}\n                        test={true}\n                    />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default withRouter(withStyles(customStyles)(viewProspectus));\n",["567","568"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\showResults.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\userProfile.js",["569","570","571","572"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\scheduletour.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\GiveEntries.js",["573","574"],"\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport customStyles from \"../../../../styles/genricStyle\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport SnackPopup from \"../../../../commons/genricComponents/snackbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { ApiCall } from \"../../../../APIService\";\nimport { sessioncommons } from \"../../../../commons\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n\nimport MaterialTable from \"material-table\";\nimport { tableIcons } from \"../../../../formdata\";\nimport { commons } from \"../../../../commons\";\n\nlet selectionFlag = false;\nclass subscribeEvent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      subsciptionData: \"\",\n      eventlist: [],\n      order_id: {},\n      checkedEvent: [],\n      data: [],\n      emptyuser: \"\",\n      result: {\n        oldSubscribeId: [],\n        subscribeId: [],\n        unSubscribeId: [],\n      },\n      checkedFees: [],\n      subscibedEvent: [],\n      showpayment: false,\n      eventFeeslist: {},\n      // fees: 0,\n      displayName: \"Event Details\",\n    };\n  }\n//load the event list for the given userid\n  updateData = () => {\n    let loggeduser = sessioncommons.getUser();\n    let tournamentdata = sessioncommons.getTournament();\n    let params = {};\n\n    params.type = \"events\";\n    params.userId = loggeduser.userId;\n    params.tournamentId = tournamentdata.tournamentId;\n      params.apiKey = \"apikey\";\n    params.caller = \"caller\";\n\n    this.setState({ loading: true });\n    ApiCall(\"POST\", params, \"core\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (!res[\"status\"]) {\n          // console.log(\"api error\" + res[\"status\"]);\n        }\n        return res;\n      })\n      .then((res) => {\n        if (res.data && res.data.length > 0) {\n          res.data.forEach((el) => {\n            const index = res.eventFeeSettings.events.findIndex(\n              (x) => x === el.abbName\n            );\n            el.eventfee = res.eventFeeSettings.eventFees[index];\n          });\n\n          let feeTotal;\n        \n          const oldSubId = [];\n          res.data.forEach((e) => {\n            if (e.hasOwnProperty(\"eventParticipants\")) {\n              if (e.eventParticipants.indexOf(loggeduser.userId) > -1) {\n                e.subscibedEvent = true;\n                oldSubId.push(e.abbName);\n                feeTotal = 0;\n                // const z = feeList.push(e.eventfee);\n                // feeTotal = feeList.reduce((accumulator, currentValue) => parseInt(accumulator) +parseInt(currentValue), 0)\n              } else {\n                e.subscibedEvent = false;\n              }\n            } else {\n              e.subscibedEvent = false;\n            }\n\n            this.setState({\n              checkedFees: feeTotal,\n              loading: false,\n              result: {\n                oldSubscribeId: oldSubId,\n              },\n              eventlist: res[\"data\"],\n              // checkedEvent: checkedEvent,\n              // checkedFees: l\n            });\n          });\n        } else if (res.message) {\n          this.setState({\n            loading: false,\n          });\n        }\n      })\n\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n\n  componentDidMount() {\n    this.updateData();\n  }\n\n  // subscribecalcultion = (ro, value) => {\n  //\n  //   const subsribedlist = []\n  //   const feeList = [];\n  //   let feeTotal;\n  //   const row = [...this.state.eventlist];\n  //   if (value === \"limited\") {\n  //     row.forEach(ro => {\n  //       if (ro._id === r._id) ro.subscibedEvent = e.target.checked;\n  //       if (ro.subscibedEvent) {\n\n  //         if (this.state.result.oldSubscribeId.includes(ro.abbName)) {\n  //           const z = subsribedlist.push(ro.eventfee);\n  //           feeTotal = \"Already subscribed\"\n  //         }\n  //         else {\n  //           const z = feeList.push(ro.eventfee);\n\n  //           feeTotal = JSON.stringify(feeList.reduce((accumulator, currentValue) => parseInt(accumulator) + parseInt(currentValue), 0))\n  //         }\n  //       }\n  //     });\n\n  //     }\n  //   else if (value == \"checkedAll\")\n  //   {\n  //     row.forEach(ro => {\n  //       const selectedAll = rows.length === this.state.eventlist.length;\n  //       ro.subscibedEvent = selectedAll;\n  //       if (selectedAll) {\n\n  //         if (this.state.result.oldSubscribeId.includes(ro.abbName)) {\n  //           const z = subsribedlist.push(ro.eventfee);\n  //           feeTotal = \"Already subscribed\"\n  //         }\n  //         else {\n  //           const z = feeList.push(ro.eventfee);\n\n  //           feeTotal = JSON.stringify(feeList.reduce((accumulator, currentValue) => parseInt(accumulator) + parseInt(currentValue), 0))\n  //         }\n  //       }\n\n  //     });\n\n  //     }\n\n  //   this.setState({\n  //     eventlist: row,\n  //     checkedFees: feeTotal\n  //   });\n\n  // }\n\n  selectionChange = (rows) => {\n    const subsribedlist = [];\n    let feeTotal;\n    const feeList = [];\n    if (selectionFlag) {\n      selectionFlag = false;\n      return;\n    }\n    if (rows.length === this.state.eventlist.length || rows.length === 0) {\n      const row = [...this.state.eventlist];\n      row.forEach((ro) => {\n        const selectedAll = rows.length === this.state.eventlist.length;\n        ro.subscibedEvent = selectedAll;\n        if (selectedAll) {\n          if (this.state.result.oldSubscribeId.includes(ro.abbName)) {\n            subsribedlist.push(ro.eventfee);\n            feeTotal = 0;\n          } else {\n             feeList.push(ro.eventfee);\n\n            feeTotal = JSON.stringify(\n              feeList.reduce(\n                (accumulator, currentValue) =>\n                  parseInt(accumulator) + parseInt(currentValue),\n                0\n              )\n            );\n          }\n        }\n      });\n\n      this.setState({\n        eventlist: row,\n        checkedFees: feeTotal,\n      });\n    }\n  };\n\n  updateSelection = (e, r) => {\n    const subsribedlist = [];\n    const feeList = [];\n    let feeTotal;\n    selectionFlag = true;\n    const row = [...this.state.eventlist];\n    row.forEach((ro) => {\n      if (ro._id === r._id) ro.subscibedEvent = e.target.checked;\n      if (ro.subscibedEvent) {\n        if (this.state.result.oldSubscribeId.includes(ro.abbName)) {\n           subsribedlist.push(ro.eventfee);\n        \n        } else {\n            feeList.push(ro.eventfee);\n\n          feeTotal = JSON.stringify(\n            feeList.reduce(\n              (accumulator, currentValue) =>\n                parseInt(accumulator) + parseInt(currentValue),\n              0\n            )\n          );\n        }\n      }\n    });\n\n    this.setState({\n      eventlist: row,\n      checkedFees: feeTotal,\n    });\n  };\n\n\n//function payment gateway(razor pay)\n  displayRazorpay = async () => {\n  \n\n    let loggeduser = sessioncommons.getUser();\n    const res = await commons.loadScript (\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n\n    if (!res) {\n      alert(\"Razorpay SDK failed to load. Are you online?\");\n      return;\n    }\n//function to get order_id to pass to options\n    await this.loadpaymentdata();\n\n    const options = {\n      key: \"rzp_test_ipbJ8OB0OUxB2u\",\n      currency: \"INR\",\n      amount: (parseInt(this.state.checkedFees) * 100).toString(),\n      order_id: this.state.order_id,\n      name: \"KTTA\",\n      description: \"Subsciption amount\",\n\n      handler: (response) => {\n        if (response.razorpay_payment_id) {\n          this.calculate(response.razorpay_payment_id);//calculate the fees\n        }\n      },\n      prefill: {\n        name: loggeduser.userName,\n        email: loggeduser.emailAddress,\n        phone_number: \"9899999999\",\n      },\n    };\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.on(\"payment.failed\", function (response) {\n      alert(response.error.description);\n    });\n    paymentObject.open();\n  };\n//api call for  oder_id for payment \n  loadpaymentdata = async () => {\n    let loggeduser = sessioncommons.getUser();\n    let timeStamp = loggeduser.affiliationId + \"_\" + Math.floor(Date.now());\n    let apiData = {};\n    apiData.amount = (parseInt(this.state.checkedFees) * 100).toString();\n      apiData.receipt = timeStamp;\n    await ApiCall(\"POST\", apiData, \"payment\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (res) {\n          this.setState({ order_id: res.orderId });\n        }\n      })\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n//fee calculation function\n  calculate = (transactionID) => {\n    const newSubId = [];\n    let unSubId = [];\n\n    this.state.eventlist.map((e) => {\n      if (\n        e.subscibedEvent &&\n        this.state.result.oldSubscribeId.indexOf(e.abbName) === -1\n      )\n        newSubId.push(e.abbName);\n    });\n    this.state.eventlist.map((e) => {\n      if (\n        newSubId.indexOf(e.abbName) === -1 &&\n        this.state.result.oldSubscribeId.indexOf(e.abbName) !== -1 &&\n        !e.subscibedEvent\n      )\n        unSubId.push(e.abbName);\n    });\n\n    const result = { ...this.state.result };\n    result.unSubscribeId = unSubId;\n    result.subscribeId = newSubId;\n\n    this.setState(\n      {\n        result: result,\n      },\n      () => {\n        this.onSubmit(transactionID);//api call to sever to store the trnsaction id \n      }\n    );\n  };\n  \n  //api call to sever to store the transaction id \n  onSubmit = async (transactionID) => {\n    const { result, checkedFees } = this.state;\n\n    let loggeduser = sessioncommons.getUser();\n    let tournamentdata = sessioncommons.getTournament();\n    let params = {};\n\n    params.type = \"eventSubscribe\";\n      params.caller = \"caller\";\n      params.apiKey = \"apikey\";\n      params.data = {\n      userId: loggeduser.userId,\n      tournamentId: tournamentdata.tournamentId,\n      subscribeID: result.subscribeId,\n      unSubscribeID: result.unSubscribeId,\n      transactionID: transactionID,\n      transactionAmount: checkedFees,\n      transactionType: \"none\",\n      oldSubscribeID: result.oldSubscribeId,\n    };\n\n    this.setState({ loading: true });\n    await ApiCall(\"POST\", params, \"core\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (res.message === \"success\") {\n          this.setState({ subsciptionData: res.message, loading: false });\n        } else {\n          // this.setState({ \"pwdStatus\": true, \"dialogOpen\": true, loading: false })\n          // this.resetForm();\n        }\n      })\n\n      .then((res) => {\n        this.updateData();//call the event list api with the upated subscibed/unsubscibed events for the logged user.\n      })\n\n      .catch((error) => {\n        commons.errorLog(error);\n      });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      eventlist,\n     \n      displayName,\n      checkedFees,\n      result,\n      loading,\n      subsciptionData,\n     \n    } = this.state;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <div className={classes.root}>\n          {/* <Grid container justify=\"center\"> */}\n\n          <MaterialTable\n            title={displayName}\n            columns={[\n              {\n                field: \"eventName\",\n                title: \"EventName\",\n              },\n              {\n                field: \"eventfee\",\n                title: \"EventFees\",\n\n              \n              },\n              {\n                title: \"Total\",\n                align: \"right\",\n              \n              },\n            ]}\n          \n\n            data={eventlist}\n            isLoading={loading}\n            icons={tableIcons}\n            options={{\n              toolbar: true,\n              showTextRowsSelected: false,\n              padding: \"dense\",\n              maxBodyHeight: 600,\n              search: false,\n              selection: true,\n              paging: false,\n              filtering: false,\n              \n              headerStyle: {\n                backgroundColor: \"#f44336a6\",\n                color: \"#FFF\",\n              },\n              rowStyle: {\n                color: \"#000000\",\n              },\n              selectionProps: (rowData) => ({\n                disabled: result.oldSubscribeId.indexOf(rowData.abbName) !== -1,\n                checked: rowData.subscibedEvent || false,\n                onClick: (e) => {\n                  this.updateSelection(e, rowData);\n                },\n              }),\n            }}\n            onSelectionChange={(rows) => {\n              this.selectionChange(rows);\n            }}\n          />\n          {!loading ? (\n            <React.Fragment>\n              <TableContainer component={Paper}>\n                <Table aria-label=\"spanning table\">\n                  <TableBody>\n                    <TableRow>\n                      <TableCell>\n                        Event Event Registration Fee (Non-Refundable)\n                      </TableCell>\n                      <TableCell>{checkedFees}</TableCell>\n                    </TableRow>\n                  </TableBody>\n                </Table>\n              </TableContainer>\n\n              <Button\n                onClick={this.displayRazorpay}\n                disabled={checkedFees && checkedFees.length ? false : true}\n                className={classes.subsciptionbutton}\n              >\n                Submit\n              </Button>\n            </React.Fragment>\n          ) : (\n            \"\"\n          )}\n\n          {subsciptionData.length ? (\n            <SnackPopup\n              message={`${subsciptionData} Subsciption is active now`}\n              type=\"success\"\n            />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(customStyles)(subscribeEvent);\n","D:\\my-app\\src\\components\\login\\dashboardcomp\\userVerification\\idverifiction.js",[],["575","576"],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\drawsDialouge.js",["577"],"import React, { Component } from 'react';\n\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport newsStyle from '../../../styles/genricStyle'\n\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\n\n\n//downloding draws  pdf component for event category\nclass Downloadpdf extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            tournamentId: this.props.id,\n            tounamentName:this.tounamentgroup,\n\n        };\n\n\n    }\n\n    componentDidMount() {\n     //   this.downloadFile()\n    }\n\n\n\n    \n\n    // downloadFile = () => {\n    //     window.location.href = \"https://yoursite.com/src/assets/files/exampleDoc.pdf\"\n    // }\n\n    // downloadFile = (event) => {\n\n    //     const { tounamentName, tournamentId } = this.state\n    //     var params = {};\n       \n    //     params.type = \"downloadDraws\";\n    //     params.tournamentId = tournamentId;\n    //     params.eventName = tounamentName;\n    //     params.client_key = \"ktta\";\n    //     params.withscore = false\n\n\n    //     ApiCall(\"POST\", params, \"core\")\n\n    //         .then((response) => response.json())\n    //         .then((data) => {\n    //             this.setState({\n\n    //                 ViewPdf: data,\n    //             });\n    //         })\n    //         .catch((error) => {\n    //             console.log(\"pdf error \" + error);\n    //         });\n    // };\n    \n\n\n\n\n    render() {\n\n        const { ViewPdf, open, view, test, onClose, tounamentgroup} = this.props;\n      //  const { tournamentId, ViewPdf, tounamentgroup } = this.state\n    \n     \n        return (\n            <Dialog\n                open={open}\n                onClose={onClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n                scroll='body'\n                maxWidth=\"md\"\n            >\n                {view ?\n                    <React.Fragment>\n                        <DialogTitle children=\"\" id=\"alert-dialog-title\"></DialogTitle>\n                        {test ? <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\" />\n                            <Typography>Do you want to download {tounamentgroup} PDF? </Typography>\n\n                        </DialogContent> : <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\" />\n                                <Typography>Do you want to download {tounamentgroup} Draws PDF? </Typography>\n\n                            </DialogContent>\n                        }\n                       \n                        <DialogActions>\n                            {\" \"}\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={onClose}\n                            >\n                                Back\n                                     </Button>\n                            <Button\n                                href={test ? ViewPdf : `data:application/pdf;base64,${ViewPdf}`}\n                              \n                                download={`${tounamentgroup}` + \".pdf\"}\n                              \n                            //onClick={this.downloadFile}\n                            >\n                                Download\n                                     </Button>\n\n\n                        </DialogActions>\n                    </React.Fragment>\n                    :\n                    <React.Fragment>\n                        <DialogTitle children=\"\" id=\"alert-dialog-title\">\n                            <Typography color=\"error\">No Data found for {tounamentgroup} </Typography>\n                        </DialogTitle>\n\n                    </React.Fragment>\n\n\n                }\n\n            </Dialog>\n\n        )\n\n    }\n}\n\nexport default withStyles(newsStyle)(Downloadpdf);\n\n\n","D:\\my-app\\src\\commons\\genricComponents\\formGenerator.js",["578","579","580"],"D:\\my-app\\src\\components\\login\\dashboardcomp\\genicPayemnt.js",["581","582","583","584","585"],"import Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport React, { Component } from \"react\";\nclass Payment extends React.Component {\n    // const[alignment, setAlignment] = React.useState('left');\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            subvalue: this.props.fomdata,\n\n        };\n    }\n    componentDidMount() {\n        //this.checkidverification()\n        \n         this.showrazorPay()\n\n\n\n    }\n\n    // parentupdate = (value) => {\n    //     handleChildUpdate(value)\n    // }\n    loadScript = (src) => {\n        return new Promise((resolve) => {\n            const script = document.createElement('script')\n            script.src = src\n            script.onload = () => {\n                resolve(true)\n            }\n            script.onerror = () => {\n                resolve(false)\n            }\n            document.body.appendChild(script)\n        })\n    }\n\n   \n    showrazorPay = async () => {\n       \n      \n     \n      \n        const res = await this.loadScript('https://checkout.razorpay.com/v1/checkout.js')\n\n        if (!res) {\n            alert('Razorpay SDK failed to load. Are you online?')\n            return\n        }\n\n        await this.props.orderId()\n\n    \n        const options = {\n            key: 'rzp_test_ipbJ8OB0OUxB2u',\n            currency: \"INR\",\n            amount: (parseInt(this.props.orderno.checkedFees) * 100).toString(),\n            order_id: this.props.orderno.order_id,\n            name: 'KTTA',\n            description: 'Subsciption amount',\n\n            handler: (response) => {\n\n                if (response.razorpay_payment_id)\n                \n                { this.props.submit(response.razorpay_payment_id) }\n\n\n\n\n\n\n            },\n            prefill: {\n                name: this.state.subvalue.userName,\n                email: this.state.subvalue.emailAddress,\n                phone_number: '9899999999'\n            }\n        }\n        const paymentObject = new window.Razorpay(options)\n        paymentObject.on('payment.failed', function (response) {\n\n            alert(response.error.description);\n\n        });\n        paymentObject.open()\n\n    };\n\n    render() {\n        const { classes, loading } = this.props;\n        const { value } = this.state;\n\n        return (\n            <React.Fragment>\n                <CssBaseline />\n                <div\n\n                >\n\n                  \n\n\n                </div>\n               \n                       \n                         \n            </React.Fragment>\n        );\n    }\n}\nexport default (Payment);\n",["586","587"],"D:\\my-app\\src\\formdata\\clubassocid.js",[],"D:\\my-app\\src\\formdata\\tableIcons.js",[],"D:\\my-app\\src\\formdata\\button.js",[],"D:\\my-app\\src\\formdata\\registeredAssociation.js",[],"D:\\my-app\\src\\components\\players\\dialouges\\baseDialouge.js",[],"D:\\my-app\\src\\formdata\\viewDrawsMenu.js",[],"D:\\my-app\\src\\formdata\\statistics.js",[],"D:\\my-app\\src\\formdata\\playerDetailsCol.js",[],"D:\\my-app\\src\\components\\about\\registeredClub.js",[],"D:\\my-app\\src\\components\\about\\registeredAssoc.js",[],"D:\\my-app\\src\\components\\tournaments\\ViewsDraws\\draws.js",["588","589","590","591","592"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Downloadpdf from \"./drawsDialouge\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n//import Titleize from 'react-titleize';\nimport Paper from \"@material-ui/core/Paper\";\nimport customStyles from \"../../../styles/genricStyle\";\nimport { selectButtons } from \"../../../formdata\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { ApiCall } from \"../../../APIService\";\nimport RefreshLoader from \"../../../commons/genricComponents/pageloader\";\nimport { commons } from \"../../../commons\";\n//downloding draws  view component\nclass ViewDraws extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      tournamentId: this.props.match.params.id,\n      open: false,\n      buttonArr: selectButtons,\n      value: \"\",\n      ViewPdf: \"\",\n      validPdf: false,\n    };\n  }\n\n  componentDidMount() {}\n\n  onChange = (event, value) => {\n    this.setState({ value: value, open: false });\n\n    const { tournamentId } = this.state;\n    var params = {};\n\n    params.type = \"downloadDraws\";\n    params.tournamentId = tournamentId;\n    params.eventName = value;\n\n    this.setState({ loading: true });\n    ApiCall(\"POST\", params, \"coreApi\")\n      .then((response) => response.json())\n      .then((data) => {\n   \n        const validPdf = this.validatepdf(data);\n        this.setState({\n          loading: false,\n          ViewPdf: data,\n          open: true,\n          validPdf,\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error)\n      });\n  };\n\n  validatepdf = (pdf) => {\n   \n  const base64Rejex = /^([A-Za-z0-9+\\/]{4})*([A-Za-z0-9+\\/]{4}|[A-Za-z0-9+\\/]{3}=|[A-Za-z0-9+\\/]{2}==)$/;\n    const check = base64Rejex.test(pdf); // base64Data is the base64 string\n    return check;\n  };\n\n  handleClose = () => {\n    this.setState({\n      value: \"\",\n      open: false,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const {\n      buttonArr,\n      value,\n      open,\n      validPdf,\n      ViewPdf,\n      loading,\n      tournamentId,\n    } = this.state;\n\n    \n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n\n        <div className={classes.root}>\n          <Grid container justify=\"center\">\n            <RefreshLoader display=\"overlay\" loading={loading} />\n            <Paper>\n              <Grid  item md={12} sm={12}>\n                {buttonArr.map((item, index) => {\n                  return (\n                    <ToggleButtonGroup\n                      style={{ margin: 5 }}\n                      value={value}\n                      exclusive\n                      key={index}\n                      onChange={this.onChange}\n                      aria-label=\"text alignment\"\n                    >\n                      <ToggleButton\n                        classes={{\n                          root: classes.buttonstyle, // class name, e.g. `root-x`\n\n                          selected: classes.selected, // class name, e.g. `disabled-x`\n                        }}\n                        value={item.value}\n                        aria-label=\"centered\"\n                      >\n                        {item.name}\n                      </ToggleButton>\n                    </ToggleButtonGroup>\n                  );\n                })}\n              </Grid>\n            </Paper>\n          </Grid>\n\n          <Downloadpdf\n            open={open}\n            view={validPdf}\n            ViewPdf={ViewPdf}\n            tounamentgroup={value}\n            onClose={this.handleClose}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(ViewDraws));\n","D:\\my-app\\src\\genricSceen\\registerdClub.js",[],"D:\\my-app\\src\\components\\landingPage\\linkpage.js",[],"D:\\my-app\\src\\formdata\\standings.js",[],"D:\\my-app\\src\\formdata\\menuData.js",[],"D:\\my-app\\src\\config\\bannerConfig.js",[],"D:\\my-app\\src\\components\\socialMediaExtracts\\mediaExtracts.js",[],"D:\\my-app\\src\\commons\\genricComponents\\imageClass.js",[],"D:\\my-app\\src\\components\\landingPage\\Sponsers.js",["593","594"],"import Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\nimport { ApiCall } from \"../../APIService\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport { API_URL } from \"../../globalUrls\";\nimport { commons } from \"../../commons\";\nimport InfoComponent from \"../../commons/genricComponents/infoComponent\";\n\n\nexport default class Sponsers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sponsers: [],\n      filepath: \"\",\n    };\n  }\n//api call fo sponsers data\n  loadSponsersData = () => {\n    let apiData = {};\n    apiData.tableName = \"sponsers\";\n    \n    apiData.type = \"getData\";\n\n    ApiCall(\"POST\", apiData, \"getData\")\n      .then((res) => res.json())\n      .then((res) => {\n        if (!res[\"status\"]) {\n          console.log(\"api error\" + res[\"status\"]);\n        }\n        return res;\n      })\n      .then((res) => {\n        this.setState({\n          sponsers: res[\"getData\"],\n          filepath: res[\"imagePath\"],\n        });\n      })\n      .catch((error) => {\n        commons.errorLog(error)\n      });\n  };\n\n  componentDidMount = () => {\n    this.loadSponsersData();\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { sponsers, filepath } = this.state;\n    \n\n    return (\n      <React.Fragment>\n        <div className={classes.root}>\n          {/* <Grid container justify=\"center\"> */}\n\n          <div style={{ display: \"flex\" }}>\n            <Typography variant=\"h6\" component=\"h6\" style={{ flex: 1 }}>\n              {\" \"}\n              Sponsors\n            </Typography>\n          </div>\n          <Divider />\n\n          <Paper style={{ marginTop: 20 }}>\n            <Grid container spacing={1} justify=\"center\">\n              {sponsers.length ? (\n                sponsers.map((newsRow, newsIndex) => {\n                  return (\n                    <Grid key={newsIndex} item>\n                      <img\n                        style={{\n                          height: 100,\n                          width: 100,\n                          marginTop: 20,\n                        }}\n                       alt=\"\" src={API_URL + `${filepath}` + \"/\" + `${newsRow.image}`}\n                      ></img>\n                    </Grid>\n                  );\n                })\n              ) : (\n                <InfoComponent\n                  variant=\"h4\"\n                  message=\"No Data available yet!!!\"\n                />\n              )}\n            </Grid>\n          </Paper>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","D:\\my-app\\src\\components\\landingPage\\RegisteredAssoc.js",[],"D:\\my-app\\src\\components\\landingPage\\RegistredCulb.js",[],"D:\\my-app\\src\\components\\landingPage\\OfficeBearers.js",[],"D:\\my-app\\src\\components\\landingPage\\StatisticsContent.js",[],"D:\\my-app\\src\\components\\landingPage\\StandingContent.js",[],"D:\\my-app\\src\\components\\landingPage\\NewsContent.js",[],"D:\\my-app\\src\\components\\landingPage\\Footer.js",[],"D:\\my-app\\src\\components\\login\\dashboardcomp\\logout.js",[],"D:\\my-app\\src\\components\\MobileView\\rankingView.js",[],"D:\\my-app\\src\\components\\players\\dialouges\\tabledisplay.js",[],"D:\\my-app\\src\\genricSceen\\newsPage.js",["595"],"import React, { Component } from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport { Link, withRouter } from \"react-router-dom\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ViewMorePage from \"../components/landingPage/linkpage\";\nimport Titlize from \"../commons/genricComponents/titlize\";\nimport customStyles from \"../styles/genricStyle\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport ReactHtmlParser from \"react-html-parser\";\nimport Button from \"@material-ui/core/Button\";\nimport Topbar from \"../components/landingPage/TopBar\"; \n//import {newsData} from \"../../formdata\"\nimport RefreshLoader from \"../commons/genricComponents/pageloader\";\nimport { uiCommons } from \"../commons\";\nimport { ApiCall } from \"../APIService\";\nimport { API_URL } from \"../globalUrls\";\nimport { commons } from \"../commons\";\nimport InfoComponent from \"../commons/genricComponents/infoComponent\";\nconst gridColumns = 2;\nconst gridRows = 3;\n//genric component for dispalying the data in landing page  and detailing page of news component\n class GenricNewsContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            newsData: [],\n            filepath: \"\",\n            loading: false\n        };\n    }\n//api fo getting news\n    loadNewsData = () => {\n        let apiData = {};\n        apiData.tableName = \"news\";\n        apiData.client_key = \"ktta\";\n        apiData.type = \"getData\";\n        this.setState({ loading: true });\n        ApiCall(\"POST\", apiData, \"getData\")\n            .then((res) => res.json())\n            .then((res) => {\n                this.setState({\n                    loading: false,\n                    newsData: res[\"getData\"],\n                    filepath: res[\"imagePath\"],\n                });\n            })\n            .catch((error) => {\n                commons.errorLog(error)\n            });\n    };\n    componentDidMount = () => {\n        this.loadNewsData();\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const { newsData, loading, filepath} = this.state;\n        let filteredata = newsData.filter(item => item.image && item.title !=='');\n        const newsValues = commons.genricGrid(filteredata, gridRows, gridColumns);\n\n\n        return (\n          <div className={classes.root}>\n            {type === \"landing\" ? (\n              <Paper elevation={3}>\n                <div style={{ display: \"flex\" }}>\n                  <Typography variant=\"h6\" component=\"h6\" style={{ flex: 1 }}>\n                    {\" \"}\n                    Latest News\n                  </Typography>\n                  <ViewMorePage\n                    pathname=\"/newsdata\"\n                    title=\"VIEW ALL\"\n                    index={false}\n                  />\n                </div>\n                <Divider />\n                <Grid container justify=\"center\">\n                  {filteredata.length ? (\n                    newsValues.map((gridRow, gridIndex) => {\n                      let newsDetails = gridRow.colums;\n\n                      return (\n                        <Grid container spacing={2} key={gridIndex}>\n                          {newsDetails.map((newsRow, newsIndex) => {\n                            let gridColumnData = uiCommons.getGrid(gridColumns);\n                            if (newsIndex < gridColumns) {\n                              return (\n                                <Grid\n                                  item\n                                  md={gridColumnData.md}\n                                  xs={gridColumnData.xs}\n                                  key={newsIndex}\n                                  style={{ display: \"flex\" }}\n                                >\n                                  <Card style={{ display: \"flex\", margin: 5 }}>\n                                    <CardMedia\n                                      component=\"img\"\n                                      // image={newsRow.img}\n                                      className={classes.horiCardMedia}\n                                      src={\n                                        newsRow.image\n                                          ? API_URL +\n                                            `${filepath}` +\n                                            \"/\" +\n                                            `${newsRow.image}`\n                                          : \"\"\n                                      }\n                                    />\n                                    <CardContent\n                                      component={Link}\n                                      to={`/detailednews/${newsRow.id}`}\n                                    >\n                                      <Typography\n                                        className={classes.newsfont}\n                                        variant=\"h6\"\n                                      >\n                                        <Titlize value={newsRow.title} />\n                                      </Typography>\n                                    </CardContent>\n                                  </Card>\n                                </Grid>\n                              );\n                            }\n                          })}\n                        </Grid>\n                      );\n                    })\n                  ) : (\n                    <InfoComponent\n                      variant=\"h4\"\n                      message=\"No Data available yet!!!\"\n                    />\n                  )}\n                </Grid>\n              </Paper>\n            ) : (\n              <React.Fragment>\n                  <Topbar index={0}  />\n\n                {/* <Grid container justify=\"center\"> */}\n\n                <Grid\n                  spacing={1}\n                  alignItems=\"center\"\n                  justify=\"center\"\n                  align=\"center\"\n                  container\n                >\n                  {/* <Grid item xs={12} md={12}> */}\n\n                  <RefreshLoader display=\"overlay\" loading={loading} />\n\n                  <Paper elavation={1}>\n                    {newsData.length ? (\n                      newsData.map((value, index) => {\n                        return (\n                          <Card className={classes.card} key={index}>\n                            <Grid container>\n                              <Grid\n                                item\n                                xs={12}\n                                md={4}\n                                style={{ height: \"100%\" }}\n                              >\n                                <CardMedia\n                                  component=\"img\"\n                                  alt=\"\"\n                                  src={\n                                    value.image\n                                      ? API_URL +\n                                        `${filepath}` +\n                                        \"/\" +\n                                        `${value.image}`\n                                      : \"\"\n                                  }\n                                />\n                              </Grid>\n\n                              <Grid item xs={12} md={8}>\n                                <CardContent>\n                                  <Typography gutterBottom variant=\"h5\">\n                                    <Titlize\n                                      value={\n                                        value.title !== null ? value.title : \"\"\n                                      }\n                                    />\n                                  </Typography>\n                                  <Divider style={{ height: 2 }} />\n\n                                  <Typography>\n                                    <LinesEllipsis\n                                      text={\n                                        value.description !== null\n                                          ? ReactHtmlParser(value.description)\n                                          : \"\"\n                                      }\n                                      ellipsis=\"...\"\n                                      trimRight\n                                      basedOn=\"letters\"\n                                    />\n                                  </Typography>\n                                </CardContent>\n\n                                <CardActions className={classes.newscardaction}>\n                                  <Button\n                                    className={classes.buttonend}\n                                    component={Link}\n                                    // to={{\n                                    //   pathname: \"/detailednews\",\n                                    //   myCustomProps: value.id,\n                                    //   myCustomProps2: filepath\n                                    // }}\n                                    to={`/detailednews/${value.id}`}\n                                  >\n                                    Read more\n                                  </Button>\n                                </CardActions>\n                              </Grid>\n                            </Grid>\n                          </Card>\n                        );\n                      })\n                    ) : (\n                      <InfoComponent\n                        variant=\"h4\"\n                        message=\"No Data available yet!!!\"\n                      />\n                    )}\n                  </Paper>\n                </Grid>\n                {/* </Grid> */}\n                {/* </Grid> */}\n              </React.Fragment>\n            )}\n          </div>\n        );\n    }\n}\nexport default withRouter(withStyles(customStyles)(GenricNewsContent));","D:\\my-app\\src\\components\\tournaments\\commitedetails.js",[],"D:\\my-app\\src\\commons\\genricComponents\\charts.js",["596"],"import Chartist from \"chartist\";\nimport Legend from \"chartist-plugin-legend\";\n\nimport {  withRouter } from \"react-router-dom\";\nimport customStyles from \"../../styles/genricStyle\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\n\nimport { useEffect } from \"react\";\n\n//graph componet (chartist)\n\nvar delays2 = 80,\n  durations2 = 500;\n\nconst playerStat = {\n \n  data: {\n    labels: [\"MP\", \"FP\", \"T\", \"MM\", \"FM\"],\n    series: [1850, 1000, 1655, 1588, 1422],\n  },\n  \n  options: {\n    plugins: [\n      Chartist.plugins.legend({\n        legendNames: [\n          \"#Male Players\",\n          \"#Female Players\",\n          \"#Tournament\",\n          \"#Male Matches\",\n          \"#Female Matches\",\n        ],\n        \n      }),\n    ],\n\n        axisX: {\n      showGrid: true,\n      position: \"end\",\n    },\n    axisY: {\n      showGrid: true,\n      position: \"end\",\n    },\n   \n    \n       \n        low:0,\n      \n    distributeSeries: true,\n  },\n\n  responsiveOptions: [\n    [\n      \"screen and (max-width: 640px)\",\n      {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function (value) {\n            return value[0];\n          },\n        },\n      },\n    ],\n  ],\n  animation: {\n    draw: function (data) {\n      if (data.type === \"bar\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays2,\n            dur: durations2,\n            from: 0,\n            to: 1,\n            easing: \"ease\",\n          },\n        });\n      }\n    },\n  },\n};\n\n\nconst Graph = () => {\n  useEffect(() => {\n    const script = document.createElement(\"link\");\n    script.href = \"//cdn.jsdelivr.net/chartist.js/latest/chartist.min.css\";\n    script.rel = \"stylesheet\";\n    script.type = \"text/css\";\n    document.getElementsByClassName(\"ct-chart\")[0].appendChild(script);\n\n   new Chartist.Bar(\n     \".ct-chart\",\n     playerStat.data,\n     playerStat.options,\n     playerStat.responsiveOptions,\n     playerStat.animation\n   );\n  });\n       return (\n        \n           <div className=\"ct-chart\"/>\n       \n       );  \n};\n\n class Statistics extends Component {\n  render() {\n   \n\n    return (\n    \n        <Graph />\n     \n    );\n  }\n}\n\nexport default withRouter(withStyles(customStyles)(Statistics));\n\n","D:\\my-app\\src\\components\\MobileView\\responsiveDialouge.js",[],"D:\\my-app\\src\\formdata\\playerlist.js",[],"D:\\my-app\\src\\formdata\\rankingRespTableData.js",[],{"ruleId":"597","replacedBy":"598"},{"ruleId":"599","replacedBy":"600"},{"ruleId":"601","severity":1,"message":"602","line":82,"column":28,"nodeType":"603","messageId":"604","endLine":82,"endColumn":30},{"ruleId":"605","severity":1,"message":"606","line":47,"column":32,"nodeType":"607","endLine":47,"endColumn":51},{"ruleId":"608","severity":1,"message":"609","line":81,"column":53,"nodeType":"603","messageId":"610","endLine":81,"endColumn":54},{"ruleId":"608","severity":1,"message":"609","line":81,"column":59,"nodeType":"603","messageId":"610","endLine":81,"endColumn":60},{"ruleId":"611","severity":1,"message":"612","line":65,"column":49,"nodeType":"613","messageId":"614","endLine":65,"endColumn":51},{"ruleId":"611","severity":1,"message":"615","line":104,"column":26,"nodeType":"613","messageId":"616","endLine":104,"endColumn":28},{"ruleId":"611","severity":1,"message":"617","line":153,"column":31,"nodeType":"613","messageId":"616","endLine":153,"endColumn":33},{"ruleId":"611","severity":1,"message":"612","line":75,"column":49,"nodeType":"613","messageId":"614","endLine":75,"endColumn":51},{"ruleId":"611","severity":1,"message":"615","line":96,"column":26,"nodeType":"613","messageId":"616","endLine":96,"endColumn":28},{"ruleId":"611","severity":1,"message":"612","line":145,"column":39,"nodeType":"613","messageId":"614","endLine":145,"endColumn":41},{"ruleId":"611","severity":1,"message":"615","line":154,"column":28,"nodeType":"613","messageId":"616","endLine":154,"endColumn":30},{"ruleId":"611","severity":1,"message":"617","line":192,"column":31,"nodeType":"613","messageId":"616","endLine":192,"endColumn":33},{"ruleId":"611","severity":1,"message":"615","line":85,"column":39,"nodeType":"613","messageId":"616","endLine":85,"endColumn":41},{"ruleId":"611","severity":1,"message":"615","line":103,"column":39,"nodeType":"613","messageId":"616","endLine":103,"endColumn":41},{"ruleId":"611","severity":1,"message":"612","line":240,"column":39,"nodeType":"613","messageId":"614","endLine":240,"endColumn":41},{"ruleId":"611","severity":1,"message":"617","line":256,"column":31,"nodeType":"613","messageId":"616","endLine":256,"endColumn":33},{"ruleId":"618","severity":1,"message":"619","line":368,"column":30,"nodeType":"620","messageId":"621","endLine":368,"endColumn":46,"fix":"622"},{"ruleId":"611","severity":1,"message":"612","line":65,"column":49,"nodeType":"613","messageId":"614","endLine":65,"endColumn":51},{"ruleId":"611","severity":1,"message":"617","line":120,"column":26,"nodeType":"613","messageId":"616","endLine":120,"endColumn":28},{"ruleId":"623","severity":1,"message":"624","line":2,"column":17,"nodeType":"625","messageId":"626","endLine":2,"endColumn":26},{"ruleId":"623","severity":1,"message":"627","line":3,"column":35,"nodeType":"625","messageId":"626","endLine":3,"endColumn":42},{"ruleId":"623","severity":1,"message":"628","line":4,"column":8,"nodeType":"625","messageId":"626","endLine":4,"endColumn":23},{"ruleId":"623","severity":1,"message":"629","line":5,"column":10,"nodeType":"625","messageId":"626","endLine":5,"endColumn":19},{"ruleId":"623","severity":1,"message":"630","line":8,"column":8,"nodeType":"625","messageId":"626","endLine":8,"endColumn":18},{"ruleId":"597","replacedBy":"631"},{"ruleId":"599","replacedBy":"632"},{"ruleId":"623","severity":1,"message":"633","line":11,"column":10,"nodeType":"625","messageId":"626","endLine":11,"endColumn":17},{"ruleId":"623","severity":1,"message":"634","line":14,"column":10,"nodeType":"625","messageId":"626","endLine":14,"endColumn":17},{"ruleId":"605","severity":1,"message":"606","line":102,"column":32,"nodeType":"607","endLine":102,"endColumn":51},{"ruleId":"623","severity":1,"message":"635","line":320,"column":15,"nodeType":"625","messageId":"626","endLine":320,"endColumn":20},{"ruleId":"611","severity":1,"message":"615","line":130,"column":19,"nodeType":"613","messageId":"616","endLine":130,"endColumn":21},{"ruleId":"611","severity":1,"message":"615","line":135,"column":42,"nodeType":"613","messageId":"616","endLine":135,"endColumn":44},{"ruleId":"611","severity":1,"message":"617","line":44,"column":30,"nodeType":"613","messageId":"616","endLine":44,"endColumn":32},{"ruleId":"611","severity":1,"message":"612","line":57,"column":49,"nodeType":"613","messageId":"614","endLine":57,"endColumn":51},{"ruleId":"611","severity":1,"message":"615","line":65,"column":28,"nodeType":"613","messageId":"616","endLine":65,"endColumn":30},{"ruleId":"611","severity":1,"message":"636","line":124,"column":28,"nodeType":"613","messageId":"614","endLine":124,"endColumn":30},{"ruleId":"608","severity":1,"message":"609","line":310,"column":66,"nodeType":"603","messageId":"610","endLine":310,"endColumn":67},{"ruleId":"608","severity":1,"message":"609","line":310,"column":72,"nodeType":"603","messageId":"610","endLine":310,"endColumn":73},{"ruleId":"611","severity":1,"message":"615","line":8,"column":18,"nodeType":"613","messageId":"616","endLine":8,"endColumn":20},{"ruleId":"611","severity":1,"message":"617","line":75,"column":23,"nodeType":"613","messageId":"616","endLine":75,"endColumn":25},{"ruleId":"611","severity":1,"message":"615","line":104,"column":18,"nodeType":"613","messageId":"616","endLine":104,"endColumn":20},{"ruleId":"601","severity":1,"message":"637","line":105,"column":24,"nodeType":"603","messageId":"604","endLine":105,"endColumn":26},{"ruleId":"601","severity":1,"message":"602","line":111,"column":23,"nodeType":"603","messageId":"604","endLine":111,"endColumn":25},{"ruleId":"601","severity":1,"message":"602","line":118,"column":23,"nodeType":"603","messageId":"604","endLine":118,"endColumn":25},{"ruleId":"601","severity":1,"message":"602","line":139,"column":28,"nodeType":"603","messageId":"604","endLine":139,"endColumn":30},{"ruleId":"601","severity":1,"message":"637","line":140,"column":29,"nodeType":"603","messageId":"604","endLine":140,"endColumn":31},{"ruleId":"601","severity":1,"message":"637","line":151,"column":22,"nodeType":"603","messageId":"604","endLine":151,"endColumn":24},{"ruleId":"611","severity":1,"message":"615","line":200,"column":18,"nodeType":"613","messageId":"616","endLine":200,"endColumn":20},{"ruleId":"623","severity":1,"message":"638","line":4,"column":8,"nodeType":"625","messageId":"626","endLine":4,"endColumn":22},{"ruleId":"623","severity":1,"message":"639","line":10,"column":8,"nodeType":"625","messageId":"626","endLine":10,"endColumn":22},{"ruleId":"640","severity":1,"message":"641","line":21,"column":33,"nodeType":"642","messageId":"643","endLine":21,"endColumn":34,"suggestions":"644"},{"ruleId":"640","severity":1,"message":"641","line":21,"column":53,"nodeType":"642","messageId":"643","endLine":21,"endColumn":54,"suggestions":"645"},{"ruleId":"640","severity":1,"message":"646","line":38,"column":28,"nodeType":"642","messageId":"643","endLine":38,"endColumn":29,"suggestions":"647"},{"ruleId":"640","severity":1,"message":"648","line":38,"column":32,"nodeType":"642","messageId":"643","endLine":38,"endColumn":33,"suggestions":"649"},{"ruleId":"640","severity":1,"message":"650","line":38,"column":36,"nodeType":"642","messageId":"643","endLine":38,"endColumn":37,"suggestions":"651"},{"ruleId":"640","severity":1,"message":"646","line":43,"column":28,"nodeType":"642","messageId":"643","endLine":43,"endColumn":29,"suggestions":"652"},{"ruleId":"640","severity":1,"message":"648","line":43,"column":32,"nodeType":"642","messageId":"643","endLine":43,"endColumn":33,"suggestions":"653"},{"ruleId":"640","severity":1,"message":"650","line":43,"column":36,"nodeType":"642","messageId":"643","endLine":43,"endColumn":37,"suggestions":"654"},{"ruleId":"623","severity":1,"message":"655","line":2,"column":8,"nodeType":"625","messageId":"626","endLine":2,"endColumn":19},{"ruleId":"623","severity":1,"message":"656","line":3,"column":8,"nodeType":"625","messageId":"626","endLine":3,"endColumn":17},{"ruleId":"623","severity":1,"message":"657","line":5,"column":8,"nodeType":"625","messageId":"626","endLine":5,"endColumn":20},{"ruleId":"623","severity":1,"message":"658","line":6,"column":8,"nodeType":"625","messageId":"626","endLine":6,"endColumn":12},{"ruleId":"623","severity":1,"message":"659","line":7,"column":10,"nodeType":"625","messageId":"626","endLine":7,"endColumn":14},{"ruleId":"623","severity":1,"message":"660","line":11,"column":10,"nodeType":"625","messageId":"626","endLine":11,"endColumn":20},{"ruleId":"623","severity":1,"message":"661","line":13,"column":8,"nodeType":"625","messageId":"626","endLine":13,"endColumn":12},{"ruleId":"623","severity":1,"message":"662","line":16,"column":8,"nodeType":"625","messageId":"626","endLine":16,"endColumn":18},{"ruleId":"623","severity":1,"message":"663","line":20,"column":8,"nodeType":"625","messageId":"626","endLine":20,"endColumn":13},{"ruleId":"623","severity":1,"message":"633","line":25,"column":10,"nodeType":"625","messageId":"626","endLine":25,"endColumn":17},{"ruleId":"623","severity":1,"message":"634","line":26,"column":10,"nodeType":"625","messageId":"626","endLine":26,"endColumn":17},{"ruleId":"623","severity":1,"message":"664","line":47,"column":17,"nodeType":"625","messageId":"626","endLine":47,"endColumn":29},{"ruleId":"640","severity":1,"message":"665","line":60,"column":43,"nodeType":"642","messageId":"643","endLine":60,"endColumn":44,"suggestions":"666"},{"ruleId":"640","severity":1,"message":"665","line":60,"column":63,"nodeType":"642","messageId":"643","endLine":60,"endColumn":64,"suggestions":"667"},{"ruleId":"640","severity":1,"message":"665","line":60,"column":81,"nodeType":"642","messageId":"643","endLine":60,"endColumn":82,"suggestions":"668"},{"ruleId":"640","severity":1,"message":"665","line":60,"column":100,"nodeType":"642","messageId":"643","endLine":60,"endColumn":101,"suggestions":"669"},{"ruleId":"623","severity":1,"message":"670","line":75,"column":13,"nodeType":"625","messageId":"626","endLine":75,"endColumn":22},{"ruleId":"623","severity":1,"message":"671","line":80,"column":13,"nodeType":"625","messageId":"626","endLine":80,"endColumn":20},{"ruleId":"623","severity":1,"message":"664","line":81,"column":13,"nodeType":"625","messageId":"626","endLine":81,"endColumn":25},{"ruleId":"597","replacedBy":"672"},{"ruleId":"599","replacedBy":"673"},{"ruleId":"611","severity":1,"message":"615","line":66,"column":53,"nodeType":"613","messageId":"616","endLine":66,"endColumn":55},{"ruleId":"611","severity":1,"message":"612","line":147,"column":46,"nodeType":"613","messageId":"614","endLine":147,"endColumn":48},{"ruleId":"611","severity":1,"message":"615","line":159,"column":34,"nodeType":"613","messageId":"616","endLine":159,"endColumn":36},{"ruleId":"611","severity":1,"message":"617","line":219,"column":35,"nodeType":"613","messageId":"616","endLine":219,"endColumn":37},{"ruleId":"611","severity":1,"message":"615","line":310,"column":34,"nodeType":"613","messageId":"616","endLine":310,"endColumn":36},{"ruleId":"611","severity":1,"message":"615","line":317,"column":34,"nodeType":"613","messageId":"616","endLine":317,"endColumn":36},{"ruleId":"597","replacedBy":"674"},{"ruleId":"599","replacedBy":"675"},{"ruleId":"608","severity":1,"message":"609","line":116,"column":63,"nodeType":"603","messageId":"610","endLine":116,"endColumn":64},{"ruleId":"611","severity":1,"message":"617","line":46,"column":43,"nodeType":"613","messageId":"616","endLine":46,"endColumn":45},{"ruleId":"611","severity":1,"message":"615","line":59,"column":42,"nodeType":"613","messageId":"616","endLine":59,"endColumn":44},{"ruleId":"611","severity":1,"message":"617","line":60,"column":49,"nodeType":"613","messageId":"616","endLine":60,"endColumn":51},{"ruleId":"623","severity":1,"message":"662","line":1,"column":8,"nodeType":"625","messageId":"626","endLine":1,"endColumn":18},{"ruleId":"623","severity":1,"message":"676","line":3,"column":17,"nodeType":"625","messageId":"626","endLine":3,"endColumn":26},{"ruleId":"623","severity":1,"message":"677","line":94,"column":17,"nodeType":"625","messageId":"626","endLine":94,"endColumn":24},{"ruleId":"623","severity":1,"message":"671","line":94,"column":26,"nodeType":"625","messageId":"626","endLine":94,"endColumn":33},{"ruleId":"623","severity":1,"message":"678","line":95,"column":17,"nodeType":"625","messageId":"626","endLine":95,"endColumn":22},{"ruleId":"597","replacedBy":"679"},{"ruleId":"599","replacedBy":"680"},{"ruleId":"640","severity":1,"message":"665","line":64,"column":37,"nodeType":"642","messageId":"643","endLine":64,"endColumn":38,"suggestions":"681"},{"ruleId":"640","severity":1,"message":"665","line":64,"column":57,"nodeType":"642","messageId":"643","endLine":64,"endColumn":58,"suggestions":"682"},{"ruleId":"640","severity":1,"message":"665","line":64,"column":75,"nodeType":"642","messageId":"643","endLine":64,"endColumn":76,"suggestions":"683"},{"ruleId":"640","severity":1,"message":"665","line":64,"column":94,"nodeType":"642","messageId":"643","endLine":64,"endColumn":95,"suggestions":"684"},{"ruleId":"623","severity":1,"message":"664","line":85,"column":7,"nodeType":"625","messageId":"626","endLine":85,"endColumn":19},{"ruleId":"608","severity":1,"message":"609","line":86,"column":60,"nodeType":"603","messageId":"610","endLine":86,"endColumn":61},{"ruleId":"608","severity":1,"message":"609","line":86,"column":66,"nodeType":"603","messageId":"610","endLine":86,"endColumn":67},{"ruleId":"611","severity":1,"message":"685","line":95,"column":65,"nodeType":"613","messageId":"614","endLine":95,"endColumn":67},{"ruleId":"623","severity":1,"message":"686","line":2,"column":8,"nodeType":"625","messageId":"626","endLine":2,"endColumn":14},"no-native-reassign",["687"],"no-negated-in-lhs",["688"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component component must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","expectedInside","Array.prototype.find() expects a return value from arrow function.","no-whitespace-before-property","Unexpected whitespace before property verifyForm.","MemberExpression","unexpectedWhitespace",{"range":"689","text":"690"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Default' is defined but never used.","'ClubAssociation' is defined but never used.","'aboutMenu' is defined but never used.","'Mobileview' is defined but never used.",["687"],["688"],"'ApiCall' is defined but never used.","'commons' is defined but never used.","'tname' is assigned a value but never used.","Array.prototype.sort() expects a value to be returned at the end of arrow function.","Expected '!==' and instead saw '!='.","'AssignmentIcon' is defined but never used.","'subscribeEvent' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["691","692"],["693","694"],"Unnecessary escape character: \\!.",["695","696"],"Unnecessary escape character: \\$.",["697","698"],"Unnecessary escape character: \\*.",["699","700"],["701","702"],["703","704"],["705","706"],"'CardContent' is defined but never used.","'CardMedia' is defined but never used.","'ScheduleIcon' is defined but never used.","'Card' is defined but never used.","'Link' is defined but never used.","'makeStyles' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'tournamentId' is assigned a value but never used.","Unnecessary escape character: \\/.",["707","708"],["709","710"],["711","712"],["713","714"],"'buttonArr' is assigned a value but never used.","'loading' is assigned a value but never used.",["687"],["688"],["687"],["688"],"'Component' is defined but never used.","'classes' is assigned a value but never used.","'value' is assigned a value but never used.",["687"],["688"],["715","716"],["717","718"],["719","720"],["721","722"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","'Legend' is defined but never used.","no-global-assign","no-unsafe-negation",[11083,11085],".",{"messageId":"723","fix":"724","desc":"725"},{"messageId":"726","fix":"727","desc":"728"},{"messageId":"723","fix":"729","desc":"725"},{"messageId":"726","fix":"730","desc":"728"},{"messageId":"723","fix":"731","desc":"725"},{"messageId":"726","fix":"732","desc":"728"},{"messageId":"723","fix":"733","desc":"725"},{"messageId":"726","fix":"734","desc":"728"},{"messageId":"723","fix":"735","desc":"725"},{"messageId":"726","fix":"736","desc":"728"},{"messageId":"723","fix":"737","desc":"725"},{"messageId":"726","fix":"738","desc":"728"},{"messageId":"723","fix":"739","desc":"725"},{"messageId":"726","fix":"740","desc":"728"},{"messageId":"723","fix":"741","desc":"725"},{"messageId":"726","fix":"742","desc":"728"},{"messageId":"723","fix":"743","desc":"725"},{"messageId":"726","fix":"744","desc":"728"},{"messageId":"723","fix":"745","desc":"725"},{"messageId":"726","fix":"746","desc":"728"},{"messageId":"723","fix":"747","desc":"725"},{"messageId":"726","fix":"748","desc":"728"},{"messageId":"723","fix":"749","desc":"725"},{"messageId":"726","fix":"750","desc":"728"},{"messageId":"723","fix":"751","desc":"725"},{"messageId":"726","fix":"752","desc":"728"},{"messageId":"723","fix":"753","desc":"725"},{"messageId":"726","fix":"754","desc":"728"},{"messageId":"723","fix":"755","desc":"725"},{"messageId":"726","fix":"756","desc":"728"},{"messageId":"723","fix":"757","desc":"725"},{"messageId":"726","fix":"758","desc":"728"},"removeEscape",{"range":"759","text":"760"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"761","text":"762"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"763","text":"760"},{"range":"764","text":"762"},{"range":"765","text":"760"},{"range":"766","text":"762"},{"range":"767","text":"760"},{"range":"768","text":"762"},{"range":"769","text":"760"},{"range":"770","text":"762"},{"range":"771","text":"760"},{"range":"772","text":"762"},{"range":"773","text":"760"},{"range":"774","text":"762"},{"range":"775","text":"760"},{"range":"776","text":"762"},{"range":"777","text":"760"},{"range":"778","text":"762"},{"range":"779","text":"760"},{"range":"780","text":"762"},{"range":"781","text":"760"},{"range":"782","text":"762"},{"range":"783","text":"760"},{"range":"784","text":"762"},{"range":"785","text":"760"},{"range":"786","text":"762"},{"range":"787","text":"760"},{"range":"788","text":"762"},{"range":"789","text":"760"},{"range":"790","text":"762"},{"range":"791","text":"760"},{"range":"792","text":"762"},[413,414],"",[413,413],"\\",[433,434],[433,433],[827,828],[827,827],[831,832],[831,831],[835,836],[835,835],[1009,1010],[1009,1009],[1013,1014],[1013,1013],[1017,1018],[1017,1017],[1688,1689],[1688,1688],[1708,1709],[1708,1708],[1726,1727],[1726,1726],[1745,1746],[1745,1745],[1841,1842],[1841,1841],[1861,1862],[1861,1861],[1879,1880],[1879,1879],[1898,1899],[1898,1898]]